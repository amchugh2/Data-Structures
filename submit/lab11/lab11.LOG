Script started on 2020-04-23 14:56:16-04:00 [TERM="xterm" TTY="/dev/pts/10" COLUMNS="100" LINES="35"]
amchugh2@remote06:~/i240b/submit/lab11$ touch balanced.cc
amchugh2@remote06:~/i240b/submit/lab11$ vim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 0L, 0C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                                   [3;1H~                                                                                                   [4;1H~                                                                                                   [5;1H~                                                                                                   [6;1H~                                                                                                   [7;1H~                                                                                                   [8;1H~                                                                                                   [9;1H~                                                                                                   [10;1H~                                                                                                   [11;1H~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [m[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;1H[K[35;1H:[?2004h[?25h [?25l[1;1H[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;73H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[1;1H[27m[23m[29m[m[30m[47m[H[2J[2;1H[1m[34m~                                                                                                   [3;1H~                                                                                                   [4;1H~                                                                                                   [5;1H~                                                                                                   [6;1H~                                                                                                   [7;1H~                                                                                                   [8;1H~                                                                                                   [9;1H~                                                                                                   [10;1H~                                                                                                   [11;1H~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [m[30m[47m[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H~@k[1;1H[35;73H   [1;1H[35;1H[1m-- INSERT --[m[30m[47m[35;83H[K[35;83H0,1[11CAll[1;1H[?25h[?25l<[35;83H1,2[1;2H[?25h[?25l[1;1H[K[35;85H1[1;1H[?25h[?25l@[35;85H2[1;2H[?25h[?25l[1;1H[K[35;85H1[1;1H[?25h[?25l#[35;85H2[1;2H[?25h[?25li[35;85H3[1;3H[?25h[?25ln[35;85H4[1;4H[?25h[?25lc[35;85H5[1;5H[?25h[?25ll[35;85H6[1;6H[?25h[?25lu[35;85H7[1;7H[?25h[?25le[35;85H8[1;8H[?25h[?25l[35;85H9[1;9H[?25h[?25l[35;85H8[1;8H[?25h[?25l[1;7H[K[35;85H7[1;7H[?25h[?25ld[35;85H8[1;8H[?25h[?25le[35;85H9[1;9H[?25h[?25l[35;85H10[1;10H[?25h[?25l[35m#include <[m[30m[47m[35;86H1[1;11H[?25h[?25ls[35;86H2[1;12H[?25h[?25lt[35;86H3[1;13H[?25h[?25ld[35;86H4[1;14H[?25h[?25li[35;86H5[1;15H[?25h[?25lo[35;86H6[1;16H[?25h[?25l.[35;86H7[1;17H[?25h[?25li[35;86H8[1;18H[?25h[?25lo[35;86H9[1;19H[?25h[?25l[1;10H[31m<stdio.io>[m[30m[47m[35;85H20[1;20H[?25h[?25l[2;1H[K[35;83H2,1 [2;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;83H1,20[1;20H[?25h[?25l[1;10H[35m<[m[30m[47mstdio.io[1;19H[K[35;85H19[1;19H[?25h[?25l[1;18H[K[35;86H8[1;18H[?25h[?25l[1;16H[K[35;86H6[1;16H[?25h[?25l[1;15H[K[35;86H5[1;15H[?25h[?25l[1;14H[K[35;86H4[1;14H[?25h[?25ld[35;86H5[1;15H[?25h[?25le[35;86H6[1;16H[?25h[?25lf[35;86H7[1;17H[?25h[?25l.[35;86H8[1;18H[?25h[?25lh[35;86H9[1;19H[?25h[?25l[1;10H[31m<stddef.h>[m[30m[47m[35;85H20[1;20H[?25h[?25l[2;1H[K[35;83H2,1 [2;1H[?25h[?25l#[35;85H2[2;2H[?25h[?25li[35;85H3[2;3H[?25h[?25ln[35;85H4[2;4H[?25h[?25lc[35;85H5[2;5H[?25h[?25ll[35;85H6[2;6H[?25h[?25lu[35;85H7[2;7H[?25h[?25ld[35;85H8[2;8H[?25h[?25le[35;85H9[2;9H[?25h[?25l[35;85H10[2;10H[?25h[?25l[35m#include <[m[30m[47m[35;86H1[2;11H[?25h[?25ls[35;86H2[2;12H[?25h[?25lt[35;86H3[2;13H[?25h[?25ld[35;86H4[2;14H[?25h[?25ll[35;86H5[2;15H[?25h[?25li[35;86H6[2;16H[?25h[?25lb[35;86H7[2;17H[?25h[?25l.[35;86H8[2;18H[?25h[?25lh[35;86H9[2;19H[?25h[?25l?[35;85H20[2;20H[?25h[?25l[3;1H[K[35;83H3,1 [3;1H[?25h[?25l#[35;85H2[3;2H[?25h[?25l[3;1H[K[35;85H1[3;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;83H2,20[2;20H[?25h[?25l[2;19H[K[35;85H19[2;19H[?25h[?25l[2;10H[31m<stdlib.h>[m[30m[47m[35;85H20[2;20H[?25h[?25l[3;1H[K[35;83H3,1 [3;1H[?25h[?25l#[35;85H2[3;2H[?25h[?25li[35;85H3[3;3H[?25h[?25ln[35;85H4[3;4H[?25h[?25lc[35;85H5[3;5H[?25h[?25ll[35;85H6[3;6H[?25h[?25lu[35;85H7[3;7H[?25h[?25ld[35;85H8[3;8H[?25h[?25le[35;85H10[3;10H[?25h[?25l[35m#include <[m[30m[47m[35;86H1[3;11H[?25h[?25ls[35;86H2[3;12H[?25h[?25lt[35;86H3[3;13H[?25h[?25ld[35;86H4[3;14H[?25h[?25li[35;86H5[3;15H[?25h[?25lo[35;86H6[3;16H[?25h[?25l.[35;86H7[3;17H[?25h[?25lh[35;86H8[3;18H[?25h[?25l?[35;86H9[3;19H[?25h[?25l[3;18H[K[35;86H8[3;18H[?25h[?25l[3;10H[31m<stdio.h>[m[30m[47m[35;86H9[3;19H[?25h[?25l[4;1H[K[35;83H4,1 [4;1H[?25h[?25l[5;1H[K[35;83H5[5;1H[?25h[?25lp[35;85H2[5;2H[?25h[?25lu[35;85H3[5;3H[?25h[?25lb[35;85H4[5;4H[?25h[?25ll[35;85H5[5;5H[?25h[?25li[35;85H6[5;6H[?25h[?25l[33mpublic[m[30m[47m[35;85H7[5;7H[?25h[?25l cl[35;85H10[5;10H[?25h[?25la[35;86H1[5;11H[?25h[?25ls[35;86H2[5;12H[?25h[?25l[32mclass[m[30m[47m[35;86H3[5;13H[?25h[?25l[35;86H4[5;14H[?25h[?25lS[35;86H5[5;15H[?25h[?25lt[35;86H6[5;16H[?25h[?25la[35;86H7[5;17H[?25h[?25lc[35;86H8[5;18H[?25h[?25lk[35;86H9[5;19H[?25h[?25l[35;85H20[5;20H[?25h[?25l{[35;86H1[5;21H[?25h[?25l
        [6;9H[K[35;83H6,2-9[6;9H[?25h[?25li[35;85H3-10[6;10H[?25h[?25ln[35;85H4-11[6;11H[?25h[?25l[32mint[m[30m[47m[35;85H5-12[6;12H[?25h[?25l[35;85H6-13[6;13H[?25h[?25lm[35;85H7-14[6;14H[?25h[?25la[35;85H8-15[6;15H[?25h[?25lx[35;85H9-16[6;16H[?25h[?25l_[35;85H10-17[6;17H[?25h[?25ls[35;86H1-18[6;18H[?25h[?25li[35;86H2-19[6;19H[?25h[?25lz[35;86H3-20[6;20H[?25h[?25le[35;86H4-21[6;21H[?25h[?25l;[35;86H5-22[6;22H[?25h[?25l
        [7;9H[K[35;83H7,2-9  [7;9H[?25h[?25li[35;85H3-10[7;10H[?25h[?25ln[35;85H4-11[7;11H[?25h[?25l[32mint[m[30m[47m[35;85H5-12[7;12H[?25h[?25l[35;85H6-13[7;13H[?25h[?25lt[35;85H7-14[7;14H[?25h[?25lo[35;85H8-15[7;15H[?25h[?25lp[35;85H9-16[7;16H[?25h[?25l;[35;85H10-17[7;17H[?25h[?25l
        [8;9H[K[35;83H8,2-9  [8;9H[?25h[?25lS[35;85H3-10[8;10H[?25h[?25lt[35;85H4-11[8;11H[?25h[?25lr[35;85H5-12[8;12H[?25h[?25li[35;85H6-13[8;13H[?25h[?25ln[35;85H7-14[8;14H[?25h[?25l[8;13H[K[35;85H6-13[8;13H[?25h[?25l[8;12H[K[35;85H5-12[8;12H[?25h[?25l[8;11H[K[35;85H4-11[8;11H[?25h[?25l[8;10H[K[35;85H3-10[8;10H[?25h[?25l[8;9H[K[35;85H2-9 [8;9H[?25h[?25lp[35;85H3-10[8;10H[?25h[?25lr[35;85H4-11[8;11H[?25h[?25li[35;85H5-12[8;12H[?25h[?25lv[35;85H6-13[8;13H[?25h[?25la[35;85H7-14[8;14H[?25h[?25lt[35;85H8-15[8;15H[?25h[?25l[33mprivate[m[30m[47m[35;85H9-16[8;16H[?25h[?25l[35;85H10-17[8;17H[?25h[?25lS[35;86H1-18[8;18H[?25h[?25lt[35;86H2-19[8;19H[?25h[?25lr[35;86H3-20[8;20H[?25h[?25li[35;86H4-21[8;21H[?25h[?25ln[35;86H5-22[8;22H[?25h[?25lg[35;86H6-23[8;23H[?25h[?25l[35;86H7-24[8;24H[?25h[?25la[35;86H8-25[8;25H[?25h[?25lr[35;86H9-26[8;26H[?25h[?25lr[35;85H20-27[8;27H[?25h[?25l[[35;86H1-28[8;28H[?25h[?25l][46m[][m[30m[47m[35;86H2-29[8;29H[?25h[?25l;[][35;86H3-30[8;30H[?25h[?25l
        [9;9H[K[35;83H9,2-9  [9;9H[?25h[?25l}[5;20H[46m{[9;1H}[m[30m[47m[35;86H  [9;2H[?25h[?25l[10;1H[K[5;20H{[9;1H}[35;83H10,1[10;1H[?25h[?25l[35;86H2-9[10;9H[?25h[?25lp[35;86H3-10[10;10H[?25h[?25lu[35;86H4-11[10;11H[?25h[?25lb[35;86H5-12[10;12H[?25h[?25ll[35;86H6-13[10;13H[?25h[?25li[35;86H7-14[10;14H[?25h[?25l[33mpublic[m[30m[47m[35;86H8-15[10;15H[?25h[?25l[35;86H9-16[10;16H[?25h[?25lS[35;86H10-17[10;17H[?25h[?25lt[35;87H1-18[10;18H[?25h[?25la[35;87H2-19[10;19H[?25h[?25lc[35;87H3-20[10;20H[?25h[?25lk[35;87H4-21[10;21H[?25h[?25l[35;87H5-22[10;22H[?25h[?25l{[35;87H6-23[10;23H[?25h[?25li[35;87H7-24[10;24H[?25h[?25ln[35;87H8-25[10;25H[?25h[?25l[32mint[m[30m[47m[35;87H9-26[10;26H[?25h[?25l[35;86H20-27[10;27H[?25h[?25ln[35;87H1-28[10;28H[?25h[?25l}[10;22H[46m{[5C}[m[30m[47m[35;87H2-29[10;29H[?25h[?25l[10;22H{[5C}[35;87H3-30[10;30H[?25h[?25l[35;87H4-31[10;31H[?25h[?25l{[35;87H5-32[10;32H[?25h[?25l[10;31H[K[35;87H4-31[10;31H[?25h[?25l[35;87H3-30[10;30H[?25h[?25l{[35;87H4-31[10;31H[?25h[?25l
                [11;17H[K[35;84H1,3-17 [11;17H[?25h[?25lm[35;86H4-18[11;18H[?25h[?25la[35;86H5-19[11;19H[?25h[?25lx[35;86H6-20[11;20H[?25h[?25l_[35;86H7-21[11;21H[?25h[?25ls[35;86H8-22[11;22H[?25h[?25li[35;86H9-23[11;23H[?25h[?25lz[35;86H10-24[11;24H[?25h[?25le[35;87H1-25[11;25H[?25h[?25l[35;87H2-26[11;26H[?25h[?25l=[35;87H3-27[11;27H[?25h[?25l[35;87H4-28[11;28H[?25h[?25ln[35;87H5-29[11;29H[?25h[?25l;[35;87H6-30[11;30H[?25h[?25l
                [12;17H[K[35;84H2,3-17 [12;17H[?25h[?25la[35;86H4-18[12;18H[?25h[?25lr[35;86H5-19[12;19H[?25h[?25lr[35;86H6-20[12;20H[?25h[?25l[35;86H7-21[12;21H[?25h[?25l=[35;86H8-22[12;22H[?25h[?25l[35;86H9-23[12;23H[?25h[?25ln[35;86H10-24[12;24H[?25h[?25le[35;87H1-25[12;25H[?25h[?25l[33mnew[m[30m[47m[35;87H2-26[12;26H[?25h[?25l[35;87H3-27[12;27H[?25h[?25lS[35;87H4-28[12;28H[?25h[?25lt[35;87H5-29[12;29H[?25h[?25lr[35;87H6-30[12;30H[?25h[?25li[35;87H7-31[12;31H[?25h[?25ln[35;87H8-32[12;32H[?25h[?25lg[35;87H9-33[12;33H[?25h[?25l[35;86H20-34[12;34H[?25h[?25l[35;86H19-33[12;33H[?25h[?25l[[35;86H20-34[12;34H[?25h[?25lm[35;87H1-35[12;35H[?25h[?25la[35;87H2-36[12;36H[?25h[?25lx[35;87H3-37[12;37H[?25h[?25l_[35;87H4-38[12;38H[?25h[?25ls[35;87H5-39[12;39H[?25h[?25li[35;87H6-40[12;40H[?25h[?25lz[35;87H7-41[12;41H[?25h[?25le[35;87H8-42[12;42H[?25h[?25l][12;33H[46m[[8C][m[30m[47m[35;87H9-43[12;43H[?25h[?25l;[12;33H[[8C][35;86H30-44[12;44H[?25h[?25l
                [13;17H[K[35;84H3,3-17 [13;17H[?25h[?25lt[35;86H4-18[13;18H[?25h[?25lo[35;86H5-19[13;19H[?25h[?25lp[35;86H6-20[13;20H[?25h[?25l[35;86H7-21[13;21H[?25h[?25l=[35;86H8-22[13;22H[?25h[?25l[35;86H9-23[13;23H[?25h[?25l[31m0[m[30m[47m[35;86H10-24[13;24H[?25h[?25l:[35;87H1-25[13;25H[?25h[?25l[12;33H[46m[[8C][m[30m[47m[35;84H2,19-33[12;33H[?25h[?25l[46m [m[30m[47m[max_siz[46me[m[30m[47m];[12;33H [46m[[m[30m[47m[7Ce[46m][m[30m[47m[35;86H20-34[12;34H[?25h[?25l[[8C][35;84H3,11-25[13;25H[?25h[?25l[13;24H[K[35;87H0-24[13;24H[?25h[?25l;[35;87H1-25[13;25H[?25h[?25l
                [14;17H[K[35;84H4,3-17 [14;17H[?25h[?25l[14;9H}[10;30H[46m{[14;9H}[m[30m[47m[35;89H0[14;10H[?25h[?25l[15;1H[K[10;30H{[14;9H}[35;84H5,1   [15;1H[?25h[?25l[16;1H[K[35;84H6[16;1H[?25h[?25l[35;86H2-9[16;9H[?25h[?25lp[35;86H3-10[16;10H[?25h[?25lu[35;86H4-11[16;11H[?25h[?25lb[35;86H5-12[16;12H[?25h[?25ll[35;86H6-13[16;13H[?25h[?25li[35;86H7-14[16;14H[?25h[?25l[33mpublic[m[30m[47m[35;86H8-15[16;15H[?25h[?25l[35;86H9-16[16;16H[?25h[?25lb[35;86H10-17[16;17H[?25h[?25lo[35;87H1-18[16;18H[?25h[?25lo[35;87H2-19[16;19H[?25h[?25l[32mbool[m[30m[47m[35;87H3-20[16;20H[?25h[?25lboole[35;87H4-21[16;21H[?25h[?25la[35;87H5-22[16;22H[?25h[?25ln[35;87H6-23[16;23H[?25h[?25l[35;87H7-24[16;24H[?25h[?25l[35;87H6-23[16;23H[?25h[?25l[16;22H[K[35;87H5-22[16;22H[?25h[?25l[16;21H[K[35;87H4-21[16;21H[?25h[?25l[32mbool[m[30m[47m[16;20H[K[35;87H3-20[16;20H[?25h[?25lboo[16;19H[K[35;87H2-19[16;19H[?25h[?25l[16;18H[K[35;87H1-18[16;18H[?25h[?25l[16;17H[K[35;87H0-17[16;17H[?25h[?25l[16;16H[K[35;86H9-16 [16;16H[?25h[?25lB[35;86H10-17[16;17H[?25h[?25lo[35;87H1-18[16;18H[?25h[?25lo[35;87H2-19[16;19H[?25h[?25ll[35;87H3-20[16;20H[?25h[?25le[35;87H4-21[16;21H[?25h[?25la[35;87H5-22[16;22H[?25h[?25ln[35;87H6-23[16;23H[?25h[?25l[35;87H7-24[16;24H[?25h[?25le[35;87H8-25[16;25H[?25h[?25lm[35;87H9-26[16;26H[?25h[?25lp[35;86H20-27[16;27H[?25h[?25lt[35;87H1-28[16;28H[?25h[?25ly[35;87H2-29[16;29H[?25h[?25l([35;87H3-30[16;30H[?25h[?25l)[46m()[m[30m[47m[35;87H4-31[16;31H[?25h[?25l()[35;87H5-32[16;32H[?25h[?25l{[35;87H6-33[16;33H[?25h[?25l
                [17;17H[K[35;84H7,3-17 [17;17H[?25h[?25li[35;86H4-18[17;18H[?25h[?25l[33mif[m[30m[47m[35;86H5-19[17;19H[?25h[?25l([35;86H6-20[17;20H[?25h[?25lt[35;86H7-21[17;21H[?25h[?25lo[35;86H8-22[17;22H[?25h[?25lp[35;86H9-23[17;23H[?25h[?25l[35;86H10-24[17;24H[?25h[?25l=[35;87H1-25[17;25H[?25h[?25l=[35;87H2-26[17;26H[?25h[?25l[35;87H3-27[17;27H[?25h[?25l[31m0[m[30m[47m[35;87H4-28[17;28H[?25h[?25l)[17;19H[46m([8C)[m[30m[47m[35;87H5-29[17;29H[?25h[?25l[17;19H([8C)[35;87H6-30[17;30H[?25h[?25lr[35;87H7-31[17;31H[?25h[?25l[17;30H[K[35;87H6-30[17;30H[?25h[?25l[17;19H[46m([8C)[m[30m[47m[35;87H5-29[17;29H[?25h[?25l
                        [18;25H[K[17;19H([8C)[35;84H8,4-25 [18;25H[?25h[?25lr[35;86H5-26[18;26H[?25h[?25le[35;86H6-27[18;27H[?25h[?25lt[35;86H7-28[18;28H[?25h[?25lu[35;86H8-29[18;29H[?25h[?25lr[35;86H9-30[18;30H[?25h[?25l[33mreturn[m[30m[47m[35;86H10-31[18;31H[?25h[?25l[35;87H1-32[18;32H[?25h[?25lt[35;87H2-33[18;33H[?25h[?25lr[35;87H3-34[18;34H[?25h[?25lu[35;87H4-35[18;35H[?25h[?25l[31mtrue[m[30m[47m[35;87H5-36[18;36H[?25h[?25l;[35;87H6-37[18;37H[?25h[?25l
                [19;17H[K[35;84H9,3-17 [19;17H[?25h[?25l[19;9H}[16;32H[46m{[19;9H}[m[30m[47m[35;89H0[19;10H[?25h[?25l[16;32H{[17;19H[46m([8C)[m[30m[47m[19;9H}[35;84H7,15-29[17;29H[?25h[?25l{[17;19H([8C)[46m{[19;9H}[m[30m[47m[35;87H6-30[17;30H[?25h[?25l{[19;9H}[35;84H9,1    [19;1H[?25h[?25l[8C [7C}[35;86H2-9[19;9H[?25h[?25l[17;29H[46m{[19;17H}[m[30m[47m[35;86H4-18[19;18H[?25h[?25l
                [20;17H[K[17;29H{[19;17H}[35;83H20,3-17[20;17H[?25h[?25le[35;86H4-18[20;18H[?25h[?25ll[35;86H5-19[20;19H[?25h[?25ls[35;86H6-20[20;20H[?25h[?25l[33melse[m[30m[47m[35;86H7-21[20;21H[?25h[?25l[35;86H8-22[20;22H[?25h[?25l{[35;86H9-23[20;23H[?25h[?25l
                        [21;25H[K[35;84H1,4-25[21;25H[?25h[?25lr[35;86H5-26[21;26H[?25h[?25le[35;86H6-27[21;27H[?25h[?25lt[35;86H7-28[21;28H[?25h[?25lu[35;86H8-29[21;29H[?25h[?25lr[35;86H9-30[21;30H[?25h[?25l[33mreturn[m[30m[47m[35;86H10-31[21;31H[?25h[?25l[35;87H1-32[21;32H[?25h[?25lf[35;87H2-33[21;33H[?25h[?25la[35;87H3-34[21;34H[?25h[?25ll[35;87H4-35[21;35H[?25h[?25ls[35;87H5-36[21;36H[?25h[?25l[31mfalse[m[30m[47m[35;87H6-37[21;37H[?25h[?25l:[35;87H7-38[21;38H[?25h[?25l[21;37H[K[35;87H6-37[21;37H[?25h[?25l;[35;87H7-38[21;38H[?25h[?25l
                        [22;25H[K[35;84H2,4-25 [22;25H[?25h[?25l[22;17H}[20;22H[46m{[22;17H}[m[30m[47m[35;88H18[22;18H[?25h[?25l
                [23;17H[K[20;22H{[22;17H}[35;84H3,3-17[23;17H[?25h[?25l[23;9H}[16;32H[46m{[23;9H}[m[30m[47m[35;89H0[23;10H[?25h[?25l[24;1H[K[16;32H{[23;9H}[35;84H4,1   [24;1H[?25h[?25l[25;1H[K[35;84H5[25;1H[?25h[?25l[35;86H2-9[25;9H[?25h[?25lp[35;86H3-10[25;10H[?25h[?25lu[35;86H4-11[25;11H[?25h[?25lb[35;86H5-12[25;12H[?25h[?25ll[35;86H6-13[25;13H[?25h[?25li[35;86H7-14[25;14H[?25h[?25l[33mpublic[m[30m[47m[35;86H8-15[25;15H[?25h[?25l[35;86H9-16[25;16H[?25h[?25lv[35;86H10-17[25;17H[?25h[?25lo[35;87H1-18[25;18H[?25h[?25li[35;87H2-19[25;19H[?25h[?25l[32mvoid[m[30m[47m[35;87H3-20[25;20H[?25h[?25l[35;87H4-21[25;21H[?25h[?25lp[35;87H5-22[25;22H[?25h[?25lu[35;87H6-23[25;23H[?25h[?25ls[35;87H7-24[25;24H[?25h[?25lh[35;87H8-25[25;25H[?25h[?25l([35;87H9-26[25;26H[?25h[?25lS[35;86H20-27[25;27H[?25h[?25lt[35;87H1-28[25;28H[?25h[?25lr[35;87H2-29[25;29H[?25h[?25li[35;87H3-30[25;30H[?25h[?25ln[35;87H4-31[25;31H[?25h[?25lg[35;87H5-32[25;32H[?25h[?25l[35;87H6-33[25;33H[?25h[?25l[35;83H12,19[12;33H[?25h[?25l[max_size];[12;44H[K[12;33H[46m[[8C][12;33H[?25h[?25l[m[30m[47m[[8C][35;83H25,26[25;33H[?25h[?25ls[35;87H7-34[25;34H[?25h[?25lt[35;87H8-35[25;35H[?25h[?25lr[35;87H9-36[25;36H[?25h[?25l([35;86H30-37[25;37H[?25h[?25l[25;36H[K[35;86H29-36[25;36H[?25h[?25l)[25;25H[46m([10C)[m[30m[47m[35;86H30-37[25;37H[?25h[?25l[25;25H([10C)[35;83H3,19    [3;19H[?25h[?25l[4;34r[4;1H[L[1;35r[35;83H[K[35;83H4,1[11CAll[4;1H[?25h[?25l[5;34r[5;1H[L[1;35r[35;83H[K[35;83H5,1[11CAll[5;1H[?25h[?25lU[35;85H2[5;2H[?25h[?25l[5;1H[K[35;85H1[5;1H[?25h[?25lu[35;85H2[5;2H[?25h[?25ls[35;85H3[5;3H[?25h[?25li[35;85H4[5;4H[?25h[?25ln[35;85H5[5;5H[?25h[?25l[33musing[m[30m[47m[35;85H6[5;6H[?25h[?25l[35;85H7[5;7H[?25h[?25ln[35;85H8[5;8H[?25h[?25la[35;85H9[5;9H[?25h[?25lm[35;85H10[5;10H[?25h[?25le[35;86H1[5;11H[?25h[?25ls[35;86H2[5;12H[?25h[?25lp[35;86H3[5;13H[?25h[?25la[35;86H4[5;14H[?25h[?25lc[35;86H5[5;15H[?25h[?25l[5;7H[32mnamespace[m[30m[47m[35;86H6[5;16H[?25h[?25l[35;86H7[5;17H[?25h[?25la[35;86H8[5;18H[?25h[?25ls[35;86H9[5;19H[?25h[?25l[35;85H20[5;20H[?25h[?25ls[35;86H1[5;21H[?25h[?25lt[35;86H2[5;22H[?25h[?25ld[35;86H3[5;23H[?25h[?25l;[35;86H4[5;24H[?25h[?25l[35;86H3[5;23H[?25h[?25l[35;86H2[5;22H[?25h[?25l[35;86H0[5;20H[?25h[?25l[35;85H19[5;19H[?25h[?25l std;[5;23H[K[35;86H8[5;18H[?25h[?25l std;[5;22H[K[35;86H7[5;17H[?25h[?25lstd;[5;21H[K[35;86H6[5;16H[?25h[?25l[27;25H[46m([10C)[m[30m[47m[35;83H27,30-37[27;37H[?25h[?25l{[27;25H([10C)[35;87H1-38[27;38H[?25h[?25l
                [28;17H[K[35;84H8,3-17 [28;17H[?25h[?25la[35;86H4-18[28;18H[?25h[?25lr[35;86H5-19[28;19H[?25h[?25lr[35;86H6-20[28;20H[?25h[?25la[35;86H7-21[28;21H[?25h[?25ly[35;86H8-22[28;22H[?25h[?25l[[35;86H9-23[28;23H[?25h[?25lt[35;86H10-24[28;24H[?25h[?25lo[35;87H1-25[28;25H[?25h[?25lp[35;87H2-26[28;26H[?25h[?25l][46m[[m[30m[47mtop[46m][m[30m[47m[35;87H3-27[28;27H[?25h[?25l[28;26H[K[28;22H[[35;87H2-26[28;26H[?25h[?25l[28;25H[K[35;87H1-25[28;25H[?25h[?25l[28;24H[K[35;87H0-24[28;24H[?25h[?25l[28;23H[K[35;86H9-23 [28;23H[?25h[?25l[28;22H[K[35;86H8-22[28;22H[?25h[?25l[28;21H[K[35;86H7-21[28;21H[?25h[?25l[28;20H[K[35;86H6-20[28;20H[?25h[?25l[[35;86H7-21[28;21H[?25h[?25lt[35;86H8-22[28;22H[?25h[?25lo[35;86H9-23[28;23H[?25h[?25lp[35;86H10-24[28;24H[?25h[?25l][46m[[m[30m[47mtop[46m][m[30m[47m[35;87H1-25[28;25H[?25h[?25l[top][35;87H2-26[28;26H[?25h[?25l=[35;87H3-27[28;27H[?25h[?25l[35;87H4-28[28;28H[?25h[?25ls[35;87H5-29[28;29H[?25h[?25lt[35;87H6-30[28;30H[?25h[?25lr[35;87H7-31[28;31H[?25h[?25l;[35;87H8-32[28;32H[?25h[?25l
                [29;17H[K[35;84H9,3-17 [29;17H[?25h[?25lt[35;86H4-18[29;18H[?25h[?25lo[35;86H5-19[29;19H[?25h[?25lp[35;86H6-20[29;20H[?25h[?25l+[35;86H7-21[29;21H[?25h[?25l+[35;86H8-22[29;22H[?25h[?25l;[35;86H9-23[29;23H[?25h[?25l
                [30;17H[K[35;83H30,3-17[30;17H[?25h[?25l[30;9H}[27;37H[46m{[30;9H}[m[30m[47m[35;89H0[30;10H[?25h[?25l[31;1H[K[27;37H{[30;9H}[35;84H1,1   [31;1H[?25h[?25l[32;1H[K[35;84H2[32;1H[?25h[?25l[35;86H2-9[32;9H[?25h[?25lp[35;86H3-10[32;10H[?25h[?25lu[35;86H4-11[32;11H[?25h[?25lb[35;86H5-12[32;12H[?25h[?25ll[35;86H6-13[32;13H[?25h[?25li[35;86H7-14[32;14H[?25h[?25l[33mpublic[m[30m[47m[35;86H8-15[32;15H[?25h[?25l[35;86H9-16[32;16H[?25h[?25lv[35;86H10-17[32;17H[?25h[?25lo[35;87H1-18[32;18H[?25h[?25li[35;87H2-19[32;19H[?25h[?25l[32mvoid[m[30m[47m[35;87H3-20[32;20H[?25h[?25l[35;87H4-21[32;21H[?25h[?25lp[35;87H5-22[32;22H[?25h[?25lo[35;87H6-23[32;23H[?25h[?25lp[35;87H7-24[32;24H[?25h[?25l([35;87H8-25[32;25H[?25h[?25l)[46m()[m[30m[47m[35;87H9-26[32;26H[?25h[?25l()[35;86H20-27[32;27H[?25h[?25l[46m()[m[30m[47m[35;86H19-26[32;26H[?25h[?25l{()[35;86H20-27[32;27H[?25h[?25l
                [33;17H[K[35;84H3,3-17 [33;17H[?25h[?25li[35;86H4-18[33;18H[?25h[?25l[33mif[m[30m[47m[35;86H5-19[33;19H[?25h[?25l([35;86H6-20[33;20H[?25h[?25lt[35;86H7-21[33;21H[?25h[?25lo[35;86H8-22[33;22H[?25h[?25lp[35;86H9-23[33;23H[?25h[?25l[35;86H10-24[33;24H[?25h[?25l>[35;87H1-25[33;25H[?25h[?25l[35;87H2-26[33;26H[?25h[?25l[31m0[m[30m[47m[35;87H3-27[33;27H[?25h[?25l)[33;19H[46m([7C)[m[30m[47m[35;87H4-28[33;28H[?25h[?25l{[33;19H([7C)[35;87H5-29[33;29H[?25h[?25l
                        [34;25H[K[35;84H4,4-25 [34;25H[?25h[?25lr[35;86H5-26[34;26H[?25h[?25le[35;86H6-27[34;27H[?25h[?25lt[35;86H7-28[34;28H[?25h[?25lu[35;86H8-29[34;29H[?25h[?25lr[35;86H9-30[34;30H[?25h[?25l[33mreturn[m[30m[47m[35;86H10-31[34;31H[?25h[?25l[35;87H1-32[34;32H[?25h[?25la[35;87H2-33[34;33H[?25h[?25lr[35;87H3-34[34;34H[?25h[?25lr[35;87H4-35[34;35H[?25h[?25l[[35;87H5-36[34;36H[?25h[?25lt[35;87H6-37[34;37H[?25h[?25lo[35;87H7-38[34;38H[?25h[?25lp[35;87H8-39[34;39H[?25h[?25l-[35;87H9-40[34;40H[?25h[?25l[31m1[m[30m[47m[35;86H20-41[34;41H[?25h[?25l][34;35H[46m[[5C][m[30m[47m[35;87H1-42[34;42H[?25h[?25l;[34;35H[[5C][35;87H2-43[34;43H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H35,4-25[7CBot[34;25H[?25h[?25la[35;86H5-26[34;26H[?25h[?25lr[35;86H6-27[34;27H[?25h[?25lr[35;86H7-28[34;28H[?25h[?25l[[35;86H8-29[34;29H[?25h[?25lt[35;86H9-30[34;30H[?25h[?25lo[35;86H10-31[34;31H[?25h[?25lp[35;87H1-32[34;32H[?25h[?25l-[35;87H2-33[34;33H[?25h[?25l[31m1[m[30m[47m[35;87H3-34[34;34H[?25h[?25l][34;28H[46m[[5C][m[30m[47m[35;87H4-35[34;35H[?25h[?25l[34;28H[[5C][35;87H5-36[34;36H[?25h[?25l=[35;87H6-37[34;37H[?25h[?25l[35;87H7-38[34;38H[?25h[?25ln[35;87H8-39[34;39H[?25h[?25lu[35;87H9-40[34;40H[?25h[?25ll[35;86H20-41[34;41H[?25h[?25ll[35;87H1-42[34;42H[?25h[?25l;[35;87H2-43[34;43H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H36,4-25[7CBot[34;25H[?25h[?25lt[35;86H5-26[34;26H[?25h[?25lo[35;86H6-27[34;27H[?25h[?25lp[35;86H7-28[34;28H[?25h[?25l-[35;86H8-29[34;29H[?25h[?25l-[35;86H9-30[34;30H[?25h[?25l;[35;86H10-31[34;31H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H37,4-25[7CBot[34;25H[?25h[?25l[34;17H}[30;28H[46m{[34;17H}[m[30m[47m[35;88H18[34;18H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H38,3-17[7CBot[29;28H{[33;17H}[34;17H[?25h[?25le[35;86H4-18[34;18H[?25h[?25lk[35;86H5-19[34;19H[?25h[?25ls[35;86H6-20[34;20H[?25h[?25le[35;86H7-21[34;21H[?25h[?25l[34;20H[K[35;86H6-20[34;20H[?25h[?25l[34;19H[K[35;86H5-19[34;19H[?25h[?25ll[35;86H6-20[34;20H[?25h[?25ls[35;86H7-21[34;21H[?25h[?25le[35;86H8-22[34;22H[?25h[?25l[34;21H[K[35;86H7-21[34;21H[?25h[?25l[34;20H[K[35;86H6-20[34;20H[?25h[?25l[34;19H[K[35;86H5-19[34;19H[?25h[?25l[34;18H[K[35;86H4-18[34;18H[?25h[?25ll[35;86H5-19[34;19H[?25h[?25ls[35;86H6-20[34;20H[?25h[?25l[33melse[m[30m[47m[35;86H7-21[34;21H[?25h[?25l{[35;86H8-22[34;22H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H39,4-25[7CBot[34;25H[?25h[?25lr[35;86H5-26[34;26H[?25h[?25le[35;86H6-27[34;27H[?25h[?25lt[35;86H7-28[34;28H[?25h[?25lu[35;86H8-29[34;29H[?25h[?25lr[35;86H9-30[34;30H[?25h[?25l[33mreturn[m[30m[47m[35;86H10-31[34;31H[?25h[?25l[35;87H1-32[34;32H[?25h[?25ln[35;87H2-33[34;33H[?25h[?25lu[35;87H3-34[34;34H[?25h[?25ll[35;87H4-35[34;35H[?25h[?25ll[35;87H5-36[34;36H[?25h[?25l;[35;87H6-37[34;37H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H40,4-25[7CBot[34;25H[?25h[?25l[34;17H}[32;21H[46m{[34;17H}[m[30m[47m[35;88H18[34;18H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H41,3-17[7CBot[31;21H{[33;17H}[34;17H[?25h[?25l[34;9H}[25;26H[46m{[34;9H}[m[30m[47m[35;89H0[34;10H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H42,1[10CBot[24;26H{[33;9H}
[?25h[?25l}[35;86H2[34;2H[?25h[?25l[34;1H[K[35;86H1[34;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[24;26H[46m{[33;9H}[m[30m[47m[35;84H1,3-10[33;10H[?25h[?25l[33;9H[K[24;26H{[35;86H2-9 [33;9H[?25h[?25l[35;86H1  [33;1H[?25h[?25l[32;17H[K[33;1H[1m[34m~                                                                                                   [m[30m[47m[35;84H0,3-17[32;17H[?25h[?25l[35;86H2-9 [32;9H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;83H39,16-37[31;37H[?25h[?25l[31;36H[K[35;87H5-36[31;36H[?25h[?25l[31;35H[K[35;87H4-35[31;35H[?25h[?25l[31;33H[K[35;87H2-33[31;33H[?25h[?25l[31;32H[K[35;87H0-31[31;31H[?25h[?25lretur[31;30H[K[35;86H9-30 [31;30H[?25h[?25l[31;29H[K[35;86H8-29[31;29H[?25h[?25l[31;28H[K[35;86H7-28[31;28H[?25h[?25l[31;26H[K[35;86H5-26[31;26H[?25h[?25l[31;25H[K[35;86H4-25[31;25H[?25h[?25l[35;86H3-17[31;17H[?25h[?25l[35;86H2-9 [31;9H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H8,8-22[30;22H[?25h[?25l[30;21H[K[35;86H7-21[30;21H[?25h[?25lel[30;19H[K[35;86H5-19[30;19H[?25h[?25l[30;18H[K[35;86H4-18[30;18H[?25h[?25l[30;17H[K[35;86H3-17[30;17H[?25h[?25l[35;86H1   [30;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[25;28H[46m{[29;17H}[m[30m[47m[35;84H7,4-18[29;18H[?25h[?25l[29;17H[K[25;28H{[35;86H3-17[29;17H[?25h[?25l[35;86H2-9 [29;9H[?25h[?25l[35;86H1  [29;1H[?25h[?25l[28;30H[K[29;1H[1m[34m~                                                                                                   [m[30m[47m[35;84H6,9-30[28;30H[?25h[?25l[28;29H[K[35;86H8-29[28;29H[?25h[?25l[28;27H[K[35;86H6-27[28;27H[?25h[?25l[28;26H[K[35;86H5-26[28;26H[?25h[?25l[28;25H[K[35;86H4-25[28;25H[?25h[?25l[35;86H2-9 [28;9H[?25h[?25l[35;86H1  [28;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H5,22-43[27;43H[?25h[?25l[27;42H[K[35;87H1-42[27;42H[?25h[?25l[27;41H[K[35;87H0-41[27;41H[?25h[?25l[27;40H[K[35;86H19-40[27;40H[?25h[?25l[27;39H[K[35;87H8-39[27;39H[?25h[?25l[27;38H[K[35;87H6-37[27;37H[?25h[?25l[27;36H[K[35;87H5-36[27;36H[?25h[?25l[27;34H[K[35;87H3-34[27;34H[?25h[?25l[27;33H[K[35;87H2-33[27;33H[?25h[?25l[27;32H[K[35;87H1-32[27;32H[?25h[?25l[27;31H[K[35;87H0-31[27;31H[?25h[?25l[27;30H[K[35;86H9-30 [27;30H[?25h[?25l[27;28H[K[35;86H7-28[27;28H[?25h[?25l[27;27H[K[35;86H6-27[27;27H[?25h[?25l[27;25H[K[35;86H4-25[27;25H[?25h[?25l[35;86H3-17[27;17H[?25h[?25l[35;86H1   [27;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H4,22-43[26;43H[?25h[?25l[26;42H[K[26;35H[46m[[5C][m[30m[47m[35;87H1-42[26;42H[?25h[?25l[26;40H[K[26;35H[[35;86H19-40[26;40H[?25h[?25l[26;39H[K[35;87H8-39[26;39H[?25h[?25l[26;38H[K[35;87H7-38[26;38H[?25h[?25l[26;37H[K[35;87H6-37[26;37H[?25h[?25l[26;35H[K[35;87H4-35[26;35H[?25h[?25l[26;34H[K[35;87H3-34[26;34H[?25h[?25l[26;32H[K[35;87H1-32[26;32H[?25h[?25l[35;87H0-31[26;31H[?25h[?25lretur[26;30H[K[35;86H9-30 [26;30H[?25h[?25l[26;29H[K[35;86H8-29[26;29H[?25h[?25l[26;28H[K[35;86H7-28[26;28H[?25h[?25l[26;26H[K[35;86H5-26[26;26H[?25h[?25l[26;25H[K[35;86H4-25[26;25H[?25h[?25l[35;86H3-17[26;17H[?25h[?25l[35;86H1   [26;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H3,15-29[25;29H[?25h[?25l[25;28H[K[25;19H[46m([7C)[m[30m[47m[35;87H4-28[25;28H[?25h[?25l[25;26H[K[25;19H([35;87H2-26[25;26H[?25h[?25l[35;87H1-25[25;25H[?25h[?25l[25;24H[K[35;87H0-24[25;24H[?25h[?25l[25;22H[K[35;86H8-22 [25;22H[?25h[?25l[25;21H[K[35;86H7-21[25;21H[?25h[?25l[25;20H[K[35;86H6-20[25;20H[?25h[?25li[25;18H[K[35;86H4-18[25;18H[?25h[?25l[25;17H[K[35;86H3-17[25;17H[?25h[?25l[35;86H1   [25;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H2,20-27[24;27H[?25h[?25l[24;26H[K[24;24H[46m()[m[30m[47m[35;86H19-26[24;26H[?25h[?25l[24;25H[K[24;24H([35;87H8-25[24;25H[?25h[?25l[24;24H[K[35;87H7-24[24;24H[?25h[?25l[24;23H[K[35;87H6-23[24;23H[?25h[?25l[24;22H[K[35;87H5-22[24;22H[?25h[?25l[24;21H[K[35;87H3-20[24;20H[?25h[?25lvoi[24;19H[K[35;87H2-19[24;19H[?25h[?25l[24;18H[K[35;87H1-18[24;18H[?25h[?25l[24;16H[K[35;86H9-16 [24;16H[?25h[?25l[35;86H8-15[24;15H[?25h[?25lpubli[24;14H[K[35;86H7-14[24;14H[?25h[?25l[24;13H[K[35;86H6-13[24;13H[?25h[?25l[24;12H[K[35;86H5-12[24;12H[?25h[?25l[24;11H[K[35;86H4-11[24;11H[?25h[?25l[24;10H[K[35;86H3-10[24;10H[?25h[?25l[24;9H[K[35;86H1   [24;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H1[23;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[19;37H[46m{[22;9H}[m[30m[47m[35;84H0,3-10[22;10H[?25h[?25l[22;9H[K[19;37H{[35;86H2-9 [22;9H[?25h[?25l[35;86H1  [22;1H[?25h[?25l[21;22H[K[22;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H29,8-22[21;22H[?25h[?25l[21;21H[K[35;86H7-21[21;21H[?25h[?25l[21;20H[K[35;86H6-20[21;20H[?25h[?25l[21;18H[K[35;86H4-18[21;18H[?25h[?25l[21;17H[K[35;86H3-17[21;17H[?25h[?25l[35;86H2-9 [21;9H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H8,18-32[20;32H[?25h[?25l[20;31H[K[35;87H7-31[20;31H[?25h[?25l[20;30H[K[35;87H6-30[20;30H[?25h[?25l[20;28H[K[35;87H4-28[20;28H[?25h[?25l[35;87H3-27[20;27H[?25h[?25l[20;26H[K[35;87H2-26[20;26H[?25h[?25l[46m[[m[30m[47mtop[46m][m[30m[47m[35;87H1-25[20;25H[?25h[?25l[20;24H[K[20;20H[[35;87H0-24[20;24H[?25h[?25l[20;23H[K[35;86H9-23 [20;23H[?25h[?25l[20;22H[K[35;86H8-22[20;22H[?25h[?25l[20;20H[K[35;86H6-20[20;20H[?25h[?25l[20;19H[K[35;86H5-19[20;19H[?25h[?25l[20;17H[K[35;86H3-17[20;17H[?25h[?25l[35;86H2-9 [20;9H[?25h[?25l[35;86H1  [20;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H7,31-38[19;38H[?25h[?25l[19;37H[K[19;25H[46m([10C)[m[30m[47m[35;87H0-37[19;37H[?25h[?25l[19;36H[K[19;25H([35;86H29-36[19;36H[?25h[?25l[19;35H[K[35;87H8-35[19;35H[?25h[?25l[19;34H[K[35;87H7-34[19;34H[?25h[?25l[19;16Hvo[19;18H[K[35;86H11-18[19;18H[?25h[?25l[19;16H[K[35;86H9-16 [19;16H[?25h[?25l[35;86H8-15[19;15H[?25h[?25lpubli[19;14H[K[35;86H7-14[19;14H[?25h[?25l[19;13H[K[35;86H6-13[19;13H[?25h[?25l[19;12H[K[35;86H5-12[19;12H[?25h[?25l[19;10H[K[35;86H3-10[19;10H[?25h[?25l[19;9H[K[35;86H2-9 [19;9H[?25h[?25l[35;86H1  [19;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H6[18;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[10;32H[46m{[17;9H}[m[30m[47m[35;84H5,3-10[17;10H[?25h[?25l[17;9H[K[10;32H{[35;86H2-9 [17;9H[?25h[?25l[35;86H1  [17;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[14;22H[46m{[16;17H}[m[30m[47m[35;84H4,4-18[16;18H[?25h[?25l[16;17H[K[14;22H{[35;86H3-17[16;17H[?25h[?25l[35;86H2-9 [16;9H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H3,17-38[15;38H[?25h[?25l[15;37H[K[35;87H6-37[15;37H[?25h[?25lfals[15;36H[K[35;87H5-36[15;36H[?25h[?25l[15;34H[K[35;87H3-34[15;34H[?25h[?25l[15;33H[K[35;87H2-33[15;33H[?25h[?25l[15;32H[K[35;87H1-32[15;32H[?25h[?25l[35;87H0-31[15;31H[?25h[?25lretu[15;29H[K[35;86H8-29 [15;29H[?25h[?25l[15;28H[K[35;86H7-28[15;28H[?25h[?25l[15;27H[K[35;86H6-27[15;27H[?25h[?25l[15;26H[K[35;86H5-26[15;26H[?25h[?25l[15;25H[K[35;86H4-25[15;25H[?25h[?25l[35;86H3-17[15;17H[?25h[?25l[35;86H2-9 [15;9H[?25h[?25l[35;86H1  [15;1H[?25h[?25l[14;22H[K[15;1H[1m[34m~                                                                                                   [m[30m[47m[35;84H2,8-22[14;22H[?25h[?25l[35;86H7-21[14;21H[?25h[?25lels[14;20H[K[35;86H6-20[14;20H[?25h[?25l[14;19H[K[35;86H5-19[14;19H[?25h[?25l[14;18H[K[35;86H4-18[14;18H[?25h[?25l[14;17H[K[35;86H2-9 [14;9H[?25h[?25l[35;86H1  [14;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[11;29H[46m{[13;17H}[m[30m[47m[35;84H1,4-18[13;18H[?25h[?25l[13;17H[K[11;29H{[35;86H3-17[13;17H[?25h[?25l[35;86H2-9 [13;9H[?25h[?25l[35;86H1  [13;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H0,16-37[12;37H[?25h[?25l[12;36H[K[35;87H5-36[12;36H[?25h[?25ltru[12;35H[K[35;87H4-35[12;35H[?25h[?25l[12;34H[K[35;87H3-34[12;34H[?25h[?25l[12;33H[K[35;87H2-33[12;33H[?25h[?25l[12;32H[K[35;87H1-32[12;32H[?25h[?25l[12;25Hretur[12;30H[K[35;86H9-30 [12;30H[?25h[?25l[12;29H[K[35;86H8-29[12;29H[?25h[?25l[12;28H[K[35;86H7-28[12;28H[?25h[?25l[12;27H[K[35;86H6-27[12;27H[?25h[?25l[12;26H[K[35;86H5-26[12;26H[?25h[?25l[12;25H[K[35;86H3-17[12;17H[?25h[?25l[35;86H2-9 [12;9H[?25h[?25l[35;86H1  [12;1H[?25h[?25l[11;29H[K[12;1H[1m[34m~                                                                                                   [m[30m[47m[11;19H[46m([8C)[m[30m[47m[35;83H19,15-29[11;29H[?25h[?25l[11;27H[K[11;19H([35;87H3-27[11;27H[?25h[?25l[11;25H[K[35;87H1-25[11;25H[?25h[?25l[11;24H[K[35;87H0-24[11;24H[?25h[?25l[35;86H9-23 [11;23H[?25h[?25l[11;22H[K[35;86H8-22[11;22H[?25h[?25l[11;20H[K[35;86H6-20[11;20H[?25h[?25l[11;19H[K[35;86H5-19[11;19H[?25h[?25li[11;18H[K[35;86H4-18[11;18H[?25h[?25l[11;17H[K[35;86H3-17[11;17H[?25h[?25l[35;86H1   [11;1H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H8,26-33[10;33H[?25h[?25l[10;32H[K[35;87H5-32[10;32H[?25h[?25l[46m()[m[30m[47m[35;87H4-31[10;31H[?25h[?25l[10;30H[K[10;29H([35;87H3-30[10;30H[?25h[?25l[10;29H[K[35;87H2-29[10;29H[?25h[?25l[10;27H[K[35;87H0-27[10;27H[?25h[?25l[10;26H[K[35;86H19-26[10;26H[?25h[?25l[10;24H[K[35;87H7-24[10;24H[?25h[?25l[35;87H6-23[10;23H[?25h[?25l[10;21H[K[35;87H4-21[10;21H[?25h[?25l[10;19H[K[35;87H2-19[10;19H[?25h[?25l[10;18H[K[35;87H1-18[10;18H[?25h[?25l[10;16H[K[35;86H9-16 [10;16H[?25h[?25l[35;86H8-15[10;15H[?25h[?25lpubl[10;13H[K[35;86H6-13[10;13H[?25h[?25l[10;11H[K[35;86H4-11[10;11H[?25h[?25l[10;10H[K[35;86H3-10[10;10H[?25h[?25l[10;9H[K[35;86H2-9 [10;9H[?25h[?25l[35;86H1  [10;1H[?25h[?25l[9;1H[1m[34m~                                                                                                   [10;1H~                                                                                                   [m[30m[47m[4;30H[46m{[8;9H}[m[30m[47m[35;84H6,3-10[8;10H[?25h[?25l[8;9H[K[4;30H{[35;86H2-9 [8;9H[?25h[?25l[1m[34m~                                                                                                   [m[30m[47m[35;84H5,11-25[7;25H[?25h[?25l[7;23H[K[35;86H9-23 [7;23H[?25h[?25l[35;86H8-22[7;22H[?25h[?25l[7;21H[K[35;86H7-21[7;21H[?25h[?25l[35;86H6-20[7;20H[?25h[?25l[7;19H[K[35;86H5-19[7;19H[?25h[?25l[7;17H[K[35;86H3-17[7;17H[?25h[?25l[6;39H[K[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;84H4,25-39[6;39H[?25h[?25l[6;38H[K[35;87H4-38[6;38H[?25h[?25l[6;37H[K[35;87H3-37[6;37H[?25h[?25l[6;36H[K[35;87H2-36[6;36H[?25h[?25l[6;34H[K[35;87H0-34[6;34H[?25h[?25l[6;33H[K[35;86H19-33[6;33H[?25h[?25l[6;32H[K[35;87H8-32[6;32H[?25h[?25l[6;31H[K[35;87H7-31[6;31H[?25h[?25l[6;30H[K[35;87H6-30[6;30H[?25h[?25l[6;29H[K[35;87H5-29[6;29H[?25h[?25l[6;27H[K[35;87H3-27[6;27H[?25h[?25l[35;87H2-26[6;26H[?25h[?25lne[6;25H[K[35;87H1-25[6;25H[?25h[?25l[6;24H[K[35;87H0-24[6;24H[?25h[?25l[6;23H[K[35;86H8-22 [6;22H[?25h[?25l[6;21H[K[35;86H6-20[6;20H[?25h[?25l[6;19H[K[35;86H5-19[6;19H[?25h[?25l[6;18H[K[35;86H4-18[6;18H[?25h[?25l[6;17H[K[35;86H3-17[6;17H[?25h[?25l[35;86H2-9 [6;9H[?25h[?25l[35;86H1  [6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;9H[32mint[m[30m[47m max_size;[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H13,16-30      Bot[6;30H[?25h[?25l[6;29H[K[35;87H5-29[6;29H[?25h[?25l[6;28H[K[35;87H3-27[6;27H[?25h[?25l[6;26H[K[35;87H2-26[6;26H[?25h[?25l[35;87H1-25[6;25H[?25h[?25l[6;24H[K[35;87H0-24[6;24H[?25h[?25l[6;22H[K[35;86H8-22 [6;22H[?25h[?25l[6;21H[K[35;86H7-21[6;21H[?25h[?25l[6;19H[K[35;86H5-19[6;19H[?25h[?25l[6;18H[K[35;86H4-18[6;18H[?25h[?25l[6;17H[K[35;86H3-17[6;17H[?25h[?25l[35;86H1   [6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H[33mpublic[m[30m[47m [32mclass[m[30m[47m Stack {[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H12,24-31      Bot[6;31H[?25h[?25l[6;30H[K[6;22H[46m{[5C}[m[30m[47m[35;87H2-29[6;29H[?25h[?25l[6;28H[K[6;22H{[35;87H1-28[6;28H[?25h[?25l[6;27H[K[35;87H0-27[6;27H[?25h[?25l[35;86H19-26[6;26H[?25h[?25l[6;18H[K[35;87H1-18[6;18H[?25h[?25l[6;17H[K[35;87H0-17[6;17H[?25h[?25l[6;16H[K[35;86H9-16 [6;16H[?25h[?25l[6;9Hpubli[6;14H[K[35;86H7-14[6;14H[?25h[?25l[6;13H[K[35;86H6-13[6;13H[?25h[?25l[6;12H[K[35;86H5-12[6;12H[?25h[?25l[6;10H[K[35;86H3-10[6;10H[?25h[?25l[6;9H[K[35;86H2-9 [6;9H[?25h[?25l[35;86H1  [6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[6;1H[K[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H11,1[10CBot[6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H[33musing[m[30m[47m [32mnamespace[m[30m[47m std;[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H10,23-30      Bot[6;30H[?25h[?25l[6;29H[K[6;27H[46m[][m[30m[47m[35;87H2-29[6;29H[?25h[?25l[6;28H[K[6;27H[[35;87H1-28[6;28H[?25h[?25l[6;26H[K[35;86H19-26[6;26H[?25h[?25l[6;25H[K[35;87H8-25[6;25H[?25h[?25l[6;24H[K[35;87H6-23[6;23H[?25h[?25l[6;9Hprivat[6;15H[K[35;86H8-15 [6;15H[?25h[?25l[6;14H[K[35;86H7-14[6;14H[?25h[?25l[6;13H[K[35;86H6-13[6;13H[?25h[?25l[6;12H[K[35;86H5-12[6;12H[?25h[?25l[6;11H[K[35;86H4-11[6;11H[?25h[?25l[6;10H[K[35;86H3-10[6;10H[?25h[?25l[6;9H[K[35;86H2-9 [6;9H[?25h[?25l[35;86H1  [6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H9,10-17[7CBot[6;17H[?25h[?25l[6;16H[K[35;85H9-16 [6;16H[?25h[?25l[6;15H[K[35;85H8-15[6;15H[?25h[?25l[6;14H[K[35;85H7-14[6;14H[?25h[?25l[6;13H[K[35;85H6-13[6;13H[?25h[?25lin[6;11H[K[35;85H4-11[6;11H[?25h[?25l[6;10H[K[35;85H3-10[6;10H[?25h[?25l[6;9H[K[35;85H1   [6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[30m[47m[31m<stdio.h>[m[30m[47m[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H8,15-22[7CBot[6;22H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m[6;20H[K[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H7,20[10CBot[6;20H[?25h[?25l[35;85H19[6;19H[?25h[?25l[6;18H[K[35;86H8[6;18H[?25h[?25l[6;17H[K[35;86H7[6;17H[?25h[?25l[6;16H[K[35;86H6[6;16H[?25h[?25l[6;15H[K[35;86H5[6;15H[?25h[?25l[6;14H[K[35;86H4[6;14H[?25h[?25l[35;86H3[6;13H[?25h[?25lclas[6;12H[K[35;86H2[6;12H[?25h[?25l[6;11H[K[35;86H1[6;11H[?25h[?25l[6;10H[K[35;86H0[6;10H[?25h[?25l[6;9H[K[35;85H9 [6;9H[?25h[?25l[6;8H[K[35;85H8[6;8H[?25h[?25l[35;85H7[6;7H[?25h[?25lpubli[6;6H[K[35;85H6[6;6H[?25h[?25l[6;5H[K[35;85H5[6;5H[?25h[?25l[6;4H[K[35;85H4[6;4H[?25h[?25l[6;3H[K[35;85H3[6;3H[?25h[?25l[6;2H[K[35;85H2[6;2H[?25h[?25l[6;1H[K[35;85H1[6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m[7;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H6,1[11CAll[6;1H[?25h[?25l[35;83H3,19[3;19H[?25h[?25l[4;34r[4;1H[L[1;35r[35;83H[K[35;83H4,1[11CAll[4;1H[?25h[?25l#[35;85H2[4;2H[?25h[?25li[35;85H3[4;3H[?25h[?25ln[35;85H4[4;4H[?25h[?25lc[35;85H5[4;5H[?25h[?25ll[35;85H6[4;6H[?25h[?25lu[35;85H7[4;7H[?25h[?25ld[35;85H8[4;8H[?25h[?25le[35;85H9[4;9H[?25h[?25l[35m#include<[m[30m[47m[35;85H10[4;10H[?25h[?25ls[35;86H1[4;11H[?25h[?25lt[35;86H2[4;12H[?25h[?25la[35;86H3[4;13H[?25h[?25lc[35;86H4[4;14H[?25h[?25lk[35;86H5[4;15H[?25h[?25l[31m<stack>[m[30m[47m[35;86H6[4;16H[?25h[?25l[35;83H5,1 [5;1H[?25h[?25l[35;83H6,16[6;16H[?25h[?25l[35;83H7,1 [7;1H[?25h[?25l[8;1H[K[35;83H8[8;1H[?25h[?25lb[35;85H2[8;2H[?25h[?25lo[35;85H3[8;3H[?25h[?25lo[35;85H4[8;4H[?25h[?25l[32mbool[m[30m[47m[35;85H5[8;5H[?25h[?25l[35;85H6[8;6H[?25h[?25li[35;85H7[8;7H[?25h[?25ls[35;85H8[8;8H[?25h[?25l_[35;85H9[8;9H[?25h[?25lb[35;85H10[8;10H[?25h[?25la[35;86H1[8;11H[?25h[?25ll[35;86H2[8;12H[?25h[?25la[35;86H3[8;13H[?25h[?25ln[35;86H4[8;14H[?25h[?25lc[35;86H5[8;15H[?25h[?25le[35;86H6[8;16H[?25h[?25ld[35;86H7[8;17H[?25h[?25l([35;86H8[8;18H[?25h[?25ls[35;86H9[8;19H[?25h[?25lt[35;85H20[8;20H[?25h[?25lr[35;86H1[8;21H[?25h[?25li[35;86H2[8;22H[?25h[?25ln[35;86H3[8;23H[?25h[?25lg[35;86H4[8;24H[?25h[?25l[35;86H5[8;25H[?25h[?25l[35;86H4[8;24H[?25h[?25l[8;23H[K[35;86H3[8;23H[?25h[?25lg[35;86H4[8;24H[?25h[?25l[35;86H5[8;25H[?25h[?25le[35;86H6[8;26H[?25h[?25lx[35;86H7[8;27H[?25h[?25lp[35;86H8[8;28H[?25h[?25lr[35;86H9[8;29H[?25h[?25l[8;28H[K[35;86H8[8;28H[?25h[?25l[8;27H[K[35;86H7[8;27H[?25h[?25l[8;26H[K[35;86H6[8;26H[?25h[?25l[8;25H[K[35;86H5[8;25H[?25h[?25ls[35;86H6[8;26H[?25h[?25lt[35;86H7[8;27H[?25h[?25lr[35;86H8[8;28H[?25h[?25l)[8;17H[46m([10C)[m[30m[47m[35;86H9[8;29H[?25h[?25l{[8;17H([10C)[35;85H30[8;30H[?25h[?25l
        [9;9H[K[35;83H9,2-9[9;9H[?25h[?25ls[35;85H3-10[9;10H[?25h[?25lt[35;85H4-11[9;11H[?25h[?25la[35;85H5-12[9;12H[?25h[?25lc[35;85H6-13[9;13H[?25h[?25ll[35;85H7-14[9;14H[?25h[?25l[9;13H[K[35;85H6-13[9;13H[?25h[?25lk[35;85H7-14[9;14H[?25h[?25l<[35;85H8-15[9;15H[?25h[?25lc[35;85H9-16[9;16H[?25h[?25lh[35;85H10-17[9;17H[?25h[?25la[35;86H1-18[9;18H[?25h[?25l[32mchar[m[30m[47m[35;86H2-19[9;19H[?25h[?25l>[35;86H3-20[9;20H[?25h[?25l[35;86H4-21[9;21H[?25h[?25ls[35;86H5-22[9;22H[?25h[?25l;[35;86H6-23[9;23H[?25h[?25l
        [10;9H[K[35;83H10,2-9 [10;9H[?25h[?25lc[35;86H3-10[10;10H[?25h[?25lh[35;86H4-11[10;11H[?25h[?25la[35;86H5-12[10;12H[?25h[?25l[32mchar[m[30m[47m[35;86H6-13[10;13H[?25h[?25l[35;86H7-14[10;14H[?25h[?25lc[35;86H8-15[10;15H[?25h[?25lh[35;86H9-16[10;16H[?25h[?25l;[35;86H10-17[10;17H[?25h[?25l
        [11;9H[K[35;84H1,2-9  [11;9H[?25h[?25l
        [12;9H[K[35;84H2[12;9H[?25h[?25lf[35;86H3-10[12;10H[?25h[?25lo[35;86H4-11[12;11H[?25h[?25l[33mfor[m[30m[47m[35;86H5-12[12;12H[?25h[?25l([35;86H6-13[12;13H[?25h[?25li[35;86H7-14[12;14H[?25h[?25ln[35;86H8-15[12;15H[?25h[?25l[32mint[m[30m[47m[35;86H9-16[12;16H[?25h[?25l[35;86H10-17[12;17H[?25h[?25l[35;86H9-16 [12;16H[?25h[?25l[35;86H10-17[12;17H[?25h[?25li[35;87H1-18[12;18H[?25h[?25l[35;87H2-19[12;19H[?25h[?25l=[35;87H3-20[12;20H[?25h[?25l[35;87H4-21[12;21H[?25h[?25l[31m0[m[30m[47m[35;87H5-22[12;22H[?25h[?25l;[35;87H6-23[12;23H[?25h[?25l[35;87H7-24[12;24H[?25h[?25li[35;87H8-25[12;25H[?25h[?25l[35;87H9-26[12;26H[?25h[?25l<[35;86H20-27[12;27H[?25h[?25l[35;87H1-28[12;28H[?25h[?25le[35;87H2-29[12;29H[?25h[?25lx[35;87H3-30[12;30H[?25h[?25lp[35;87H4-31[12;31H[?25h[?25l[12;30H[K[35;87H3-30[12;30H[?25h[?25l[12;29H[K[35;87H2-29[12;29H[?25h[?25l[12;28H[K[35;87H1-28[12;28H[?25h[?25ls[35;87H2-29[12;29H[?25h[?25lt[35;87H3-30[12;30H[?25h[?25lr[35;87H4-31[12;31H[?25h[?25l.[35;87H5-32[12;32H[?25h[?25ll[35;87H6-33[12;33H[?25h[?25le[35;87H7-34[12;34H[?25h[?25ln[35;87H8-35[12;35H[?25h[?25lg[35;87H9-36[12;36H[?25h[?25lt[35;86H30-37[12;37H[?25h[?25lh[35;87H1-38[12;38H[?25h[?25l([35;87H2-39[12;39H[?25h[?25l)[46m()[m[30m[47m[35;87H3-40[12;40H[?25h[?25l;()[35;87H4-41[12;41H[?25h[?25l[35;87H5-42[12;42H[?25h[?25li[35;87H6-43[12;43H[?25h[?25l+[35;87H7-44[12;44H[?25h[?25l+[35;87H8-45[12;45H[?25h[?25l)[12;12H[46m([32C)[m[30m[47m[35;87H9-46[12;46H[?25h[?25l[12;12H([32C)[35;86H40-47[12;47H[?25h[?25l[12;12H[46m([32C)[m[30m[47m[35;86H39-46[12;46H[?25h[?25l{[12;12H([32C)[35;86H40-47[12;47H[?25h[?25l[35;87H1-48[12;48H[?25h[?25l/[35;87H2-49[12;49H[?25h[?25l[34m//[m[30m[47m[35;87H3-50[12;50H[?25h[?25l[34m [m[30m[47m[35;87H4-51[12;51H[?25h[?25l[34mf[m[30m[47m[35;87H5-52[12;52H[?25h[?25l[34mo[m[30m[47m[35;87H6-53[12;53H[?25h[?25l[34mr[m[30m[47m[35;87H7-54[12;54H[?25h[?25l[34m [m[30m[47m[35;87H8-55[12;55H[?25h[?25l[34me[m[30m[47m[35;87H9-56[12;56H[?25h[?25l[34ma[m[30m[47m[35;86H50-57[12;57H[?25h[?25l[34mc[m[30m[47m[35;87H1-58[12;58H[?25h[?25l[34mh[m[30m[47m[35;87H2-59[12;59H[?25h[?25l[34m [m[30m[47m[35;87H3-60[12;60H[?25h[?25l[34mc[m[30m[47m[35;87H4-61[12;61H[?25h[?25l[34ma[m[30m[47m[35;87H5-62[12;62H[?25h[?25l[12;61H[K[35;87H4-61[12;61H[?25h[?25l[12;60H[K[35;87H3-60[12;60H[?25h[?25l[12;59H[K[35;87H2-59[12;59H[?25h[?25l[12;58H[K[35;87H1-58[12;58H[?25h[?25l[12;57H[K[35;87H0-57[12;57H[?25h[?25l[12;56H[K[35;86H49-56[12;56H[?25h[?25l[12;55H[K[35;87H8-55[12;55H[?25h[?25l[12;54H[K[35;87H7-54[12;54H[?25h[?25l[12;53H[K[35;87H6-53[12;53H[?25h[?25l[12;52H[K[35;87H5-52[12;52H[?25h[?25l[12;51H[K[35;87H4-51[12;51H[?25h[?25l[12;50H[K[35;87H3-50[12;50H[?25h[?25l/[12;49H[K[35;87H2-49[12;49H[?25h[?25l[12;48H[K[35;87H1-48[12;48H[?25h[?25l[35;87H0-47[12;47H[?25h[?25l[35;84H1,1    [11;1H[?25h[?25l[35;86H2-9[11;9H[?25h[?25l[12;34r[12;1H[L[1;35r[35;83H[K[35;83H12,2-9[8CAll[12;9H[?25h[?25l/[35;86H3-10[12;10H[?25h[?25l[34m//[m[30m[47m[35;86H4-11[12;11H[?25h[?25l[34m [m[30m[47m[35;86H5-12[12;12H[?25h[?25l[34ml[m[30m[47m[35;86H6-13[12;13H[?25h[?25l[34mo[m[30m[47m[35;86H7-14[12;14H[?25h[?25l[34mo[m[30m[47m[35;86H8-15[12;15H[?25h[?25l[34mp[m[30m[47m[35;86H9-16[12;16H[?25h[?25l[34m [m[30m[47m[35;86H10-17[12;17H[?25h[?25l[34mt[m[30m[47m[35;87H1-18[12;18H[?25h[?25l[34mh[m[30m[47m[35;87H2-19[12;19H[?25h[?25l[34mr[m[30m[47m[35;87H3-20[12;20H[?25h[?25l[34mo[m[30m[47m[35;87H4-21[12;21H[?25h[?25l[34mu[m[30m[47m[35;87H5-22[12;22H[?25h[?25l[34mg[m[30m[47m[35;87H6-23[12;23H[?25h[?25l[34mh[m[30m[47m[35;87H7-24[12;24H[?25h[?25l[34m [m[30m[47m[35;87H8-25[12;25H[?25h[?25l[34mc[m[30m[47m[35;87H9-26[12;26H[?25h[?25l[34mh[m[30m[47m[35;86H20-27[12;27H[?25h[?25l[34ma[m[30m[47m[35;87H1-28[12;28H[?25h[?25l[34mr[m[30m[47m[35;87H2-29[12;29H[?25h[?25l[34ma[m[30m[47m[35;87H3-30[12;30H[?25h[?25l[34mc[m[30m[47m[35;87H4-31[12;31H[?25h[?25l[34mt[m[30m[47m[35;87H5-32[12;32H[?25h[?25l[34me[m[30m[47m[35;87H6-33[12;33H[?25h[?25l[34mr[m[30m[47m[35;87H7-34[12;34H[?25h[?25l[34ms[m[30m[47m[35;87H8-35[12;35H[?25h[?25l[34m [m[30m[47m[35;87H9-36[12;36H[?25h[?25l[34mi[m[30m[47m[35;86H30-37[12;37H[?25h[?25l[34mn[m[30m[47m[35;87H1-38[12;38H[?25h[?25l[34m [m[30m[47m[35;87H2-39[12;39H[?25h[?25l[34me[m[30m[47m[35;87H3-40[12;40H[?25h[?25l[34mx[m[30m[47m[35;87H4-41[12;41H[?25h[?25l[34mp[m[30m[47m[35;87H5-42[12;42H[?25h[?25l[34mr[m[30m[47m[35;87H6-43[12;43H[?25h[?25l[34me[m[30m[47m[35;87H7-44[12;44H[?25h[?25l[34ms[m[30m[47m[35;87H8-45[12;45H[?25h[?25l[34ms[m[30m[47m[35;87H9-46[12;46H[?25h[?25l[34mi[m[30m[47m[35;86H40-47[12;47H[?25h[?25l[34mo[m[30m[47m[35;87H1-48[12;48H[?25h[?25l[35;83H6,21    [6;21H[?25h[?25l[7;34r[7;1H[L[1;35r[35;83H[K[35;83H7,1[11CAll[7;1H[?25h[?25l[8;34r[8;1H[L[1;35r[35;83H[K[35;83H8,1[11CAll[8;1H[?25h[?25lv[35;85H2[8;2H[?25h[?25lo[35;85H3[8;3H[?25h[?25li[35;85H4[8;4H[?25h[?25l[32mvoid[m[30m[47m[35;85H5[8;5H[?25h[?25l[35;85H6[8;6H[?25h[?25l[35;85H5[8;5H[?25h[?25lvoi[8;4H[K[35;85H4[8;4H[?25h[?25l[8;3H[K[35;85H3[8;3H[?25h[?25l[8;2H[K[35;85H2[8;2H[?25h[?25ls[35;85H3[8;3H[?25h[?25l[8;2H[K[35;85H2[8;2H[?25h[?25l[8;1H[K[35;85H1[8;1H[?25h[?25lS[35;85H2[8;2H[?25h[?25lt[35;85H3[8;3H[?25h[?25l[8;2H[K[35;85H2[8;2H[?25h[?25l[8;1H[K[35;85H1[8;1H[?25h[?25ls[35;85H2[8;2H[?25h[?25lt[35;85H3[8;3H[?25h[?25lr[35;85H4[8;4H[?25h[?25li[35;85H5[8;5H[?25h[?25ln[35;85H6[8;6H[?25h[?25lg[35;85H7[8;7H[?25h[?25l[35;85H8[8;8H[?25h[?25lc[35;85H9[8;9H[?25h[?25lo[35;85H10[8;10H[?25h[?25ln[35;86H1[8;11H[?25h[?25lc[35;86H2[8;12H[?25h[?25la[35;86H3[8;13H[?25h[?25lt[35;86H4[8;14H[?25h[?25le[35;86H5[8;15H[?25h[?25ln[35;86H6[8;16H[?25h[?25la[35;86H7[8;17H[?25h[?25lt[35;86H8[8;18H[?25h[?25le[35;86H9[8;19H[?25h[?25l(s[35;85H21[8;21H[?25h[?25lt[35;86H2[8;22H[?25h[?25lr[35;86H3[8;23H[?25h[?25li[35;86H4[8;24H[?25h[?25ln[35;86H5[8;25H[?25h[?25lg[35;86H6[8;26H[?25h[?25l[35;86H7[8;27H[?25h[?25li[35;86H8[8;28H[?25h[?25ln[35;86H9[8;29H[?25h[?25lp[35;85H30[8;30H[?25h[?25lu[35;86H1[8;31H[?25h[?25lt[35;86H2[8;32H[?25h[?25l)[8;19H[46m([12C)[m[30m[47m[35;86H3[8;33H[?25h[?25l{[8;19H([12C)[35;86H4[8;34H[?25h[?25l[9;34r[9;1H[L[1;35r[35;83H[K[35;83H9,2-9[9CAll[9;9H[?25h[?25la[35;85H3-10[9;10H[?25h[?25lr[35;85H4-11[9;11H[?25h[?25l[9;10H[K[35;85H3-10[9;10H[?25h[?25l[9;9H[K[35;85H2-9 [9;9H[?25h[?25ls[35;85H3-10[9;10H[?25h[?25lt[35;85H4-11[9;11H[?25h[?25lr[35;85H5-12[9;12H[?25h[?25li[35;85H6-13[9;13H[?25h[?25ln[35;85H7-14[9;14H[?25h[?25lg[35;85H8-15[9;15H[?25h[?25l[[11;29H[1m[37m[41m{[12;22H;[13;16H;[16;46H{[m[30m[47m[35;85H9-16[9;16H[?25h[?25l[9;15H[K[11;29H{[12;22H;[13;16H;[16;46H{[35;85H8-15[9;15H[?25h[?25l[[11;29H[1m[37m[41m{[12;22H;[13;16H;[16;46H{[m[30m[47m[35;85H9-16[9;16H[?25h[?25l[9;15H[K[11;29H{[12;22H;[13;16H;[16;46H{[35;85H8-15[9;15H[?25h[?25l[35;85H9-16[9;16H[?25h[?25lo[35;85H10-17[9;17H[?25h[?25lu[35;86H1-18[9;18H[?25h[?25lt[35;86H2-19[9;19H[?25h[?25lput[35;86H5-22[9;22H[?25h[?25l[35;86H6-23[9;23H[?25h[?25l=[35;86H7-24[9;24H[?25h[?25l[35;86H8-25[9;25H[?25h[?25ls[35;86H9-26[9;26H[?25h[?25lt[35;85H20-27[9;27H[?25h[?25lr[35;86H1-28[9;28H[?25h[?25li[35;86H2-29[9;29H[?25h[?25ln[35;86H3-30[9;30H[?25h[?25lg[35;86H4-31[9;31H[?25h[?25l[9;30H[K[35;86H3-30[9;30H[?25h[?25l[9;29H[K[35;86H2-29[9;29H[?25h[?25l[9;27H[K[35;86H0-27[9;27H[?25h[?25l[9;26H[K[35;85H19-26[9;26H[?25h[?25l[9;25H[K[35;86H8-25[9;25H[?25h[?25l[35;86H7-24[9;24H[?25h[?25l[9;23H[K[35;86H5-22[9;22H[?25h[?25l[9;21H[K[35;86H4-21[9;21H[?25h[?25lt[35;86H5-22[9;22H[?25h[?25l[[11;29H[1m[37m[41m{[12;22H;[13;16H;[16;46H{[m[30m[47m[35;86H6-23[9;23H[?25h[?25li[35;86H7-24[9;24H[?25h[?25ln[35;86H8-25[9;25H[?25h[?25lp[35;86H9-26[9;26H[?25h[?25lu[35;85H20-27[9;27H[?25h[?25lt[35;86H1-28[9;28H[?25h[?25l.[35;86H2-29[9;29H[?25h[?25ll[35;86H3-30[9;30H[?25h[?25ln[35;86H4-31[9;31H[?25h[?25l[9;30H[K[35;86H3-30[9;30H[?25h[?25le[35;86H4-31[9;31H[?25h[?25ln[35;86H5-32[9;32H[?25h[?25lg[35;86H6-33[9;33H[?25h[?25lt[35;86H7-34[9;34H[?25h[?25lh[35;86H8-35[9;35H[?25h[?25l([11;29H{[12;22H;[13;16H;[16;46H{[35;86H9-36[9;36H[?25h[?25l)[11;29H[1m[37m[41m{[12;22H;[13;16H;[16;46H{[m[30m[47m[9;35H[46m()[m[30m[47m[35;85H30-37[9;37H[?25h[?25l][11;29H{[12;22H;[13;16H;[16;46H{[9;22H[46m[[m[30m[47m[12C()[46m][m[30m[47m[35;86H1-38[9;38H[?25h[?25l;[9;22H[[14C][35;86H2-39[9;39H[?25h[?25l[10;34r[10;1H[L[1;35r[35;83H[K[35;83H10,2-9[8CAll[10;9H[?25h[?25l[35;83H8,34  [8;34H[?25h[?25l[35;83H9,32-39[9;39H[?25h[?25l[10;34r[10;1H[L[1;35r[35;83H[K[35;83H10,2-9[8CAll[10;9H[?25h[?25lf[35;86H3-10[10;10H[?25h[?25lo[35;86H4-11[10;11H[?25h[?25l[33mfor[m[30m[47m[35;86H5-12[10;12H[?25h[?25l([35;86H6-13[10;13H[?25h[?25l[35;84H8,40-47[18;47H[?25h[?25l
        [19;9H[K[35;84H9,2-9  [19;9H[?25h[?25l
        [20;9H[K[35;83H20[20;9H[?25h[?25l[35;86H1  [20;1H[?25h[?25l
        [21;9H[K[35;84H1,2-9[21;9H[?25h[?25l
        [22;9H[K[35;84H2[22;9H[?25h[?25li[35;86H3-10[22;10H[?25h[?25ln[35;86H4-11[22;11H[?25h[?25l[32mint[m[30m[47m[35;86H5-12[22;12H[?25h[?25l[35;86H6-13[22;13H[?25h[?25lm[35;86H7-14[22;14H[?25h[?25la[35;86H8-15[22;15H[?25h[?25li[35;86H9-16[22;16H[?25h[?25ln[35;86H10-17[22;17H[?25h[?25l([35;87H1-18[22;18H[?25h[?25lc[35;87H2-19[22;19H[?25h[?25li[35;87H3-20[22;20H[?25h[?25ln[35;87H4-21[22;21H[?25h[?25l[22;20H[K[35;87H3-20[22;20H[?25h[?25l[22;19H[K[35;87H2-19[22;19H[?25h[?25l[22;18H[K[35;87H1-18[22;18H[?25h[?25li[35;87H2-19[22;19H[?25h[?25ln[35;87H3-20[22;20H[?25h[?25l[32mint[m[30m[47m[35;87H4-21[22;21H[?25h[?25l[35;87H5-22[22;22H[?25h[?25la[35;87H6-23[22;23H[?25h[?25lr[35;87H7-24[22;24H[?25h[?25lg[35;87H8-25[22;25H[?25h[?25lc[35;87H9-26[22;26H[?25h[?25l,[35;86H20-27[22;27H[?25h[?25l[35;87H1-28[22;28H[?25h[?25lc[35;87H2-29[22;29H[?25h[?25lh[35;87H3-30[22;30H[?25h[?25la[35;87H4-31[22;31H[?25h[?25l[32mchar[m[30m[47m[35;87H5-32[22;32H[?25h[?25l[35;87H6-33[22;33H[?25h[?25l*[35;87H7-34[22;34H[?25h[?25la[35;87H8-35[22;35H[?25h[?25lr[35;87H9-36[22;36H[?25h[?25lg[35;86H30-37[22;37H[?25h[?25lv[35;87H1-38[22;38H[?25h[?25l[[35;87H2-39[22;39H[?25h[?25l][46m[][m[30m[47m[35;87H3-40[22;40H[?25h[?25l)[22;17H[46m([m[30m[47m[20C[][46m)[m[30m[47m[35;87H4-41[22;41H[?25h[?25l{[22;17H([22C)[35;87H5-42[22;42H[?25h[?25l
        [23;9H[K[35;84H3,2-9  [23;9H[?25h[?25l}[22;41H[46m{[23;9H}[m[30m[47m[35;86H3-10[23;10H[?25h[?25l[35;84H2,35-42[22;42H[?25h[?25l{[23;9H}[35;83H10,6-13 [10;13H[?25h[?25l[8;19H[46m([12C)[m[30m[47m[35;83H8,32   [8;32H[?25h[?25l)[46m{[m[30m[47m[8;33H[K[8;31H[46m)[m[30m[47m{[35;86H1[8;31H[?25h[?25l)[46m{[m[30m[47m[8;32H[K[8;30H[46m)[m[30m[47m{[35;86H0[8;30H[?25h[?25l)[46m{[m[30m[47m[8;31H[K[8;29H[46m)[m[30m[47m{[35;85H29[8;29H[?25h[?25l)[46m{[m[30m[47m[8;30H[K[8;28H[46m)[m[30m[47m{[35;86H8[8;28H[?25h[?25l)[46m{[m[30m[47m[8;29H[K[8;27H[46m)[m[30m[47m{[35;86H7[8;27H[?25h[?25l)[46m{[m[30m[47m[8;28H[K[8;26H[46m)[m[30m[47m{[35;86H6[8;26H[?25h[?25l)[46m{[m[30m[47m[8;27H[K[8;25H[46m)[m[30m[47m{[35;86H5[8;25H[?25h[?25l)[46m{[m[30m[47m[8;26H[K[8;24H[46m)[m[30m[47m{[35;86H4[8;24H[?25h[?25l)[46m{[m[30m[47m[8;25H[K[8;23H[46m)[m[30m[47m{[35;86H3[8;23H[?25h[?25l)[46m{[m[30m[47m[8;24H[K[8;22H[46m)[m[30m[47m{[35;86H2[8;22H[?25h[?25l)[46m{[m[30m[47m[8;23H[K[8;21H[46m)[m[30m[47m{[35;86H1[8;21H[?25h[?25l)[46m{[m[30m[47m[8;22H[K[8;20H[46m)[m[30m[47m{[35;86H0[8;20H[?25h[?25l[46mc[m[30m[47m){c[46m)[m[30m[47m[35;86H1[8;21H[?25h[?25l[46mh[m[30m[47m){h[46m)[m[30m[47m[35;86H2[8;22H[?25h[?25l[46ma[m[30m[47m){a[46m)[m[30m[47m[35;86H3[8;23H[?25h[?25l[32mcha[m[30m[47m[32m[46mr[m[30m[47m){[32mr[m[30m[47m[46m)[m[30m[47m[35;86H4[8;24H[?25h[?25l[46m*[m[30m[47m){*[46m)[m[30m[47m[35;86H5[8;25H[?25h[?25l)[46m{[m[30m[47m[8;26H[K[8;24H[46m)[m[30m[47m{[35;86H4[8;24H[?25h[?25l[46m [m[30m[47m){ [46m)[m[30m[47m[35;86H5[8;25H[?25h[?25l[46m*[m[30m[47m){*[46m)[m[30m[47m[35;86H6[8;26H[?25h[?25l[46ma[m[30m[47m){a[46m)[m[30m[47m[35;86H7[8;27H[?25h[?25l[46mr[m[30m[47m){r[46m)[m[30m[47m[35;86H8[8;28H[?25h[?25l)[46m{[m[30m[47m[8;29H[K[8;27H[46m)[m[30m[47m{[35;86H7[8;27H[?25h[?25l)[46m{[m[30m[47m[8;28H[K[8;26H[46m)[m[30m[47m{[35;86H6[8;26H[?25h[?25l[46mi[m[30m[47m){i[46m)[m[30m[47m[35;86H7[8;27H[?25h[?25l[46mn[m[30m[47m){n[46m)[m[30m[47m[35;86H8[8;28H[?25h[?25l[46mp[m[30m[47m){p[46m)[m[30m[47m[35;86H9[8;29H[?25h[?25l[46mu[m[30m[47m){u[46m)[m[30m[47m[35;85H30[8;30H[?25h[?25l[46mt[m[30m[47m){t[46m)[m[30m[47m[35;86H1[8;31H[?25h[?25l[8;19H([11C)[35;83H10,6-13[10;13H[?25h[?25l[8;19H[46m([11C)[m[30m[47m[35;83H8,31   [8;31H[?25h[?25l)[46m{[m[30m[47m[8;32H[K[8;30H[46m)[m[30m[47m{[35;86H0[8;30H[?25h[?25l)[46m{[m[30m[47m[8;31H[K[8;29H[46m)[m[30m[47m{[35;85H29[8;29H[?25h[?25l){[8;29H[K[8;27H[46m)[m[30m[47m[35;86H7[8;27H[?25h[?25l)[46m{[m[30m[47m[8;28H[K[8;26H[46m)[m[30m[47m{[35;86H6[8;26H[?25h[?25l){[8;26H[K[8;24H[46m)[m[30m[47m[35;86H4[8;24H[?25h[?25lcha)[46m{[m[30m[47m[8;25H[K[8;23H[46m)[m[30m[47m{[35;86H3[8;23H[?25h[?25l)[46m{[m[30m[47m[8;24H[K[8;22H[46m)[m[30m[47m{[35;86H2[8;22H[?25h[?25l)[46m{[m[30m[47m[8;23H[K[8;21H[46m)[m[30m[47m{[35;86H1[8;21H[?25h[?25l)[46m{[m[30m[47m[8;22H[K[8;20H[46m)[m[30m[47m{[35;86H0[8;20H[?25h[?25l[46ms[m[30m[47m){s[46m)[m[30m[47m[35;86H1[8;21H[?25h[?25l[46mt[m[30m[47m){t[46m)[m[30m[47m[35;86H2[8;22H[?25h[?25l[46mr[m[30m[47m){r[46m)[m[30m[47m[35;86H3[8;23H[?25h[?25l[46mi[m[30m[47m){i[46m)[m[30m[47m[35;86H4[8;24H[?25h[?25l[46mn[m[30m[47m){n[46m)[m[30m[47m[35;86H5[8;25H[?25h[?25l[46mg[m[30m[47m){g[46m)[m[30m[47m[35;86H6[8;26H[?25h[?25l[46m [m[30m[47m){ [46m)[m[30m[47m[35;86H7[8;27H[?25h[?25l[46mi[m[30m[47m){i[46m)[m[30m[47m[35;86H8[8;28H[?25h[?25l[46mn[m[30m[47m){n[46m)[m[30m[47m[35;86H9[8;29H[?25h[?25l[46mp[m[30m[47m){p[46m)[m[30m[47m[35;85H30[8;30H[?25h[?25l[46mu[m[30m[47m){u[46m)[m[30m[47m[35;86H1[8;31H[?25h[?25l[46mt[m[30m[47m){t[46m)[m[30m[47m[35;86H2[8;32H[?25h[?25l[8;19H([12C)[35;83H10,6-13[10;13H[?25h[?25l[10;12H[K[35;86H5-12[10;12H[?25h[?25lfo[10;11H[K[35;86H4-11[10;11H[?25h[?25l[10;10H[K[35;86H3-10[10;10H[?25h[?25l[10;9H[K[35;86H2-9 [10;9H[?25h[?25l[9;34r[34;1H
[1;35r[9;9Hstring output[input.length()];[34;1H[1m[34m~                                                                                                   [m[30m[47m[35;83H[K[35;83H9,32-39[7CAll[9;39H[?25h[?25l[9;38H[K[9;22H[46m[[14C][m[30m[47m[35;86H1-38[9;38H[?25h[?25l[9;37H[K[12;29H[1m[37m[41m{[13;22H;[14;16H;[17;46H{[21;41H{[22;9H}[m[30m[47m[9;22H[[12C[46m()[m[30m[47m[35;86H0-37[9;37H[?25h[?25l[9;35H[K[35;85H28-35[9;35H[?25h[?25l[9;34H[K[35;86H7-34[9;34H[?25h[?25l[9;33H[K[35;86H6-33[9;33H[?25h[?25l[9;32H[K[35;86H5-32[9;32H[?25h[?25l[9;30H[K[35;86H3-30[9;30H[?25h[?25l[9;29H[K[35;86H2-29[9;29H[?25h[?25l[9;28H[K[35;86H1-28[9;28H[?25h[?25l[9;26H[K[35;85H19-26[9;26H[?25h[?25l[9;25H[K[35;86H8-25[9;25H[?25h[?25l[9;24H[K[35;86H7-24[9;24H[?25h[?25l[9;23H[K[35;86H6-23[9;23H[?25h[?25l[9;22H[K[12;29H{[13;22H;[14;16H;[17;46H{[21;41H{[22;9H}[35;86H5-22[9;22H[?25h[?25l[9;21H[K[35;86H4-21[9;21H[?25h[?25l[9;20H[K[35;86H3-20[9;20H[?25h[?25l[9;19H[K[35;86H2-19[9;19H[?25h[?25l[9;17H[K[35;86H0-17[9;17H[?25h[?25l[9;16H[K[35;85H9-16 [9;16H[?25h[?25l[35;85H8-15[9;15H[?25h[?25l[9;14H[K[35;85H7-14[9;14H[?25h[?25l[9;13H[K[35;85H6-13[9;13H[?25h[?25l[9;12H[K[35;85H5-12[9;12H[?25h[?25l[9;11H[K[35;85H4-11[9;11H[?25h[?25l[9;10H[K[35;85H3-10[9;10H[?25h[?25l[9;9H[K[35;85H2-9 [9;9H[?25h[?25lc[35;85H3-10[9;10H[?25h[?25lh[35;85H4-11[9;11H[?25h[?25la[35;85H5-12[9;12H[?25h[?25l[32mchar[m[30m[47m[35;85H6-13[9;13H[?25h[?25l[35;85H7-14[9;14H[?25h[?25lb[35;85H8-15[9;15H[?25h[?25la[35;85H9-16[9;16H[?25h[?25ld[35;85H10-17[9;17H[?25h[?25l[[12;29H[1m[37m[41m{[13;22H;[14;16H;[17;46H{[21;41H{[22;9H}[m[30m[47m[35;86H1-18[9;18H[?25h[?25l[35;86H2-19[9;19H[?25h[?25l[35;86H1-18[9;18H[?25h[?25l][12;29H{[13;22H;[14;16H;[17;46H{[21;41H{[22;9H}[9;17H[46m[][m[30m[47m[35;86H2-19[9;19H[?25h[?25l[][35;86H3-20[9;20H[?25h[?25l=[35;86H4-21[9;21H[?25h[?25l[35;86H5-22[9;22H[?25h[?25l[31m"[m[30m[47m[35;86H6-23[9;23H[?25h[?25l[31m'[m[30m[47m[35;86H7-24[9;24H[?25h[?25l[31m][m[30m[47m[35;86H8-25[9;25H[?25h[?25l[9;24H[K[35;86H7-24[9;24H[?25h[?25l[31m"[m[30m[47m[35;86H8-25[9;25H[?25h[?25l;[35;86H9-26[9;26H[?25h[?25l[10;34r[10;1H[L[1;35r[35;83H[K[35;83H10,2-9[8CAll[10;9H[?25h[?25lf[35;86H3-10[10;10H[?25h[?25lo[35;86H4-11[10;11H[?25h[?25l[33mfor[m[30m[47m[35;86H5-12[10;12H[?25h[?25l([35;86H6-13[10;13H[?25h[?25lu[35;86H7-14[10;14H[?25h[?25ln[35;86H8-15[10;15H[?25h[?25ls[35;86H9-16[10;16H[?25h[?25li[35;86H10-17[10;17H[?25h[?25lg[35;87H1-18[10;18H[?25h[?25ln[35;87H2-19[10;19H[?25h[?25le[35;87H3-20[10;20H[?25h[?25l[10;13H[32munsigned[m[30m[47m[35;87H4-21[10;21H[?25h[?25l[35;87H5-22[10;22H[?25h[?25li[35;87H6-23[10;23H[?25h[?25ln[35;87H7-24[10;24H[?25h[?25l[32mint[m[30m[47m[35;87H8-25[10;25H[?25h[?25l[35;87H9-26[10;26H[?25h[?25li[35;86H20-27[10;27H[?25h[?25l[35;87H1-28[10;28H[?25h[?25l=[35;87H2-29[10;29H[?25h[?25l[35;87H3-30[10;30H[?25h[?25l[31m0[m[30m[47m[35;87H4-31[10;31H[?25h[?25l;[35;87H5-32[10;32H[?25h[?25l[35;87H6-33[10;33H[?25h[?25li[35;87H7-34[10;34H[?25h[?25l[35;87H8-35[10;35H[?25h[?25l<[35;87H9-36[10;36H[?25h[?25l[35;86H30-37[10;37H[?25h[?25ls[35;87H1-38[10;38H[?25h[?25lt[35;87H2-39[10;39H[?25h[?25lr[35;87H3-40[10;40H[?25h[?25ll[35;87H4-41[10;41H[?25h[?25le[35;87H5-42[10;42H[?25h[?25ln[35;87H6-43[10;43H[?25h[?25l([35;87H7-44[10;44H[?25h[?25lc[35;87H8-45[10;45H[?25h[?25lh[35;87H9-46[10;46H[?25h[?25la[35;86H40-47[10;47H[?25h[?25l[32mchar[m[30m[47m[35;87H1-48[10;48H[?25h[?25lchars[35;87H2-49[10;49H[?25h[?25l)[10;43H[46m([m[30m[47mchars[46m)[m[30m[47m[35;87H3-50[10;50H[?25h[?25l;[10;43H(chars)[35;87H4-51[10;51H[?25h[?25l[35;87H5-52[10;52H[?25h[?25l+[35;87H6-53[10;53H[?25h[?25l+[35;87H7-54[10;54H[?25h[?25li[35;87H8-55[10;55H[?25h[?25l)[10;12H[46m([42C)[m[30m[47m[35;87H9-56[10;56H[?25h[?25l{[10;12H([42C)[35;86H50-57[10;57H[?25h[?25l[11;34r[11;1H[L[1;35r[35;83H[K[35;83H11,3-17[7CAll[11;17H[?25h[?25l[35;83H4,16   [4;16H[?25h[?25l[5;34r[5;1H[L[1;35r[35;83H[K[35;83H5,1[11CAll[5;1H[?25h[?25l#[35;85H2[5;2H[?25h[?25li[35;85H3[5;3H[?25h[?25ln[35;85H4[5;4H[?25h[?25lc[35;85H5[5;5H[?25h[?25ll[35;85H6[5;6H[?25h[?25lu[35;85H7[5;7H[?25h[?25ld[35;85H8[5;8H[?25h[?25le[35;85H9[5;9H[?25h[?25l[35;85H10[5;10H[?25h[?25l[35m#include <[m[30m[47m[35;86H1[5;11H[?25h[?25la[35;86H2[5;12H[?25h[?25ll[35;86H3[5;13H[?25h[?25lg[35;86H4[5;14H[?25h[?25lo[35;86H5[5;15H[?25h[?25lr[35;86H6[5;16H[?25h[?25li[35;86H7[5;17H[?25h[?25lt[35;86H8[5;18H[?25h[?25lh[35;86H9[5;19H[?25h[?25lm[35;85H20[5;20H[?25h[?25ln[35;86H1[5;21H[?25h[?25l[5;10H[31m<algorithmn>[m[30m[47m[35;86H2[5;22H[?25h[?25l[35;83H4,9 [4;9H[?25h[?25l[35m [m[30m[47m[31m<stack>[m[30m[47m[35;85H10[4;10H[?25h[?25l[35;83H11,50-57[11;57H[?25h[?25l[12;34r[12;1H[L[1;35r[35;83H[K[35;83H12,3-17[7CAll[12;17H[?25h[?25ls[35;86H4-18[12;18H[?25h[?25lt[35;86H5-19[12;19H[?25h[?25lr[35;86H6-20[12;20H[?25h[?25l.[35;86H7-21[12;21H[?25h[?25le[35;86H8-22[12;22H[?25h[?25lr[35;86H9-23[12;23H[?25h[?25la[35;86H10-24[12;24H[?25h[?25ls[35;87H1-25[12;25H[?25h[?25le[35;87H2-26[12;26H[?25h[?25l([35;87H3-27[12;27H[?25h[?25ls[35;87H4-28[12;28H[?25h[?25lt[35;87H5-29[12;29H[?25h[?25ld[35;87H6-30[12;30H[?25h[?25l[12;29H[K[35;87H5-29[12;29H[?25h[?25l[12;28H[K[35;87H4-28[12;28H[?25h[?25l[12;27H[K[35;87H3-27[12;27H[?25h[?25lr[35;87H4-28[12;28H[?25h[?25le[35;87H5-29[12;29H[?25h[?25lm[35;87H6-30[12;30H[?25h[?25lo[35;87H7-31[12;31H[?25h[?25lv[35;87H8-32[12;32H[?25h[?25l([35;87H9-33[12;33H[?25h[?25l[12;32H[K[35;87H8-32[12;32H[?25h[?25le[35;87H9-33[12;33H[?25h[?25l([35;86H20-34[12;34H[?25h[?25ls[35;87H1-35[12;35H[?25h[?25lt[35;87H2-36[12;36H[?25h[?25lr[35;87H3-37[12;37H[?25h[?25l.[35;87H4-38[12;38H[?25h[?25l[12;37H[K[35;87H3-37[12;37H[?25h[?25l[12;36H[K[35;87H2-36[12;36H[?25h[?25l[35;86H5-19 [12;19H[?25h[?25lir.erase(remove(st[35;86H6-20[12;20H[?25h[?25lir.erase(remove(st[35;86H7-21[12;21H[?25h[?25lr.erase(remove(st[12;37H[K[35;86H6-20[12;20H[?25h[?25lr.erase(remove(st[12;36H[K[35;86H5-19[12;19H[?25h[?25l[35;86H6-20[12;20H[?25h[?25l.erase(remove(st[12;35H[K[35;86H5-19[12;19H[?25h[?25l.erase(remove(st[12;34H[K[35;86H4-18[12;18H[?25h[?25l.erase(remove(st[12;33H[K[35;86H3-17[12;17H[?25h[?25li.erase(remove(st[35;86H4-18[12;18H[?25h[?25ln.erase(remove(st[35;86H5-19[12;19H[?25h[?25lp.erase(remove(st[35;86H6-20[12;20H[?25h[?25lu.erase(remove(st[35;86H7-21[12;21H[?25h[?25lt.erase(remove(st[35;86H8-22[12;22H[?25h[?25l[35;86H24-38[12;38H[?25h[?25l[12;37H[K[35;87H3-37[12;37H[?25h[?25l[12;36H[K[35;87H2-36[12;36H[?25h[?25ln[35;87H3-37[12;37H[?25h[?25l[12;36H[K[35;87H2-36[12;36H[?25h[?25li[35;87H3-37[12;37H[?25h[?25ln[35;87H4-38[12;38H[?25h[?25lp[35;87H5-39[12;39H[?25h[?25lu[35;87H6-40[12;40H[?25h[?25lt[35;87H7-41[12;41H[?25h[?25l.[35;87H8-42[12;42H[?25h[?25lb[35;87H9-43[12;43H[?25h[?25le[35;86H30-44[12;44H[?25h[?25ln[35;87H1-45[12;45H[?25h[?25l[12;44H[K[35;87H0-44[12;44H[?25h[?25lg[35;87H1-45[12;45H[?25h[?25li[35;87H2-46[12;46H[?25h[?25ln[35;87H3-47[12;47H[?25h[?25l([35;87H4-48[12;48H[?25h[?25l)[46m()[m[30m[47m[35;87H5-49[12;49H[?25h[?25l,()[35;87H6-50[12;50H[?25h[?25l[35;87H7-51[12;51H[?25h[?25li[35;87H8-52[12;52H[?25h[?25ln[35;87H9-53[12;53H[?25h[?25lp[35;86H40-54[12;54H[?25h[?25l[12;53H[K[35;86H39-53[12;53H[?25h[?25l[12;52H[K[35;87H8-52[12;52H[?25h[?25l[12;51H[K[35;87H7-51[12;51H[?25h[?25li[35;87H8-52[12;52H[?25h[?25ln[35;87H9-53[12;53H[?25h[?25lp[35;86H40-54[12;54H[?25h[?25lu[35;87H1-55[12;55H[?25h[?25lt[35;87H2-56[12;56H[?25h[?25l,[35;87H3-57[12;57H[?25h[?25le[35;87H4-58[12;58H[?25h[?25l[12;57H[K[35;87H3-57[12;57H[?25h[?25l[12;56H[K[35;87H2-56[12;56H[?25h[?25l.[35;87H3-57[12;57H[?25h[?25le[35;87H4-58[12;58H[?25h[?25ln[35;87H5-59[12;59H[?25h[?25ld[35;87H6-60[12;60H[?25h[?25l([35;87H7-61[12;61H[?25h[?25l)[46m()[m[30m[47m[35;87H8-62[12;62H[?25h[?25l,()[35;87H9-63[12;63H[?25h[?25l[35;86H50-64[12;64H[?25h[?25lc[35;87H1-65[12;65H[?25h[?25lh[35;87H2-66[12;66H[?25h[?25la[35;87H3-67[12;67H[?25h[?25l[32mchar[m[30m[47m[35;87H4-68[12;68H[?25h[?25lchars[35;87H5-69[12;69H[?25h[?25l[[16;29H[1m[37m[41m{[17;22H;[18;16H;[21;46H{[25;41H{[26;9H}[m[30m[47m[35;87H6-70[12;70H[?25h[?25li[35;87H7-71[12;71H[?25h[?25l][16;29H{[17;22H;[18;16H;[21;46H{[25;41H{[26;9H}[12;69H[46m[[m[30m[47mi[46m][m[30m[47m[35;87H8-72[12;72H[?25h[?25l)[12;35H[46m([m[30m[47m[33C[i][46m)[m[30m[47m[35;87H9-73[12;73H[?25h[?25l;[12;35H([36C)[35;86H60-74[12;74H[?25h[?25l[12;73H[K[12;35H[46m([36C)[m[30m[47m[35;86H59-73[12;73H[?25h[?25l[12;35H([36C)[35;86H60-74[12;74H[?25h[?25l[12;35H[46m([36C)[m[30m[47m[35;86H59-73[12;73H[?25h[?25l,[12;35H([36C)[35;86H60-74[12;74H[?25h[?25l[35;87H1-75[12;75H[?25h[?25ls[35;87H2-76[12;76H[?25h[?25lt[35;87H3-77[12;77H[?25h[?25lr[35;87H4-78[12;78H[?25h[?25l.[35;87H5-79[12;79H[?25h[?25le[35;87H6-80[12;80H[?25h[?25ln[35;87H7-81[12;81H[?25h[?25ld[35;87H8-82[12;82H[?25h[?25l([35;87H9-83[12;83H[?25h[?25l)[46m()[m[30m[47m[35;86H70-84[12;84H[?25h[?25l[31m0[m[30m[47m()[35;87H1-85[12;85H[?25h[?25l;[35;87H2-86[12;86H[?25h[?25l[12;35H[46m([36C)[m[30m[47m[35;86H58-72[12;72H[?25h[?25l[46m,[m[30m[47m str.end()[31m0[m[30m[47m;[12;85H[K[12;35H([33C[46m[[m[30m[47mi[46m][m[30m[47m,[?25h[?25l[i][35;84H1,50-57[11;57H[?25h[?25l[35;84H2,71-85[12;85H[?25h[?25l[12;84H[K[35;87H0-84[12;84H[?25h[?25l[12;83H[K[12;81H[46m()[m[30m[47m[35;86H69-83[12;83H[?25h[?25l)[12;35H[46m([m[30m[47m[45C()[46m)[m[30m[47m[35;86H70-84[12;84H[?25h[?25l;[12;35H([47C)[35;87H1-85[12;85H[?25h[?25l[13;34r[13;1H[L[1;35r[35;83H[K[35;83H13,5-33[7CAll[13;33H[?25h[?25l}[11;56H[46m{[13;33H}[m[30m[47m[35;86H6-34[13;34H[?25h[?25l[35;86H5-33[13;33H[?25h[?25l[13;25H}[13;33H[K[13;25H[46m}[m[30m[47m[35;86H4-25[13;25H[?25h[?25l[13;17H}[13;25H[K[13;17H[46m}[m[30m[47m[35;86H3-17[13;17H[?25h[?25l[35;86H4-18[13;18H[?25h[?25l[14;34r[14;1H[L[1;35r[35;83H[K[35;83H14,3-17[7CAll[11;56H{[13;17H}[14;17H[?25h[?25l[35;86H2-9 [14;9H[?25h[?25lr[35;86H3-10[14;10H[?25h[?25le[35;86H4-11[14;11H[?25h[?25lt[35;86H5-12[14;12H[?25h[?25lu[35;86H6-13[14;13H[?25h[?25lr[35;86H7-14[14;14H[?25h[?25l[33mreturn[m[30m[47m[35;86H8-15[14;15H[?25h[?25l[35;86H9-16[14;16H[?25h[?25ls[35;86H10-17[14;17H[?25h[?25lt[35;87H1-18[14;18H[?25h[?25lr[35;87H2-19[14;19H[?25h[?25li[35;87H3-20[14;20H[?25h[?25ln[35;87H4-21[14;21H[?25h[?25lg[35;87H5-22[14;22H[?25h[?25l[14;21H[K[35;87H4-21[14;21H[?25h[?25l[14;20H[K[35;87H3-20[14;20H[?25h[?25l[14;19H[K[35;87H2-19[14;19H[?25h[?25l[14;18H[K[35;87H1-18[14;18H[?25h[?25l[14;17H[K[35;87H0-17[14;17H[?25h[?25l[14;16H[K[35;86H9-16 [14;16H[?25h[?25li[35;86H10-17[14;17H[?25h[?25ln[35;87H1-18[14;18H[?25h[?25lp[35;87H2-19[14;19H[?25h[?25lu[35;87H3-20[14;20H[?25h[?25lt[35;87H4-21[14;21H[?25h[?25l;[35;87H5-22[14;22H[?25h[?25l[15;34r[15;1H[L[1;35r[35;83H[K[35;83H15,2-9[8CAll[15;9H[?25h[?25l}[9;33H[46m{[15;9H}[m[30m[47m[35;86H3-10[15;10H[?25h[?25l[9;33H{[15;9H}[35;84H6,1   [16;1H[?25h[?25l[9;33H[46m{[15;9H}[m[30m[47m[35;84H5,3-10[15;10H[?25h[?25l[35;86H2-9 [15;9H[?25h[?25l}[15;9H[K[15;1H[46m}[m[30m[47m[35;86H1  [15;1H[?25h[?25l[9;33H{[15;1H}[35;84H8[18;1H[?25h[?25l/[35;86H2[18;2H[?25h[?25l[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        
        for(int i = [1C; i < str.length(); i++){[28;1H        int main(int argc, char *argv[]){
        }[m[30m[47m[35;86H3[18;3H[?25h[?25l[28;41H[34m[46m{[29;9H}[m[30m[47m[35;83H29,3-10[29;10H[?25h[?25l
[34m        [m[30m[47m[30;9H[K[28;41H[34m{[29;9H}[m[30m[47m[35;83H30,2-9 [30;9H[?25h[?25l[30;1H[K[35;86H1  [30;1H[?25h[?25l[34m*[m[30m[47m[35;86H2[30;2H[?25h[?25l[34m/[m[30m[47m[35;86H3[30;3H[?25h[?25l[35;83H29,1[29;1H[?25h[?25l[35;83H30,3[30;3H[?25h[?25l[31;1H[K[35;84H1,1[31;1H[?25h[?25l[32;1H[K[35;84H2[32;1H[?25h[?25li[35;86H2[32;2H[?25h[?25ln[35;86H3[32;3H[?25h[?25l[32mint[m[30m[47m[35;86H4[32;4H[?25h[?25l[35;86H5[32;5H[?25h[?25lm[35;86H6[32;6H[?25h[?25la[35;86H7[32;7H[?25h[?25li[35;86H8[32;8H[?25h[?25ln[35;86H9[32;9H[?25h[?25l([35;86H10[32;10H[?25h[?25lc[35;87H1[32;11H[?25h[?25lh[35;87H2[32;12H[?25h[?25la[35;87H3[32;13H[?25h[?25l[32mchar[m[30m[47m[35;87H4[32;14H[?25h[?25l[35;87H5[32;15H[?25h[?25l[35;87H4[32;14H[?25h[?25l([35;87H5[32;15H[?25h[?25l[32;14H[K[35;87H4[32;14H[?25h[?25l*[35;87H5[32;15H[?25h[?25l[35;87H6[32;16H[?25h[?25la[35;87H7[32;17H[?25h[?25lr[35;87H8[32;18H[?25h[?25lg[35;87H9[32;19H[?25h[?25lv[35;86H20[32;20H[?25h[?25l,[35;87H1[32;21H[?25h[?25l[35;87H2[32;22H[?25h[?25l[35;87H1[32;21H[?25h[?25l[32;20H[K[35;87H0[32;20H[?25h[?25l[32;19H[K[35;86H19[32;19H[?25h[?25l[32;18H[K[35;87H8[32;18H[?25h[?25l[32;17H[K[35;87H7[32;17H[?25h[?25l[32;16H[K[35;87H6[32;16H[?25h[?25l[35;87H5[32;15H[?25h[?25l[32;14H[K[35;87H4[32;14H[?25h[?25lcha[32;13H[K[35;87H3[32;13H[?25h[?25l[32;12H[K[35;87H2[32;12H[?25h[?25l[32;11H[K[35;87H1[32;11H[?25h[?25l[32;10H[K[35;87H0[32;10H[?25h[?25li[35;87H1[32;11H[?25h[?25ln[35;87H2[32;12H[?25h[?25l[32mint[m[30m[47m[35;87H3[32;13H[?25h[?25l[35;87H4[32;14H[?25h[?25la[35;87H5[32;15H[?25h[?25lr[35;87H6[32;16H[?25h[?25lg[35;87H7[32;17H[?25h[?25lv[35;87H8[32;18H[?25h[?25l,[35;87H9[32;19H[?25h[?25l[32;18H[K[35;87H8[32;18H[?25h[?25l[32;17H[K[35;87H7[32;17H[?25h[?25lc[35;87H8[32;18H[?25h[?25l,[35;87H9[32;19H[?25h[?25l[35;86H20[32;20H[?25h[?25lc[35;87H1[32;21H[?25h[?25lh[35;87H2[32;22H[?25h[?25la[35;87H3[32;23H[?25h[?25l[32mchar[m[30m[47m[35;87H4[32;24H[?25h[?25l*[35;87H5[32;25H[?25h[?25l[35;87H6[32;26H[?25h[?25l[35;87H5[32;25H[?25h[?25l[32;24H[K[35;87H4[32;24H[?25h[?25l[35;87H5[32;25H[?25h[?25l*[35;87H6[32;26H[?25h[?25la[35;87H7[32;27H[?25h[?25lr[35;87H8[32;28H[?25h[?25lg[35;87H9[32;29H[?25h[?25lv[35;86H30[32;30H[?25h[?25l[[35;87H1[32;31H[?25h[?25l][46m[][m[30m[47m[35;87H2[32;32H[?25h[?25l)[32;9H[46m([m[30m[47m[20C[][46m)[m[30m[47m[35;87H3[32;33H[?25h[?25l{[32;9H([22C)[35;87H4[32;34H[?25h[?25l
        [33;9H[K[35;84H3,2-9[33;9H[?25h[?25ls[35;86H3-10[33;10H[?25h[?25l[33;9H[K[35;86H2-9 [33;9H[?25h[?25ls[35;86H3-10[33;10H[?25h[?25lt[35;86H4-11[33;11H[?25h[?25lr[35;86H5-12[33;12H[?25h[?25li[35;86H6-13[33;13H[?25h[?25ln[35;86H7-14[33;14H[?25h[?25lg[35;86H8-15[33;15H[?25h[?25l[35;86H9-16[33;16H[?25h[?25l=[35;86H10-17[33;17H[?25h[?25l[35;87H1-18[33;18H[?25h[?25l[35;87H0-17[33;17H[?25h[?25l[33;16H[K[35;86H9-16 [33;16H[?25h[?25l[35;86H8-15[33;15H[?25h[?25l[33;14H[K[35;86H7-14[33;14H[?25h[?25lg[35;86H8-15[33;15H[?25h[?25l[35;86H9-16[33;16H[?25h[?25l=[35;86H10-17[33;17H[?25h[?25l[35;87H1-18[33;18H[?25h[?25l[31m"[m[30m[47m[35;87H2-19[33;19H[?25h[?25l[31m}[m[30m[47m[32;33H[46m{[m[30m[47m[33;19H[31m[46m}[m[30m[47m[35;87H3-20[33;20H[?25h[?25l[33;19H[K[32;33H{[35;87H2-19[33;19H[?25h[?25l[31m9[m[30m[47m[35;87H3-20[33;20H[?25h[?25l[33;19H[K[35;87H2-19[33;19H[?25h[?25l[31m'[m[30m[47m[35;87H3-20[33;20H[?25h[?25l[31m9[m[30m[47m[35;87H4-21[33;21H[?25h[?25l[33;20H[K[35;87H3-20[33;20H[?25h[?25l[31m([m[30m[47m[35;87H4-21[33;21H[?25h[?25l[31m'[m[30m[47m[35;87H5-22[33;22H[?25h[?25l[31m [m[30m[47m[35;87H6-23[33;23H[?25h[?25l[31m'[m[30m[47m[35;87H7-24[33;24H[?25h[?25l[31m([m[30m[47m[35;87H8-25[33;25H[?25h[?25l[31m'[m[30m[47m[35;87H9-26[33;26H[?25h[?25l[31m [m[30m[47m[35;86H20-27[33;27H[?25h[?25l[31m'[m[30m[47m[35;87H1-28[33;28H[?25h[?25l[31m)[m[30m[47m[31m[46m([3C)[m[30m[47m[35;87H2-29[33;29H[?25h[?25l[31m'(' ')[m[30m[47m[35;87H3-30[33;30H[?25h[?25l[31m [m[30m[47m[35;87H4-31[33;31H[?25h[?25l[31m'[m[30m[47m[35;87H5-32[33;32H[?25h[?25l[31m([m[30m[47m[35;87H6-33[33;33H[?25h[?25l[31m'[m[30m[47m[35;87H7-34[33;34H[?25h[?25l[31m"[m[30m[47m[35;87H8-35[33;35H[?25h[?25l;[35;87H9-36[33;36H[?25h[?25l
        [34;9H[K[35;84H4,2-9  [34;9H[?25h[?25lr[35;86H3-10[34;10H[?25h[?25le[35;86H4-11[34;11H[?25h[?25lt[35;86H5-12[34;12H[?25h[?25l[34;11H[K[35;86H4-11[34;11H[?25h[?25l[34;10H[K[35;86H3-10[34;10H[?25h[?25l[34;9H[K[35;86H2-9 [34;9H[?25h[?25ls[35;86H3-10[34;10H[?25h[?25lt[35;86H4-11[34;11H[?25h[?25l[34;10H[K[35;86H3-10[34;10H[?25h[?25l[34;9H[K[35;86H2-9 [34;9H[?25h[?25lr[35;86H3-10[34;10H[?25h[?25le[35;86H4-11[34;11H[?25h[?25lt[35;86H5-12[34;12H[?25h[?25lu[35;86H6-13[34;13H[?25h[?25lr[35;86H7-14[34;14H[?25h[?25l[33mreturn[m[30m[47m[35;86H8-15[34;15H[?25h[?25l[35;86H9-16[34;16H[?25h[?25lc[35;86H10-17[34;17H[?25h[?25lo[35;87H1-18[34;18H[?25h[?25ln[35;87H2-19[34;19H[?25h[?25lc[35;87H3-20[34;20H[?25h[?25le[35;87H4-21[34;21H[?25h[?25l[34;20H[K[35;87H3-20[34;20H[?25h[?25la[35;87H4-21[34;21H[?25h[?25lt[35;87H5-22[34;22H[?25h[?25le[35;87H6-23[34;23H[?25h[?25ln[35;87H7-24[34;24H[?25h[?25la[35;87H8-25[34;25H[?25h[?25lt[35;87H9-26[34;26H[?25h[?25le[35;86H20-27[34;27H[?25h[?25l([35;87H1-28[34;28H[?25h[?25ls[35;87H2-29[34;29H[?25h[?25lt[35;87H3-30[34;30H[?25h[?25lr[35;87H4-31[34;31H[?25h[?25li[35;87H5-32[34;32H[?25h[?25ln[35;87H6-33[34;33H[?25h[?25lg[35;87H7-34[34;34H[?25h[?25l)[34;27H[46m([m[30m[47mstring[46m)[m[30m[47m[35;87H8-35[34;35H[?25h[?25l;[34;27H(string)[35;87H9-36[34;36H[?25h[?25l[1;34r[34;1H
[1;35r[35;83H[K[35;83H35,2-9[8CBot[34;9H[?25h[?25l}[31;33H[46m{


}[m[30m[47m[35;87H  [34;2H[?25h[35;1H[K[34;1H[?25l[35;73H^[[34;1H[35;73H  [34;2H[35;83H35,1[10CBot[34;1H[?25h[?25l[35;73H:[34;1H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 35L, 599C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
make: *** No targets specified and no makefile found.  Stop.
amchugh2@remote06:~/i240b/submit/lab11$ touch Makefile
amchugh2@remote06:~/i240b/submit/lab11$ vim Makefile
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"Makefile" 0L, 0C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                                   [3;1H~                                                                                                   [4;1H~                                                                                                   [5;1H~                                                                                                   [6;1H~                                                                                                   [7;1H~                                                                                                   [8;1H~                                                                                                   [9;1H~                                                                                                   [10;1H~                                                                                                   [11;1H~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [m[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73HT[1;1H[?25h[?25l[35;73H [1;1H[?25h[?25l[35;1H[1m-- REPLACE --[m[35;14H[K[35;83H0,1[11CAll[1;1HG[35;83H1,2[1;2H[?25h[?25lE[35;85H3[1;3H[?25h[?25lT[35;85H4[1;4H[?25h[?25lE[35;85H5[1;5H[?25h[?25l[35;85H6[1;6H[?25h[?25l[35;85H5[1;5H[?25h[?25l[1;4H[K[35;85H4[1;4H[?25h[?25l[1;3H[K[35;85H3[1;3H[?25h[?25l[1;2H[K[35;85H2[1;2H[?25h[?25l[1;1H[K[35;85H1[1;1H[?25h[?25lT[35;85H2[1;2H[?25h[?25lA[35;85H3[1;3H[?25h[?25lR[35;85H4[1;4H[?25h[?25lG[35;85H5[1;5H[?25h[?25lE[35;85H6[1;6H[?25h[?25lT[35;85H7[1;7H[?25h[?25l[35;85H8[1;8H[?25h[?25l[36mTARGET [m=[35;85H9[1;9H[?25h[?25l[35;85H10[1;10H[?25h[?25lb[35;86H1[1;11H[?25h[?25la[35;86H2[1;12H[?25h[?25ll[35;86H3[1;13H[?25h[?25la[35;86H4[1;14H[?25h[?25ln[35;86H5[1;15H[?25h[?25lc[35;86H6[1;16H[?25h[?25led[2;1H[K[35;83H2,1 [2;1H[?25h[?25l[3;1H[K[35;83H3[3;1H[?25h[?25lO[35;85H2[3;2H[?25h[?25lU[35;85H3[3;3H[?25h[?25l[3;2H[K[35;85H2[3;2H[?25h[?25lF[35;85H3[3;3H[?25h[?25lI[35;85H4[3;4H[?25h[?25lL[35;85H5[3;5H[?25h[?25lE[35;85H6[3;6H[?25h[?25lS[35;85H7[3;7H[?25h[?25l[35;85H8[3;8H[?25h[?25l[36mOFILES [m=[35;85H9[3;9H[?25h[?25l[35;85H10[3;10H[?25h[?25lb[35;86H1[3;11H[?25h[?25la[35;86H2[3;12H[?25h[?25ll[35;86H3[3;13H[?25h[?25la[35;86H4[3;14H[?25h[?25ln[35;86H5[3;15H[?25h[?25lc[35;86H6[3;16H[?25h[?25le[35;86H7[3;17H[?25h[?25ld[35;86H8[3;18H[?25h[?25l.[35;86H9[3;19H[?25h[?25lo[35;85H20[3;20H[?25h[?25l[4;1H[K[35;83H4,1 [4;1H[?25h[?25l[5;1H[K[35;83H5[5;1H[?25h[?25lC[35;85H2[5;2H[?25h[?25lX[35;85H3[5;3H[?25h[?25lX[35;85H4[5;4H[?25h[?25l[35;85H5[5;5H[?25h[?25l[36mCXX [m=[35;85H6[5;6H[?25h[?25l[35;85H7[5;7H[?25h[?25lg[35;85H8[5;8H[?25h[?25l+[35;85H9[5;9H[?25h[?25l+[35;85H10[5;10H[?25h[?25l[6;1H[K[35;83H6,1 [6;1H[?25h[?25lC[35;85H2[6;2H[?25h[?25lF[35;85H3[6;3H[?25h[?25lL[35;85H4[6;4H[?25h[?25lA[35;85H5[6;5H[?25h[?25lG[35;85H6[6;6H[?25h[?25lS[35;85H7[6;7H[?25h[?25l[35;85H8[6;8H[?25h[?25l[36mCFLAGS [m=[35;85H9[6;9H[?25h[?25l[35;85H10[6;10H[?25h[?25l-[35;86H1[6;11H[?25h[?25lg[35;86H3[6;13H[?25h[?25l-[35;86H4[6;14H[?25h[?25l[35;86H5[6;15H[?25h[?25lw[35;86H6[6;16H[?25h[?25la[35;86H7[6;17H[?25h[?25ll[35;86H8[6;18H[?25h[?25l[6;17H[K[35;86H7[6;17H[?25h[?25l[6;16H[K[35;86H6[6;16H[?25h[?25l[6;15H[K[35;86H5[6;15H[?25h[?25l[35;86H4[6;14H[?25h[?25lW[35;86H5[6;15H[?25h[?25la[35;86H6[6;16H[?25h[?25ll[35;86H7[6;17H[?25h[?25ll[35;86H8[6;18H[?25h[?25l[35;86H9[6;19H[?25h[?25l-[35;85H20[6;20H[?25h[?25ls[35;86H1[6;21H[?25h[?25lt[35;86H2[6;22H[?25h[?25ld[35;86H3[6;23H[?25h[?25l=[35;86H4[6;24H[?25h[?25lc[35;86H5[6;25H[?25h[?25l+[35;86H6[6;26H[?25h[?25l+[35;86H7[6;27H[?25h[?25l1[35;86H8[6;28H[?25h[?25l7[35;86H9[6;29H[?25h[?25l[7;1H[K[35;83H7,1 [7;1H[?25h[?25l[8;1H[K[35;83H8[8;1H[?25h[?25lL[35;85H2[8;2H[?25h[?25lF[35;85H3[8;3H[?25h[?25l[8;2H[K[35;85H2[8;2H[?25h[?25lD[35;85H3[8;3H[?25h[?25lF[35;85H4[8;4H[?25h[?25lL[35;85H5[8;5H[?25h[?25lA[35;85H6[8;6H[?25h[?25lG[35;85H7[8;7H[?25h[?25lS[35;85H8[8;8H[?25h[?25l[35;85H9[8;9H[?25h[?25l[36mLDFLAGS [m=[35;85H10[8;10H[?25h[?25l[35;86H1[8;11H[?25h[?25l[9;1H[K[35;83H9,1 [9;1H[?25h[?25l[10;1H[K[35;83H10,1[10;1H[?25h[?25l$[35;86H2[10;2H[?25h[?25l[36m$([m[35;86H3[10;3H[?25h[?25l[36mT[m[35;86H4[10;4H[?25h[?25l[36mA[m[35;86H5[10;5H[?25h[?25l[36mR[m[35;86H6[10;6H[?25h[?25l[36mG[m[35;86H7[10;7H[?25h[?25l[36mE[m[35;86H8[10;8H[?25h[?25l[36mT[m[35;86H9[10;9H[?25h[?25l[36m)[m[10;2H[36m[46m([6C)[m[35;86H10[10;10H[?25h[?25l[36m:$(TARGET)[m[35;87H1[10;11H[?25h[?25l[36m      [m[35;87H2-17[10;17H[?25h[?25l      $[35;87H3-18[10;18H[?25h[?25l[36m$(O[m[35;87H5-20[10;20H[?25h[?25l[36mF[m[35;87H6-21[10;21H[?25h[?25l[36mI[m[35;87H7-22[10;22H[?25h[?25l[36mL[m[35;87H8-23[10;23H[?25h[?25l[36mE[m[35;87H9-24[10;24H[?25h[?25l[36mS[m[35;86H20-25[10;25H[?25h[?25l[36m)[m[10;18H[36m[46m([6C)[m[35;87H1-26[10;26H[?25h[?25l
[31m        [m[11;9H[K[10;18H[36m(OFILES)[m[35;84H1,2-9  [11;9H[?25h[?25l[31m        [m[35;86H3-17[11;17H[?25h[?25l[31m$[m[35;86H4-18[11;18H[?25h[?25l[36m$([m[35;86H5-19[11;19H[?25h[?25l[36mC[m[35;86H6-20[11;20H[?25h[?25l[36mX[m[35;86H7-21[11;21H[?25h[?25l[36mX[m[35;86H8-22[11;22H[?25h[?25l[36m)[m[36m[46m([3C)[m[35;86H9-23[11;23H[?25h[?25l[31m [m[36m(CXX)[m[35;86H10-24[11;24H[?25h[?25l[31m$[m[35;87H1-25[11;25H[?25h[?25l[36m$([m[35;87H2-26[11;26H[?25h[?25l[36mO[m[35;87H3-27[11;27H[?25h[?25l[36mF[m[35;87H4-28[11;28H[?25h[?25l[36mI[m[35;87H5-29[11;29H[?25h[?25l[36mL[m[35;87H6-30[11;30H[?25h[?25l[36mE[m[35;87H7-31[11;31H[?25h[?25l[36mS[m[35;87H8-32[11;32H[?25h[?25l[36m)[m[11;25H[36m[46m([6C)[m[35;87H9-33[11;33H[?25h[?25l[31m [m[11;25H[36m(OFILES)[m[35;86H20-34[11;34H[?25h[?25l[31m$[m[35;87H1-35[11;35H[?25h[?25l[36m$([m[35;87H2-36[11;36H[?25h[?25l[36mF[m[35;87H3-37[11;37H[?25h[?25l[11;36H[K[35;87H2-36[11;36H[?25h[?25l[36mL[m[35;87H3-37[11;37H[?25h[?25l[36mD[m[35;87H4-38[11;38H[?25h[?25l[36mF[m[35;87H5-39[11;39H[?25h[?25l[36mL[m[35;87H6-40[11;40H[?25h[?25l[36mA[m[35;87H7-41[11;41H[?25h[?25l[36mG[m[35;87H8-42[11;42H[?25h[?25l[36mS[m[35;87H9-43[11;43H[?25h[?25l[36m)[m[11;35H[36m[46m([7C)[m[35;86H30-44[11;44H[?25h[?25l[31m [m[11;35H[36m([7C)[m[35;87H1-45[11;45H[?25h[?25l[31m-[m[35;87H2-46[11;46H[?25h[?25l[31m [m[35;87H3-47[11;47H[?25h[?25l[31mo[?25h[?25l [m[35;87H4-48[11;48H[?25h[?25l[31m$[m[35;87H5-49[11;49H[?25h[?25l[36m$A[m[35;87H6-50[11;50H[?25h[?25l[31m$[m[11;49H[K[35;87H5-49[11;49H[?25h[?25l[36m$@[m[35;87H6-50[11;50H[?25h[?25l
[31m                [m[12;17H[K[35;84H2,3-17 [12;17H[?25h[?25l[12;9H[K[35;86H2-9 [12;9H[?25h[?25l[12;1H[K[35;86H1  [12;1H[?25h[?25l[13;1H[K[35;84H3[13;1H[?25h[?25lc[35;86H2[13;2H[?25h[?25ll[35;86H3[13;3H[?25h[?25le[35;86H4[13;4H[?25h[?25la[35;86H5[13;5H[?25h[?25ln[35;86H6[13;6H[?25h[?25l[36mclean:[m[35;86H7[13;7H[?25h[?25l
[31m        [m[14;9H[K[35;84H4,2-9[14;9H[?25h[?25l[31mr[m[35;86H3-10[14;10H[?25h[?25l[31mm[m[35;86H4-11[14;11H[?25h[?25l[31m [m[35;86H5-12[14;12H[?25h[?25l[31mf[m[35;86H6-13[14;13H[?25h[?25l[14;12H[K[35;86H5-12[14;12H[?25h[?25l[31m-[m[35;86H6-13[14;13H[?25h[?25l[31mf[m[35;86H7-14[14;14H[?25h[?25l[31m [m[35;86H8-15[14;15H[?25h[?25l[31m*[m[35;86H9-16[14;16H[?25h[?25l[31m~[m[35;86H10-17[14;17H[?25h[?25l[31m [m[35;87H1-18[14;18H[?25h[?25l[31m$[m[35;87H2-19[14;19H[?25h[?25l[36m$([m[35;87H3-20[14;20H[?25h[?25l[36mO[m[35;87H4-21[14;21H[?25h[?25l[36mF[m[35;87H5-22[14;22H[?25h[?25l[36mI[m[35;87H6-23[14;23H[?25h[?25l[36mL[m[35;87H7-24[14;24H[?25h[?25l[36mE[m[35;87H8-25[14;25H[?25h[?25l[36mS[m[35;87H9-26[14;26H[?25h[?25l[36m)[m[14;19H[36m[46m([6C)[m[35;86H20-27[14;27H[?25h[?25l[31m [m[14;19H[36m(OFILES)[m[35;87H1-28[14;28H[?25h[?25l[31m$[m[35;87H2-29[14;29H[?25h[?25l[36m$([m[35;87H3-30[14;30H[?25h[?25l[36mT[m[35;87H4-31[14;31H[?25h[?25l[36mA[m[35;87H5-32[14;32H[?25h[?25l[36mR[m[35;87H6-33[14;33H[?25h[?25l[36mG[m[35;87H7-34[14;34H[?25h[?25l[36mE[m[35;87H8-35[14;35H[?25h[?25l[36mT[m[35;87H9-36[14;36H[?25h[?25l[36m)[m[14;29H[36m[46m([6C)[m[35;86H30-37[14;37H[?25h[?25l
[31m        [m[15;9H[K[14;29H[36m(TARGET)[m[35;84H5,2-9  [15;9H[?25h[?25l[15;1H[K[16;1H[K[35;84H6,1  [16;1H[?25h[?25lb[35;86H2[16;2H[?25h[?25la[35;86H3[16;3H[?25h[?25ll[35;86H4[16;4H[?25h[?25la[35;86H5[16;5H[?25h[?25ln[35;86H6[16;6H[?25h[?25lc[35;86H7[16;7H[?25h[?25le[35;86H8[16;8H[?25h[?25ld[35;86H9[16;9H[?25h[?25l.[35;86H10[16;10H[?25h[?25lo[35;87H1[16;11H[?25h[?25l[36mbalanced.o:[m[35;87H2[16;12H[?25h[?25l[36m     [m[35;87H3-17[16;17H[?25h[?25l     p[35;87H4-18[16;18H[?25h[?25l[36m     [m[16;17H[K[35;87H3-17[16;17H[?25h[?25l     b[35;87H4-18[16;18H[?25h[?25la[35;87H5-19[16;19H[?25h[?25ll[35;87H6-20[16;20H[?25h[?25la[35;87H7-21[16;21H[?25h[?25ln[35;87H8-22[16;22H[?25h[?25lc[35;87H9-23[16;23H[?25h[?25le[35;86H20-24[16;24H[?25h[?25ld[35;87H1-25[16;25H[?25h[?25l.[35;87H2-26[16;26H[?25h[?25lc[35;87H3-27[16;27H[?25h[?25lc[35;87H4-28[16;28H[?25h[?25l
[31m        [m[17;9H[K[35;84H7,2-9  [17;9H[?25h[?25l[17;1H[K[35;86H1  [17;1H[?25h[?25l[18;1H[K[35;84H8[18;1H[?25h[?25lT[35;86H2[18;2H[?25h[?25lA[35;86H3[18;3H[?25h[?25lR[35;86H4[18;4H[?25h[?25lG[35;86H5[18;5H[?25h[?25lE[35;86H6[18;6H[?25h[?25lT[35;86H7[18;7H[?25h[?25l[36mTARGET:[m[35;86H8[18;8H[?25h[?25l[36m [m[35;86H9[18;9H[?25h[?25l[36m        [m[35;86H10-17[18;17H[?25h[?25l[18;8H         b[35;87H1-18[18;18H[?25h[?25la[35;87H2-19[18;19H[?25h[?25ll[35;87H3-20[18;20H[?25h[?25la[35;87H4-21[18;21H[?25h[?25ln[35;87H5-22[18;22H[?25h[?25lc[35;87H6-23[18;23H[?25h[?25le[35;87H7-24[18;24H[?25h[?25ld[35;87H8-25[18;25H[?25h[?25l.[35;87H9-26[18;26H[?25h[?25lo[35;86H20-27[18;27H[?25h[?25l[35;87H1-33[18;33H[?25h[?25l[35;87H0-27[18;27H[?25h[?25l[35;87H1-28[18;28H[?25h[?25lb[35;87H2-29[18;29H[?25h[?25la[35;87H3-30[18;30H[?25h[?25ll[35;87H4-31[18;31H[?25h[?25la[35;87H5-32[18;32H[?25h[?25ln[35;87H6-33[18;33H[?25h[?25lc[35;87H7-34[18;34H[?25h[?25le[35;87H8-35[18;35H[?25h[?25ld[35;87H9-36[18;36H[?25h[?25l.[35;86H30-37[18;37H[?25h[?25lc[35;87H1-38[18;38H[?25h[?25lc[35;87H2-39[18;39H[?25h[35;1H[K[18;38H[?25l[35;73H^[[18;38H[35;73H  [18;39H[35;83H18,31-38      All[18;38H[?25h[?25l[35;73H:[18;38H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"Makefile" 18L, 245C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:5:10:[m[K [01;31m[Kfatal error: [m[Kalgorithmn: No such file or directory
 #include [01;31m[K<algorithmn>[m[K
          [01;31m[K^~~~~~~~~~~~[m[K
compilation terminated.
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ vim a[Kbalanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 35L, 599C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithmn>[m

[33musing[m [32mnamespace[m std;

string concatenate(string input){[9;9H[32mchar[m bad[] = [31m"'"[m;[10;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(chars); ++i){[11;17Hinput.erase(remove(input.begin(), input.end(), chars[i], str.end());[12;17H}[13;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[27;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[])[46m{[m[32;9Hstring = [31m"'(' '(' ')' '('"[m;[33;9H[33mreturn[m concatenate(string);
[46m}[m[35;83H35,1[10CBot[34;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[31m<stddef.h>[m[32;33H{[35;1H[K[35;83H5,21[10CTop[5;21H[?25h[?25l[35;73H~@k[5;21H[35;73H   [5;21H[35;1H[1m-- INSERT --[m[35;83H[K[35;83H5,21[10CTop[5;21H[?25h[?25l[35;86H2[5;22H[?25h[?25l[35;86H1[5;21H[?25h[?25l[31m>[m[5;21H[K[35;86H0[5;20H[?25h[35;1H[K[5;19H[?25l[35;73H^[[5;19H[35;73H  [5;20H[35;83H5,19[10CTop[5;19H[?25h[?25l[35;73H:[5;19H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 35L, 598C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:9:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstring[m[Kâ€™ does not name a type; did you mean â€˜[01m[Kstdin[m[Kâ€™?
 [01;31m[Kstring[m[K concatenate(string input){
 [01;31m[K^~~~~~[m[K
 [32m[Kstdin[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:33:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstring[m[Kâ€™ was not declared in this scope
  [01;31m[Kstring[m[K = "'(' '(' ')' '('";
  [01;31m[K^~~~~~[m[K
[01m[Kbalanced.cc:33:2:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstd::string[m[Kâ€™ is defined in header â€˜[01m[K<string>[m[Kâ€™; did you forget to â€˜[01m[K#include <string>[m[Kâ€™?
[01m[Kbalanced.cc:6:1:[m[K
+[32m[K#include <string>[m[K
 
[01m[Kbalanced.cc:33:2:[m[K
  [01;36m[Kstring[m[K = "'(' '(' ')' '('";
  [01;36m[K^~~~~~[m[K
[01m[Kbalanced.cc:34:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconcatenate[m[Kâ€™ was not declared in this scope
  return [01;31m[Kconcatenate[m[K(string);
         [01;31m[K^~~~~~~~~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ vim str[K[K[Kc[Kbalanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 35L, 598C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m

[33musing[m [32mnamespace[m std;

string concatenate(string input){[10;9H[32mchar[m bad[] = [31m"'"[m;[11;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(chars); ++i){[12;17Hinput.erase(remove(input.begin(), input.end(), chars[i], str.end());[13;17H}[14;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[28;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[33;9Hstring = [31m"'(' '(' ')' '('"[m;[34;9H[33mreturn[m concatenate(string);[35;83H5,19[10CTop[5;19H[?25h[?25l[35;73H~@k[5;19H[35;73H   [5;19H[35;1H[1m-- INSERT --[m[35;13H[K[35;83H5,19[10CTop[5;19H[?25h[?25l[35;85H20[5;20H[?25h[?25l[35;86H1[5;21H[?25h[?25l[6;34r[6;1H[L[1;35r[35;83H[K[35;83H6,1[11CTop[6;1H[?25h[?25l#[35;85H2[6;2H[?25h[?25li[35;85H3[6;3H[?25h[?25ln[35;85H4[6;4H[?25h[?25lc[35;85H5[6;5H[?25h[?25ll[35;85H6[6;6H[?25h[?25lu[35;85H7[6;7H[?25h[?25ld[35;85H8[6;8H[?25h[?25le[35;85H9[6;9H[?25h[?25l[35;85H10[6;10H[?25h[?25l[35m#include <[m[35;86H1[6;11H[?25h[?25ls[35;86H2[6;12H[?25h[?25lt[35;86H3[6;13H[?25h[?25lr[35;86H4[6;14H[?25h[?25li[35;86H5[6;15H[?25h[?25ln[35;86H6[6;16H[?25h[?25lg[35;86H7[6;17H[?25h[?25l[6;10H[31m<string>[m[35;86H8[6;18H[?25h[?25l[35;83H7,1 [7;1H[?25h[?25l[35;83H8,18[8;18H[?25h[?25l[35;83H9,1 [9;1H[?25h[?25l[35;83H10,18[10;18H[?25h[?25l[11;17H[46m[][m[35;84H1,11-18[11;18H[?25h[?25l[][35;84H3,4-18 [13;18H[?25h[?25l[12;56H[46m{[14;17H}[m[35;84H4[14;18H[?25h[?25l[12;56H{[14;17H}[35;84H5,11-18[15;18H[?25h[?25l[10;33H[46m{[16;1H}[m[35;84H6,2    [16;2H[?25h[?25l[10;33H{[16;1H}[35;84H7,1[17;1H[?25h[?25l[35;84H8[18;1H[?25h[?25l[35;84H9,3[19;3H[?25h[?25l[20;17H[34m[46m([10C)[m[35;83H20,18[20;18H[?25h[?25l[34m([10C)[m[35;84H1,11-18[21;18H[?25h[?25l[35;84H2,10-17[22;17H[?25h[?25l[35;84H3,2-9  [23;9H[?25h[?25l[35;84H4,11-18[24;18H[?25h[?25l[35;84H5[25;18H[?25h[?25l[35;84H6,1    [26;1H[?25h[?25l[35;84H7[27;1H[?25h[?25l[35;84H8[28;1H[?25h[?25l[29;17H[34m[46m([22C)[m[35;84H9,11-18[29;18H[?25h[?25l[1;34r[34;1H
[1;35r[34;9H[33mreturn[m concatenate(string);[35;83H[K[35;83H30,3-10[7C50%[28;17H[34m([22C)[m[34m[46m{[29;9H}[?25h[?25l[1;34r[m[34;1H
[1;35r[34;1H}[35;83H[K[35;83H31,3[10CBot[27;41H[34m{[28;9H}
*/[?25h[?25l[m[35;84H2,1[30;1H[?25h[?25l[35;84H4,11-18[32;18H[?25h[?25l[35;84H5[33;18H[?25h[?25l[31;33H[46m{


}[m[35;84H6,2    [34;2H[?25h[?25l[31;33H{


}[35;84H4,1[32;1H[?25h[?25l[8C        string = [31m"'(' '(' ')' '('"[m;[35;86H2-9[32;9H[?25h[?25ls[35;86H3-10[32;10H[?25h[?25lt[35;86H4-11[32;11H[?25h[?25lr[35;86H5-12[32;12H[?25h[?25li[35;86H6-13[32;13H[?25h[?25ln[35;86H7-14[32;14H[?25h[?25lg[35;86H8-15[32;15H[?25h[?25lstring = [31m"'(' '(' ')' '('"[m;[32;42H[K[32;15H[?25h[?25l string = [31m"'(' '(' ')' '('"[m;[35;86H9-16[32;16H[?25h[?25l[35;86H10-17[32;17H[?25h[?25l[35;87H1-18[32;18H[?25h[?25l[35;87H2-19[32;19H[?25h[?25l[35;87H3-20[32;20H[?25h[?25l[35;87H4-21[32;21H[?25h[?25l[35;87H5-22[32;22H[?25h[?25l = [31m"'(' '(' ')' '('"[m;[32;42H[K[35;87H4-21[32;21H[?25h[?25l = [31m"'(' '(' ')' '('"[m;[32;41H[K[35;87H3-20[32;20H[?25h[?25l = [31m"'(' '(' ')' '('"[m;[32;40H[K[35;87H2-19[32;19H[?25h[35;1H[K[32;18H[?25l[35;73H^[[32;18H[35;73H  [32;19H[35;83H34,11-18      Bot[32;18H[?25h[?25l[35;73H:[32;18H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 36L, 620C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string)[m[Kâ€™:
[01m[Kbalanced.cc:12:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kchars[m[Kâ€™ was not declared in this scope
  for(unsigned int i = 0; i < strlen([01;31m[Kchars[m[K); ++i){
                                     [01;31m[K^~~~~[m[K
[01m[Kbalanced.cc:12:37:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kchar[m[Kâ€™
  for(unsigned int i = 0; i < strlen([01;36m[Kchars[m[K); ++i){
                                     [01;36m[K^~~~~[m[K
                                     [32m[Kchar[m[K
[01m[Kbalanced.cc:12:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstrlen[m[Kâ€™ was not declared in this scope
  for(unsigned int i = 0; i < [01;31m[Kstrlen[m[K(chars); ++i){
                              [01;31m[K^~~~~~[m[K
[01m[Kbalanced.cc:12:30:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstrlen[m[Kâ€™ is defined in header â€˜[01m[K<cstring>[m[Kâ€™; did you forget to â€˜[01m[K#include <cstring>[m[Kâ€™?
[01m[Kbalanced.cc:7:1:[m[K
+[32m[K#include <cstring>[m[K
 
[01m[Kbalanced.cc:12:30:[m[K
  for(unsigned int i = 0; i < [01;36m[Kstrlen[m[K(chars); ++i){
                              [01;36m[K^~~~~~[m[K
[01m[Kbalanced.cc:13:60:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstr[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), chars[i], [01;31m[Kstr[m[K.end());
                                                            [01;31m[K^~~[m[K
[01m[Kbalanced.cc:13:60:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kstd[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), chars[i], [01;36m[Kstr[m[K.end());
                                                            [01;36m[K^~~[m[K
                                                            [32m[Kstd[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:35:27:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  return concatenate(string[01;31m[K)[m[K;
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string)[m[Kâ€™:
[01m[Kbalanced.cc:12:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kchars[m[Kâ€™ was not declared in this scope
  for(unsigned int i = 0; i < strlen([01;31m[Kchars[m[K); ++i){
                                     [01;31m[K^~~~~[m[K
[01m[Kbalanced.cc:12:37:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kchar[m[Kâ€™
  for(unsigned int i = 0; i < strlen([01;36m[Kchars[m[K); ++i){
                                     [01;36m[K^~~~~[m[K
                                     [32m[Kchar[m[K
[01m[Kbalanced.cc:12:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstrlen[m[Kâ€™ was not declared in this scope
  for(unsigned int i = 0; i < [01;31m[Kstrlen[m[K(chars); ++i){
                              [01;31m[K^~~~~~[m[K
[01m[Kbalanced.cc:12:30:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstrlen[m[Kâ€™ is defined in header â€˜[01m[K<cstring>[m[Kâ€™; did you forget to â€˜[01m[K#include <cstring>[m[Kâ€™?
[01m[Kbalanced.cc:7:1:[m[K
+[32m[K#include <cstring>[m[K
 
[01m[Kbalanced.cc:12:30:[m[K
  for(unsigned int i = 0; i < [01;36m[Kstrlen[m[K(chars); ++i){
                              [01;36m[K^~~~~~[m[K
[01m[Kbalanced.cc:13:60:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstr[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), chars[i], [01;31m[Kstr[m[K.end());
                                                            [01;31m[K^~~[m[K
[01m[Kbalanced.cc:13:60:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kstd[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), chars[i], [01;36m[Kstr[m[K.end());
                                                            [01;36m[K^~~[m[K
                                                            [32m[Kstd[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:35:27:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  return concatenate(string[01;31m[K)[m[K;
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ vim balance.[Kd.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 36L, 620C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m

[33musing[m [32mnamespace[m std;

string concatenate(string input){[9;9H[32mchar[m bad[] = [31m"'"[m;[10;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(chars); ++i){[11;17Hinput.erase(remove(input.begin(), input.end(), chars[i], str.end());[12;17H}[13;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[27;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[32;9Hstring str = [31m"'(' '(' ')' '('"[m;[33;9H[33mreturn[m concatenate(string);
}[35;83H34,11-18      Bot[32;18H[?25h[?25l[35;73H~@k[32;18H[35;73H   [32;18H


[1m-- INSERT --[m[35;13H[K[35;83H34,11-18      Bot[32;18H[?25h[?25l[1;34r[1;1H[2L[1;35r[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m[35;83H[K[35;83H5,21[10CTop[5;21H[?25h[?25l[35;83H6,18[6;18H[?25h[?25l[7;34r[7;1H[L[1;35r[35;83H[K[35;83H7,1[11CTop[7;1H[?25h[?25l#[35;85H2[7;2H[?25h[?25li[35;85H3[7;3H[?25h[?25ln[35;85H4[7;4H[?25h[?25lc[35;85H5[7;5H[?25h[?25ll[35;85H6[7;6H[?25h[?25lu[35;85H7[7;7H[?25h[?25ld[35;85H8[7;8H[?25h[?25le[35;85H9[7;9H[?25h[?25l[35;85H10[7;10H[?25h[?25l[35m#include <[m[35;86H1[7;11H[?25h[?25lc[35;86H2[7;12H[?25h[?25ls[35;86H3[7;13H[?25h[?25lt[35;86H4[7;14H[?25h[?25lr[35;86H5[7;15H[?25h[?25li[35;86H6[7;16H[?25h[?25ln[35;86H7[7;17H[?25h[?25lg[35;86H8[7;18H[?25h[?25l[7;10H[31m<cstring>[m[35;86H9[7;19H[?25h[35;1H[K[7;18H[?25l[35;73H^[[7;18H[35;73H  [7;19H[35;83H7,18[10CTop[7;18H[?25h[?25l[35;73H:[7;18H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 37L, 639C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string)[m[Kâ€™:
[01m[Kbalanced.cc:13:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kchars[m[Kâ€™ was not declared in this scope
  for(unsigned int i = 0; i < strlen([01;31m[Kchars[m[K); ++i){
                                     [01;31m[K^~~~~[m[K
[01m[Kbalanced.cc:13:37:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kchar[m[Kâ€™
  for(unsigned int i = 0; i < strlen([01;36m[Kchars[m[K); ++i){
                                     [01;36m[K^~~~~[m[K
                                     [32m[Kchar[m[K
[01m[Kbalanced.cc:14:60:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstr[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), chars[i], [01;31m[Kstr[m[K.end());
                                                            [01;31m[K^~~[m[K
[01m[Kbalanced.cc:14:60:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kstd[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), chars[i], [01;36m[Kstr[m[K.end());
                                                            [01;36m[K^~~[m[K
                                                            [32m[Kstd[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:27:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  return concatenate(string[01;31m[K)[m[K;
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 37L, 639C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m

[33musing[m [32mnamespace[m std;

string concatenate(string input){[12;9H[32mchar[m bad[] = [31m"'"[m;[13;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(chars); ++i){[14;17Hinput.erase(remove(input.begin(), input.end(), chars[i], str.end());[15;17H}[16;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[30;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[35;83H7,18[10CTop[7;18H[?25h[?25l[35;73H~@k[7;18H[35;73H   [7;18H[35;1H[1m-- INSERT --[m[35;13H[K[35;83H7,18[10CTop[7;18H[?25h[?25l[35;83H8,1 [8;1H[?25h[?25l[35;83H9,18[9;18H[?25h[?25l[35;83H10,1[10;1H[?25h[?25l[35;84H1,18[11;18H[?25h[?25l[12;17H[46m[][m[35;84H2,11-18[12;18H[?25h[?25l[][35;84H3[13;18H[?25h[?25l[35;87H2-19[13;19H[?25h[?25l[35;87H3-20[13;20H[?25h[?25l[35;87H4-21[13;21H[?25h[?25l[35;87H5-22[13;22H[?25h[?25l[35;87H6-23[13;23H[?25h[?25l[35;87H7-24[13;24H[?25h[?25l[35;87H8-25[13;25H[?25h[?25l[35;86H22-29[13;29H[?25h[?25l[35;87H3-30[13;30H[?25h[?25l[35;87H4-31[13;31H[?25h[?25l[35;87H5-32[13;32H[?25h[?25l[35;87H6-33[13;33H[?25h[?25l[35;87H7-34[13;34H[?25h[?25l[35;87H8-35[13;35H[?25h[?25l[35;87H9-36[13;36H[?25h[?25l[35;86H30-37[13;37H[?25h[?25l[35;87H1-38[13;38H[?25h[?25l[35;87H2-39[13;39H[?25h[?25l[35;87H3-40[13;40H[?25h[?25l[35;87H4-41[13;41H[?25h[?25l[35;87H5-42[13;42H[?25h[?25ln[46m([mchars[46m)[m[35;87H6-43[13;43H[?25h[?25l[35;87H7-44[13;44H[?25h[?25l(chars)[35;87H8-45[13;45H[?25h[?25l[35;87H9-46[13;46H[?25h[?25l[35;86H40-47[13;47H[?25h[?25l[35;87H1-48[13;48H[?25h[?25l[46m([mchars[46m)[m[35;87H2-49[13;49H[?25h[?25l(chars)[35;84H1,26   [11;26H[?25h[?25l[35;87H7[11;27H[?25h[?25l&input){[35;87H8[11;28H[?25h[?25l[35;87H9[11;29H[?25h[?25l[35;86H30[11;30H[?25h[?25l[35;87H1[11;31H[?25h[?25l[35;87H2[11;32H[?25h[?25l[11;19H[46m([13C)[m[35;87H3[11;33H[?25h[?25l[11;19H([13C)[13;43H[46m([mchars[46m)[m[35;84H3,42-49[13;49H[?25h[?25l[32mchar[m)[46m;[m ++i){[13;56H[K[13;48H[46m)[m;[35;87H1-48[13;48H[?25h[?25lcha)[46m;[m ++i){[13;55H[K[13;47H[46m)[m;[35;87H0-47[13;47H[?25h[?25l)[46m;[m ++i){[13;54H[K[13;46H[46m)[m;[35;86H39-46[13;46H[?25h[?25l)[46m;[m ++i){[13;53H[K[13;45H[46m)[m;[35;87H8-45[13;45H[?25h[?25l)[46m;[m ++i){[13;52H[K[13;44H[46m)[m;[35;87H7-44[13;44H[?25h[?25l[46mb[m); ++i){[13;44Hb[46m)[m[35;87H8-45[13;45H[?25h[?25l[46ma[m); ++i){[13;45Ha[46m)[m[35;87H9-46[13;46H[?25h[?25l[46md[m); ++i){[13;46Hd[46m)[m[35;86H40-47[13;47H[?25h[?25l(bad)[35;83H22,16-23[22;23H[?25h[35;1H[K[22;22H[?25l[35;73H^[[22;22H[35;73H  [22;23H[35;83H22,15-22      Top[22;22H[?25h[?25l[35;73H:[22;22H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 37L, 638C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:14:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kchars[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), [01;31m[Kchars[m[K[i], str.end());
                                                  [01;31m[K^~~~~[m[K
[01m[Kbalanced.cc:14:50:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kchar[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), [01;36m[Kchars[m[K[i], str.end());
                                                  [01;36m[K^~~~~[m[K
                                                  [32m[Kchar[m[K
[01m[Kbalanced.cc:14:60:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstr[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), chars[i], [01;31m[Kstr[m[K.end());
                                                            [01;31m[K^~~[m[K
[01m[Kbalanced.cc:14:60:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kstd[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), chars[i], [01;36m[Kstr[m[K.end());
                                                            [01;36m[K^~~[m[K
                                                            [32m[Kstd[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:27:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  return concatenate(string[01;31m[K)[m[K;
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:14:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kchars[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), [01;31m[Kchars[m[K[i], str.end());
                                                  [01;31m[K^~~~~[m[K
[01m[Kbalanced.cc:14:50:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kchar[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), [01;36m[Kchars[m[K[i], str.end());
                                                  [01;36m[K^~~~~[m[K
                                                  [32m[Kchar[m[K
[01m[Kbalanced.cc:14:60:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstr[m[Kâ€™ was not declared in this scope
   input.erase(remove(input.begin(), input.end(), chars[i], [01;31m[Kstr[m[K.end());
                                                            [01;31m[K^~~[m[K
[01m[Kbalanced.cc:14:60:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kstd[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), chars[i], [01;36m[Kstr[m[K.end());
                                                            [01;36m[K^~~[m[K
                                                            [32m[Kstd[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:27:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  return concatenate(string[01;31m[K)[m[K;
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ vim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 37L, 638C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[12;9H[32mchar[m bad[] = [31m"'"[m;[13;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[14;17Hinput.erase(remove(input.begin(), input.end(), chars[i], str.end());[15;17H}[16;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[30;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[35;83H22,15-22      Top[22;22H[?25h[?25l[35;73H~@k[22;22H[35;73H   [22;22H[35;1H[1m-- INSERT --[m[35;13H[K[35;83H22,15-22      Top[22;22H[?25h[?25l[14;69H[46m[[mi[46m][m[35;83H14,55-69[14;69H[?25h[?25l[32mchar[m[[46mi[m][46m,[m str.end());[14;84H[K[14;68H[46m[[mi[46m][m,[35;87H4-68[14;68H[?25h[?25lcha[[46mi[m][46m,[m str.end());[14;83H[K[14;67H[46m[[mi[46m][m,[35;87H3-67[14;67H[?25h[?25l[[46mi[m][46m,[m str.end());[14;82H[K[14;66H[46m[[mi[46m][m,[35;87H2-66[14;66H[?25h[?25l[[46mi[m][46m,[m str.end());[14;81H[K[14;65H[46m[[mi[46m][m,[35;87H1-65[14;65H[?25h[?25l[[46mi[m][46m,[m str.end());[14;80H[K[14;64H[46m[[mi[46m][m,[35;87H0-64[14;64H[?25h[?25l[46ma[m[[46mi[m], str.end());[14;64Ha[46m[[mi[46m][m[35;87H1-65[14;65H[?25h[?25l[[46mi[m][46m,[m str.end());[14;80H[K[14;64H[46m[[mi[46m][m,[35;87H0-64[14;64H[?25h[?25l[46mb[m[[46mi[m], str.end());[14;64Hb[46m[[mi[46m][m[35;87H1-65[14;65H[?25h[?25l[46ma[m[[46mi[m], str.end());[14;65Ha[46m[[mi[46m][m[35;87H2-66[14;66H[?25h[?25l[46md[m[[46mi[m], str.end());[14;66Hd[46m[[mi[46m][m[35;87H3-67[14;67H[?25h[?25l[i][35;86H61-75[14;75H[?25h[?25l.end());[14;82H[K[35;87H0-74[14;74H[?25h[?25l.end());[14;81H[K[35;86H59-73[14;73H[?25h[?25l.end());[14;80H[K[35;87H8-72[14;72H[?25h[?25li.end());[35;87H9-73[14;73H[?25h[?25ln.end());[35;86H60-74[14;74H[?25h[?25lp.end());[35;87H1-75[14;75H[?25h[?25lu.end());[35;87H2-76[14;76H[?25h[?25lt.end());[35;87H3-77[14;77H[?25h[35;1H[K[14;76H[?25l[35;73H^[[14;76H[35;73H  [14;77H[35;83H14,62-76      Top[14;76H[?25h[?25l[35;73H:[14;76H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 37L, 638C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:14:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kremove(std::__cxx11::basic_string<char>::iterator, std::__cxx11::basic_string<char>::iterator, char&, std::__cxx11::basic_string<char>::iterator)[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), bad[i], input.end()[01;31m[K)[m[K;
                                                                     [01;31m[K^[m[K
In file included from [01m[Kbalanced.cc:3[m[K:
[01m[K/usr/include/stdio.h:146:12:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kint remove(const char*)[m[Kâ€™
 extern int [01;36m[Kremove[m[K (const char *__filename) __THROW;
            [01;36m[K^~~~~~[m[K
[01m[K/usr/include/stdio.h:146:12:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 4 provided
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kbalanced.cc:5[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:896:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _FIter, class _Tp> _FIter std::remove(_FIter, _FIter, const _Tp&)[m[Kâ€™
     [01;36m[Kremove[m[K(_ForwardIterator __first, _ForwardIterator __last,
     [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_algo.h:896:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:14:69:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 4 provided
   input.erase(remove(input.begin(), input.end(), bad[i], input.end()[01;36m[K)[m[K;
                                                                     [01;36m[K^[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:27:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  return concatenate(string[01;31m[K)[m[K;
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 37L, 638C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[12;9H[32mchar[m bad[] = [31m"'"[m;[13;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[14;17Hinput.erase(remove(input.begin(), input.end(), bad[i], input.end());[15;17H}[16;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[30;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[35;83H14,62-76      Top[14;76H[?25h[?25l[35;73H:[14;76H[35;1H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[14;76H[27m[23m[29m[m[30m[47m[H[2J[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdio.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stack>[m[30m[47m
[35m#include [m[30m[47m[31m<algorithm>[m[30m[47m
[35m#include [m[30m[47m[31m<string>[m[30m[47m
[35m#include [m[30m[47m[31m<cstring>[m[30m[47m

[33musing[m[30m[47m [32mnamespace[m[30m[47m std;

string concatenate(string &input){[12;9H[32mchar[m[30m[47m bad[] = [31m"'"[m[30m[47m;[13;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[14;17Hinput.erase(remove(input.begin(), input.end(), bad[i], input.end());[15;17H}[16;9H[33mreturn[m[30m[47m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[30m[47m[31m0[m[30m[47m[34m; i < str.length(); i++){[30;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){[35;83H14,62-76      Top[14;76H[?25h[?25l[35;73H~@k[14;76H[35;73H   [15;17H[13;54H[46m{[15;17H}[m[30m[47m[35;84H5,3-17 [15;17H[?25h[?25l[35;73H~@k[15;17H[35;73H   [16;21H[13;54H{[15;17H}[35;84H6,14-21[16;21H[?25h[?25l[35;73H~@k[16;21H[35;73H   [17;1H[11;34H[46m{[17;1H}[m[30m[47m[35;84H7,1    [17;1H[?25h[?25l[35;73H~@k[17;1H[35;73H   [18;1H[11;34H{[17;1H}[35;84H8,0-1[18;1H[?25h[?25l[35;73H~@k[18;1H[35;73H   [19;1H[35;84H9[19;1H[?25h[?25l[35;73H~@k[19;1H[35;73H   [20;2H[35;83H20,2  [20;2H[?25h[?25l[35;73H~@k[20;2H[35;73H   [21;29H[35;84H1,29[21;29H[?25h[?25l[35;73H~@k[21;29H[35;73H   [22;22H[35;84H2,15-22[22;22H[?25h[?25l[35;73H~@k[22;22H[35;73H   [23;16H[35;84H3,9-16 [23;16H[?25h[?25l[35;73H~@k[23;16H[35;73H   [24;8H[35;84H4,1-8 [24;8H[?25h[?25l[35;73H~@k[24;8H[35;73H   [25;47H[35;84H5,40-47[25;47H[?25h[?25l[35;73H~@k[25;47H[35;73H   [26;46H[35;84H6,39-46[26;46H[?25h[?25l[35;73H~@k[26;46H[35;73H   [27;1H[35;84H7,0-1  [27;1H[?25h[?25l[35;73H~@k[27;1H[35;73H   [28;1H[35;84H8[28;1H[?25h[?25l[35;73H~@k[28;1H[35;73H   [29;1H[35;84H9[29;1H[?25h[?25l[35;73H~@k[29;1H[35;73H   [29;41H[1;34r[34;1H
[1;35r[29;41H[34m[46m{[30;9H}[m[30m[47m[34;9Hstring str = [31m"'(' '(' ')' '('"[m[30m[47m;[35;83H[K[35;83H30,34-41      33%[29;41H[?25h[?25l[35;73H~@k[29;41H[35;73H   [29;9H[1;34r[34;1H
[1;35r[34;9H[33mreturn[m[30m[47m concatenate(string);[35;83H[K[35;83H31,2-9[8C66%[29;9H[?25h[?25l[35;73H~@k[29;9H[35;73H   [29;2H[1;34r[34;1H
[1;35r[27;41H[34m{[28;9H}[m[30m[47m[34;1H}[35;83H[K[35;83H32,2[10CBot[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [30;1H[35;84H3,0-1[30;1H[?25h[?25l[35;73H~@k[30;1H[35;73H   [31;33H[46m{


}[m[30m[47m[35;84H4,33 [31;33H[?25h[?25l{


}[35;84H5,32-39[32;39H[?25h[?25l[35;73H~@k[32;39H[35;73H   [33;35H[35;84H6,28-35[33;35H[?25h[?25l[35;73H~@k[33;35H[35;73H   [34;1H[31;33H[46m{


}[m[30m[47m[35;84H7,1    [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [33;35H[31;33H{


}[35;84H6,28-35[33;35H[?25h[?25l[35;73H~@k[33;35H[35;73H   [32;39H[35;84H5,32-39[32;39H[?25h[?25l[35;73H~@k[32;39H[35;73H   [33;35H[35;84H6,28-35[33;35H[?25h[?25l[35;73H~@k[33;35H[35;73H   [33;35H

[1m-- INSERT --[m[30m[47m[35;83H[K[35;83H36,28-35      Bot[33;35H[?25h[?25l[35;87H9-36[33;36H[?25h[?25l[33;27H[46m([m[30m[47mstring[46m)[m[30m[47m[35;87H8-35[33;35H[?25h[?25l[35;87H7-34[33;34H[?25h[?25l[33;27H(string)[35;87H6-33[33;33H[?25h[?25l[35;87H5-32[33;32H[?25h[?25l[35;87H4-31[33;31H[?25h[?25l[35;87H3-30[33;30H[?25h[?25l[35;87H2-29[33;29H[?25h[?25l[46m([m[30m[47mstring[46m)[m[30m[47m[35;87H1-28[33;28H[?25h[?25l[35;87H0-27[33;27H[?25h[?25l(string)[35;86H19-26[33;26H[?25h[?25l[35;87H8-25[33;25H[?25h[?25l[35;87H7-24[33;24H[?25h[?25l[35;87H6-23[33;23H[?25h[?25l[35;87H5-22[33;22H[?25h[?25l[35;87H4-21[33;21H[?25h[?25l[35;87H3-20[33;20H[?25h[?25l[35;87H2-19[33;19H[?25h[?25l[35;87H1-18[33;18H[?25h[?25l[35;87H0-17[33;17H[?25h[?25l[35;86H9-16 [33;16H[?25h[?25l[35;86H8-15[33;15H[?25h[?25lretur concatenate(string);[33;35H[K[35;86H7-14[33;14H[?25h[?25l concatenate(string);[33;34H[K[35;86H6-13[33;13H[?25h[?25l concatenate(string);[33;33H[K[35;86H5-12[33;12H[?25h[?25l concatenate(string);[33;32H[K[35;86H4-11[33;11H[?25h[?25l concatenate(string);[33;31H[K[35;86H3-10[33;10H[?25h[?25l concatenate(string);[33;30H[K[35;86H2-9 [33;9H[?25h[?25ls concatenate(string);[35;86H3-10[33;10H[?25h[?25lt concatenate(string);[35;86H4-11[33;11H[?25h[?25lr concatenate(string);[35;86H5-12[33;12H[?25h[?25li concatenate(string);[35;86H6-13[33;13H[?25h[?25ln concatenate(string);[35;86H7-14[33;14H[?25h[?25lg concatenate(string);[35;86H8-15[33;15H[?25h[?25l  concatenate(string);[35;86H9-16[33;16H[?25h[?25lo concatenate(string);[35;86H10-17[33;17H[?25h[?25lu concatenate(string);[35;87H1-18[33;18H[?25h[?25lt concatenate(string);[35;87H2-19[33;19H[?25h[?25lp concatenate(string);[35;87H3-20[33;20H[?25h[?25lu concatenate(string);[35;87H4-21[33;21H[?25h[?25lt concatenate(string);[35;87H5-22[33;22H[?25h[?25l  concatenate(string);[35;87H6-23[33;23H[?25h[?25l= concatenate(string);[35;87H7-24[33;24H[?25h[?25l[35;86H38-45[33;45H[?25h[?25l[1;34r[34;1H
[1;35r[33;1H 
}[35;83H[K[35;83H37,2-9[8CBot[33;9H[?25h[?25lr[35;86H3-10[33;10H[?25h[?25le[35;86H4-11[33;11H[?25h[?25lt[35;86H5-12[33;12H[?25h[?25lu[35;86H6-13[33;13H[?25h[?25ln[35;86H7-14[33;14H[?25h[?25l[35;86H8-15[33;15H[?25h[?25l[35;86H7-14[33;14H[?25h[?25lr[35;86H8-15[33;15H[?25h[?25l[33;14H[K[35;86H7-14[33;14H[?25h[?25l[33;13H[K[35;86H6-13[33;13H[?25h[?25lr[35;86H7-14[33;14H[?25h[?25l[33mreturn[m[30m[47m[35;86H8-15[33;15H[?25h[?25l[35;86H9-16[33;16H[?25h[?25lo[35;86H10-17[33;17H[?25h[?25lu[35;87H1-18[33;18H[?25h[?25lt[35;87H2-19[33;19H[?25h[?25lp[35;87H3-20[33;20H[?25h[?25lu[35;87H4-21[33;21H[?25h[?25lt[35;87H5-22[33;22H[?25h[?25l;[35;87H6-23[33;23H[?25h[35;1H[K[33;22H[?25l[35;73H^[[33;22H[35;73H  [33;23H[35;83H37,15-22      Bot[33;22H[?25h[?25l[35;73H:[33;22H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 38L, 663C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 

amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:14:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kremove(std::__cxx11::basic_string<char>::iterator, std::__cxx11::basic_string<char>::iterator, char&, std::__cxx11::basic_string<char>::iterator)[m[Kâ€™
   input.erase(remove(input.begin(), input.end(), bad[i], input.end()[01;31m[K)[m[K;
                                                                     [01;31m[K^[m[K
In file included from [01m[Kbalanced.cc:3[m[K:
[01m[K/usr/include/stdio.h:146:12:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kint remove(const char*)[m[Kâ€™
 extern int [01;36m[Kremove[m[K (const char *__filename) __THROW;
            [01;36m[K^~~~~~[m[K
[01m[K/usr/include/stdio.h:146:12:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 4 provided
In file included from [01m[K/usr/include/c++/8/algorithm:62[m[K,
                 from [01m[Kbalanced.cc:5[m[K:
[01m[K/usr/include/c++/8/bits/stl_algo.h:896:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _FIter, class _Tp> _FIter std::remove(_FIter, _FIter, const _Tp&)[m[Kâ€™
     [01;36m[Kremove[m[K(_ForwardIterator __first, _ForwardIterator __last,
     [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/8/bits/stl_algo.h:896:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:14:69:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 4 provided
   input.erase(remove(input.begin(), input.end(), bad[i], input.end()[01;36m[K)[m[K;
                                                                     [01;36m[K^[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:36:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  string output = concatenate(string[01;31m[K)[m[K;
                                    [01;31m[K^[m[K
[01m[Kbalanced.cc:37:9:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::__cxx11::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™ in return
  return [01;31m[Koutput[m[K;
         [01;31m[K^~~~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 38L, 663C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[8;9H[32mchar[m bad[] = [31m"'"[m;[9;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[10;17Hinput.erase(remove(input.begin(), input.end(), bad[i], input.end());[11;17H}[12;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[26;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[31;9Hstring str = [31m"'(' '(' ')' '('"[m;[32;9Hstring output = concatenate(string);[33;9H[33mreturn[m output;
}[35;83H37,15-22      Bot[33;22H[?25h[?25l[35;73H~@k[33;22H[35;73H   [32;22H[35;84H6[32;22H[?25h[?25l[35;73H~@k[32;22H[35;73H   [31;22H[35;84H5[31;22H[?25h[?25l[35;73H~@k[31;22H[35;73H   [30;22H[35;84H4,22   [30;22H[?25h[?25l[35;73H~@k[30;22H[35;73H   [29;1H[35;84H3,0-1[29;1H[?25h[?25l[35;73H~@k[29;1H[35;73H   [28;2H[35;84H2,2  [28;2H[?25h[?25l[35;73H~@k[28;2H[35;73H   [27;9H[26;41H[34m[46m{[27;9H}[m[35;84H1,2-9[27;9H[?25h[?25l[35;73H~@k[27;9H[35;73H   [26;22H[19C[34m{[27;9H}[m[35;84H0,15-22[26;22H[?25h[?25l[35;73H~@k[26;22H[35;73H   [25;1H[35;83H29,0-1  [25;1H[?25h[?25l[35;73H~@k[25;1H[35;73H   [24;1H[35;84H8[24;1H[?25h[?25l[35;73H~@k[24;1H[35;73H   [23;1H[35;84H7[23;1H[?25h[?25l[35;73H~@k[23;1H[35;73H   [22;22H[35;84H6,15-22[22;22H[?25h[?25l[35;73H~@k[22;22H[35;73H   [21;22H[35;84H5[21;22H[?25h[?25l[35;73H~@k[21;22H[35;73H   [20;8H[35;84H4,1-8  [20;8H[?25h[?25l[35;73H~@k[20;8H[35;73H   [19;16H[35;84H3,9-16[19;16H[?25h[?25l[35;73H~@k[19;16H[35;73H   [18;22H[35;84H2,15-22[18;22H[?25h[?25l[35;73H~@k[18;22H[35;73H   [17;22H[35;84H1,22   [17;22H[?25h[?25l[35;73H~@k[17;22H[35;73H   [16;2H[35;84H0,2 [16;2H[?25h[?25l[35;73H~@k[16;2H[35;73H   [15;1H[35;83H19,0-1[15;1H[?25h[?25l[35;73H~@k[15;1H[35;73H   [14;1H[35;84H8[14;1H[?25h[?25l[35;73H~@k[14;1H[35;73H   [13;1H[7;34H[46m{[13;1H}[m[35;84H7,1  [13;1H[?25h[?25l[35;73H~@k[13;1H[35;73H   [12;21H[7;34H{[13;1H}[35;84H6,14-21[12;21H[?25h[?25l[35;73H~@k[12;21H[35;73H   [11;17H[9;54H[46m{[11;17H}[m[35;84H5,3-17 [11;17H[?25h[?25l[35;73H~@k[11;17H[35;73H   [10;22H[9;54H{[11;17H}[35;84H4,8-22[10;22H[?25h[?25l[35;73H~@k[10;22H[35;73H   [9;22H[35;84H3,15-22[9;22H[?25h[?25l[35;73H~@k[9;22H[35;73H   [8;22H[35;84H2[8;22H[?25h[?25l[35;73H~@k[8;22H[35;73H   [7;22H[35;84H1,22   [7;22H[?25h[?25l[35;73H~@k[7;22H[35;73H   [6;1H[35;84H0,0-1[6;1H[?25h[?25l[35;73H~@k[6;1H[35;73H   [6;20H[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[31m<stack>[m[35;1H[K[35;83H9,20[10C75%[6;20H[?25h[?25l[35;73H~@k[6;20H[35;73H   [7;1H[35;83H10,0-1[7;1H[?25h[?25l[35;73H~@k[7;1H[35;73H   [8;22H[35;84H1,22 [8;22H[?25h[?25l[35;73H~@k[8;22H[35;73H   [8;21H[35;87H1[8;21H[?25h[?25l[35;73H~@k[8;21H[35;73H   [8;20H[35;87H0[8;20H[?25h[?25l[35;73H~@k[8;20H[35;73H   [8;19H[46m([13C)[m[35;86H19[8;19H[?25h[?25l[35;73H~@k[8;19H[35;73H   [8;18He([13C)[35;87H8[8;18H[?25h[?25l[35;73H~@k[8;18H[35;73H   [8;17H[35;87H7[8;17H[?25h[?25l[35;73H~@k[8;17H[35;73H   [8;16H[35;87H6[8;16H[?25h[?25l[35;73H~@k[8;16H[35;73H   [8;15H[35;87H5[8;15H[?25h[?25l[35;73H~@k[8;15H[35;73H   [8;14H[35;87H4[8;14H[?25h[?25l[35;73H~@k[8;14H[35;73H   [8;13H[35;87H3[8;13H[?25h[?25l[35;73H~@k[8;13H[35;73H   [8;12H[35;87H2[8;12H[?25h[?25l[35;73H~@k[8;12H[35;73H   [8;11H[35;87H1[8;11H[?25h[?25l[35;73H~@k[8;11H[35;73H   [8;10H[35;87H0[8;10H[?25h[?25l[35;73H~@k[8;10H[35;73H   [8;9H[35;86H9 [8;9H[?25h[?25l[35;73H~@k[8;9H[35;73H   [8;8H[35;86H8[8;8H[?25h[?25l[35;73H~@k[8;8H[35;73H   [8;7H[35;86H7[8;7H[?25h[?25l[35;73H~@k[8;7H[35;73H   [8;7H[35;1H[1m-- INSERT --[m[35;83H[K[35;83H11,7[10C75%[8;7H[?25h[?25l concatenate(string &input){[8;34H[K[35;86H6[8;6H[?25h[?25l concatenate(string &input){[8;33H[K[35;86H5[8;5H[?25h[?25l concatenate(string &input){[8;32H[K[35;86H4[8;4H[?25h[?25l concatenate(string &input){[8;31H[K[35;86H3[8;3H[?25h[?25l concatenate(string &input){[8;30H[K[35;86H2[8;2H[?25h[?25l concatenate(string &input){[8;29H[K[35;86H1[8;1H[?25h[?25lv concatenate(string &input){[35;86H2[8;2H[?25h[?25lo concatenate(string &input){[35;86H3[8;3H[?25h[?25li concatenate(string &input){[35;86H4[8;4H[?25h[?25l[32mvoid[m concatenate(string &input){[35;86H5[8;5H[?25h[?25l[35;84H6,15-22[13;22H[?25h[?25l[13;21H[K[35;87H4-21[13;21H[?25h[?25l[13;20H[K[35;87H3-20[13;20H[?25h[?25l[13;19H[K[35;87H2-19[13;19H[?25h[?25l[13;18H[K[35;87H1-18[13;18H[?25h[?25l[13;17H[K[35;87H0-17[13;17H[?25h[?25l[13;16H[K[35;86H9-16 [13;16H[?25h[?25l[35;86H8-15[13;15H[?25h[?25lretur[13;14H[K[35;86H7-14[13;14H[?25h[?25l[13;13H[K[35;86H6-13[13;13H[?25h[?25l[13;12H[K[35;86H5-12[13;12H[?25h[?25l[13;11H[K[35;86H4-11[13;11H[?25h[?25l[13;10H[K[35;86H3-10[13;10H[?25h[?25l[13;9H[K[35;86H2-9 [13;9H[?25h[?25l[35;86H1  [13;1H[?25h[?25l[12;34r[34;1H
[1;35r[12;17H}[34;1H}[35;83H[K[35;83H15,4-18[7CBot[10;54H[46m{[12;17H}[?25h[?25l[m[12;17H[K[10;54H{[35;86H3-17[12;17H[?25h[?25l}[10;54H[46m{[12;17H}[m[35;86H4-18[12;18H[?25h[?25l[10;54H{[12;17H}[35;84H4,15-29[11;29H[?25h[?25l remove(input.begin(), input.end(), bad[i], input.end());[35;87H6-30[11;30H[?25h[?25l[35;86H58-72[11;72H[?25h[?25l input.end());[11;85H[K[11;68H[46m[[mi[46m][m[35;87H7-71[11;71H[?25h[?25l) input.end());[11;36H[46m([m[31C[i][46m)[m[35;87H8-72[11;72H[?25h[?25l, input.end());[11;36H([34C)[35;87H9-73[11;73H[?25h[?25l[35;86H60-74[11;74H[?25h[?25l[35;87H1-75[11;75H[?25h[?25l[35;87H2-76[11;76H[?25h[?25l[35;87H3-77[11;77H[?25h[?25l[35;87H4-78[11;78H[?25h[?25l[35;87H5-79[11;79H[?25h[?25l[35;87H6-80[11;80H[?25h[?25l[35;87H7-81[11;81H[?25h[?25l[35;87H8-82[11;82H[?25h[?25ld[46m()[m[35;87H9-83[11;83H[?25h[?25l[35;86H70-84[11;84H[?25h[?25l[11;28H[46m([m[54C()[46m)[m[35;87H1-85[11;85H[?25h[?25l[10;54H[46m{[m[11;28H([56C)[12;17H[46m}[m[35;84H5,4-18 [12;18H[?25h[?25l[8;32H[46m{[m[10;54H{[12;17H}
[46m}[m[35;84H6,2   [13;2H[?25h[?25l[8;32H{[13;1H}[35;84H7,1[14;1H[?25h[?25l[35;84H8[15;1H[?25h[?25l[35;84H9,3[16;3H[?25h[?25l[35;83H21,16-23[18;23H[?25h[?25l[35;84H2,10-17[19;17H[?25h[?25l[35;84H3,2-9  [20;9H[?25h[?25l[35;84H4,41-48[21;48H[?25h[?25l[35;84H5,40-47[22;47H[?25h[?25l[35;84H6,1    [23;1H[?25h[?25l[35;84H7[24;1H[?25h[?25l[35;84H8[25;1H[?25h[?25l[26;41H[34m[46m{[27;9H}[m[35;84H9,35-42[26;42H[?25h[?25l[35;83H30,3-10 [27;10H[?25h[?25l[26;41H[34m{[27;9H}[m[35;84H1,3   [28;3H[?25h[?25l[35;84H2,1[29;1H[?25h[?25l[30;33H[46m{[34;1H}[m[35;84H3,34[30;34H[?25h[?25l{[34;1H}[35;84H4,33-40[31;40H[?25h[?25l[35;84H5,38-45[32;45H[?25h[?25l[35;84H6,16-23[33;23H[?25h[?25l[30;33H[46m{[34;1H}[m[35;84H7,2    [34;2H[?25h[?25l[30;33H{[34;1H}[35;84H6,16-23[33;23H[?25h[?25l[35;84H5,38-45[32;45H[?25h[?25l[32;36H[46m([mstring[46m)[m[35;87H7-44[32;44H[?25h[?25l[32;36H(string)[35;87H8-45[32;45H[?25h[?25l[32;44H[K[32;36H[46m([mstring[46m)[m[35;87H7-44[32;44H[?25h[?25l;[32;36H(string)[35;87H8-45[32;45H[?25h[?25l[35;83H11,5    [8;5H[?25h[?25lvoi concatenate(string &input){[8;32H[K[35;86H4[8;4H[?25h[?25l concatenate(string &input){[8;31H[K[35;86H3[8;3H[?25h[?25l concatenate(string &input){[8;30H[K[35;86H2[8;2H[?25h[?25l concatenate(string &input){[8;29H[K[35;86H1[8;1H[?25h[?25ls concatenate(string &input){[35;86H2[8;2H[?25h[?25lt concatenate(string &input){[35;86H3[8;3H[?25h[?25lr concatenate(string &input){[35;86H4[8;4H[?25h[?25li concatenate(string &input){[35;86H5[8;5H[?25h[?25ln concatenate(string &input){[35;86H6[8;6H[?25h[?25lg concatenate(string &input){[35;86H7[8;7H[?25h[?25l[10;54H[46m{[12;17H}[m[35;84H5,4-18[12;18H[?25h[?25l[13;34r[13;1H[L[1;35r[35;83H[K[35;83H16,2-9[8C75%[10;54H{[12;17H}[13;9H[?25h[?25lr[35;86H3-10[13;10H[?25h[?25le[35;86H4-11[13;11H[?25h[?25lt[35;86H5-12[13;12H[?25h[?25lu[35;86H6-13[13;13H[?25h[?25lr[35;86H7-14[13;14H[?25h[?25l[33mreturn[m[35;86H8-15[13;15H[?25h[?25l[35;86H9-16[13;16H[?25h[?25ls[35;86H10-17[13;17H[?25h[?25lt[35;87H1-18[13;18H[?25h[?25lr[35;87H2-19[13;19H[?25h[?25li[35;87H3-20[13;20H[?25h[?25ln[35;87H4-21[13;21H[?25h[?25lg[35;87H5-22[13;22H[?25h[?25l;[35;87H6-23[13;23H[?25h[?25l[13;22H[K[35;87H5-22[13;22H[?25h[?25l[13;21H[K[35;87H4-21[13;21H[?25h[?25l[13;20H[K[35;87H3-20[13;20H[?25h[?25l[13;19H[K[35;87H2-19[13;19H[?25h[?25l[13;18H[K[35;87H1-18[13;18H[?25h[?25l[13;17H[K[35;87H0-17[13;17H[?25h[?25l[13;16H[K[35;86H9-16 [13;16H[?25h[?25li[35;86H10-17[13;17H[?25h[?25ln[35;87H1-18[13;18H[?25h[?25lp[35;87H2-19[13;19H[?25h[?25lu[35;87H3-20[13;20H[?25h[?25lt[35;87H4-21[13;21H[?25h[?25l;[35;87H5-22[13;22H[?25h[?25l[8;34H[46m{[14;1H}[m[35;84H7,2    [14;2H[?25h[?25l[8;34H{[14;1H}[35;84H8,1[15;1H[?25h[?25l[35;84H9[16;1H[?25h[?25l[35;83H20,3[17;3H[?25h[?25l[35;84H1,22[18;22H[?25h[?25l[35;84H2,15-22[19;22H[?25h[?25l[35;84H3,10-17[20;17H[?25h[?25l[35;84H4,2-9  [21;9H[?25h[?25l[35;84H5,15-22[22;22H[?25h[?25l[35;84H6[23;22H[?25h[?25l[35;84H7,1    [24;1H[?25h[?25l[35;84H8[25;1H[?25h[?25l[35;84H9[26;1H[?25h[?25l[35;83H30,15-22[27;22H[?25h[?25l[19C[34m[46m{[28;9H}[m[35;84H1,3-10 [28;10H[?25h[?25l[27;41H[34m{[28;9H}[m[35;84H2,3   [29;3H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H}[35;83H[K[35;83H33,1[10CBot[29;1H[?25h[?25l[35;84H5,15-22[31;22H[?25h[?25l[35;84H6[32;22H[?25h[?25l[35;84H7[33;22H[?25h[?25l[30;33H[46m{[34;1H}[m[35;84H8,2    [34;2H[?25h[?25l[30;33H{[34;1H}[35;84H6,22-29[32;29H[?25h[?25l[7C[46m([mstring[46m)[m[35;86H30-37[32;37H[?25h[?25l&strin[46mg[m);[32;36H(&string[35;87H1-38[32;38H[?25h[35;1H[K[32;37H[?25l[35;73H^[[32;37H[35;73H  [32;38H[35;83H36,30-37      Bot[32;37H[?25h[?25l[35;73H:[32;37H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 38L, 666C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:37:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  string output = concatenate(&string[01;31m[K)[m[K;
                                     [01;31m[K^[m[K
[01m[Kbalanced.cc:37:9:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::__cxx11::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™ in return
  return [01;31m[Koutput[m[K;
         [01;31m[K^~~~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ [Kamchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 38L, 666C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[8;9H[32mchar[m bad[] = [31m"'"[m;[9;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[10;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[11;17H}[12;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[26;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[31;9Hstring str = [31m"'(' '(' ')' '('"[m;[32;9Hstring output = concatenate(&string);[33;9H[33mreturn[m output;
}[35;98H36,30-37      Bot[32;37H[?25h[?25l[35;88H~@k[32;37H[35;88H   [33;22H[35;99H7,15-22[33;22H[?25h[?25l[35;88H~@k[33;22H[35;88H   [34;1H[30;33H[46m{[34;1H}[m[35;99H8,1    [34;1H[?25h[?25l[35;88H~@k[34;1H[35;88H   [33;22H[30;33H{[34;1H}[35;99H7,15-22[33;22H[?25h[?25l[35;88H~@k[33;22H[35;88H   [33;22H

[1m-- INSERT --[m[35;13H[K[35;98H37,15-22      Bot[33;22H[?25h[?25l[35;102H4-21[33;21H[?25h[?25l[35;102H3-20[33;20H[?25h[?25l[35;102H2-19[33;19H[?25h[?25l[35;102H1-18[33;18H[?25h[?25l[35;102H0-17[33;17H[?25h[?25l[35;101H9-16 [33;16H[?25h[?25l[33;9Hreturnoutput;[33;22H[K[35;101H8-15[33;15H[?25h[?25loutput;[33;21H[K[35;101H7-14[33;14H[?25h[?25loutput;[33;20H[K[35;101H6-13[33;13H[?25h[?25loutput;[33;19H[K[35;101H5-12[33;12H[?25h[?25loutput;[33;18H[K[35;101H4-11[33;11H[?25h[?25loutput;[33;17H[K[35;101H3-10[33;10H[?25h[?25loutput;[33;16H[K[35;101H2-9 [33;9H[?25h[?25lcoutput;[35;101H3-10[33;10H[?25h[?25looutput;[35;101H4-11[33;11H[?25h[?25luoutput;[35;101H5-12[33;12H[?25h[?25ltoutput;[35;101H6-13[33;13H[?25h[?25l output;[35;101H7-14[33;14H[?25h[?25l<output;[35;101H8-15[33;15H[?25h[?25l<output;[35;101H9-16[33;16H[?25h[?25l output;[35;101H10-17[33;17H[?25h[?25l[35;102H7-24[33;24H[?25h[?25l[33;23H[K[35;102H6-23[33;23H[?25h[?25l[35;102H7-24[33;24H[?25h[?25l<[35;102H8-25[33;25H[?25h[?25l<[35;102H9-26[33;26H[?25h[?25l[35;101H20-27[33;27H[?25h[?25le[35;102H1-28[33;28H[?25h[?25ln[35;102H2-29[33;29H[?25h[?25ld[35;102H3-30[33;30H[?25h[?25l;[35;102H4-31[33;31H[?25h[?25l[1;34r[34;1H
[1;35r[33;1H 
}[35;98H[K[35;98H38,2-9[8CBot[33;9H[?25h[?25lr[35;101H3-10[33;10H[?25h[?25le[35;101H4-11[33;11H[?25h[?25lt[35;101H5-12[33;12H[?25h[?25lu[35;101H6-13[33;13H[?25h[?25lr[35;101H7-14[33;14H[?25h[?25l[33mreturn[m[35;101H8-15[33;15H[?25h[?25l[35;101H9-16[33;16H[?25h[?25l[31m0[m[35;101H10-17[33;17H[?25h[?25l;[35;102H1-18[33;18H[?25h[35;1H[K[33;17H[?25l[35;88H^[[33;17H[35;88H  [33;18H[35;98H38,10-17      Bot[33;17H[?25h[?25l[35;88H:[33;17H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 39L, 685C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:36:37:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  string output = concatenate(&string[01;31m[K)[m[K;
                                     [01;31m[K^[m[K
[01m[Kbalanced.cc:37:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ was not declared in this scope
  [01;31m[Kcout[m[K << output << end;
  [01;31m[K^~~~[m[K
[01m[Kbalanced.cc:37:2:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstd::cout[m[Kâ€™ is defined in header â€˜[01m[K<iostream>[m[Kâ€™; did you forget to â€˜[01m[K#include <iostream>[m[Kâ€™?
[01m[Kbalanced.cc:8:1:[m[K
+[32m[K#include <iostream>[m[K
 
[01m[Kbalanced.cc:37:2:[m[K
  [01;36m[Kcout[m[K << output << end;
  [01;36m[K^~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 39L, 685C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[7;9H[32mchar[m bad[] = [31m"'"[m;[8;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[9;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[10;17H}[11;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[30;9Hstring str = [31m"'(' '(' ')' '('"[m;[31;9Hstring output = concatenate(&string);[32;9Hcout << output << end;[33;9H[33mreturn[m [31m0[m;
}[35;98H38,10-17      Bot[33;17H[?25h[?25l[1;34r[1;1H[4L[1;35r[1;1H[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m[35;1H[K[35;98H7,18[10C20%[6;18H[?25h[?25l[35;88H~@k[6;18H[35;88H   [6;18H[35;1H[1m-- INSERT --[m[35;98H[K[35;98H7,18[10C20%[6;18H[?25h[?25l[35;101H9[6;19H[?25h[?25l[7;34r[7;1H[L[1;35r[35;98H[K[35;98H8,1[11C16%[7;1H[?25h[?25l#[35;100H2[7;2H[?25h[?25li[35;100H3[7;3H[?25h[?25ln[35;100H4[7;4H[?25h[?25lc[35;100H5[7;5H[?25h[?25ll[35;100H6[7;6H[?25h[?25lu[35;100H7[7;7H[?25h[?25lde[35;100H9[7;9H[?25h[?25l[35;100H10[7;10H[?25h[?25l[35m#include <[m[35;101H1[7;11H[?25h[?25li[35;101H2[7;12H[?25h[?25lo[35;101H3[7;13H[?25h[?25ls[35;101H4[7;14H[?25h[?25lt[35;101H5[7;15H[?25h[?25lr[35;101H6[7;16H[?25h[?25le[35;101H7[7;17H[?25h[?25la[35;101H8[7;18H[?25h[?25lm[35;101H9[7;19H[?25h[?25l[7;10H[31m<iostream>[m[35;100H20[7;20H[?25h[35;1H[K[7;19H[?25l[35;88H^[[7;19H[35;88H  [7;20H[35;98H8,19[10C16%[7;19H[?25h[?25l[35;88H:[7;19H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 40L, 705C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:37:37:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  string output = concatenate(&string[01;31m[K)[m[K;
                                     [01;31m[K^[m[K
[01m[Kbalanced.cc:38:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™)
  [01;31m[Kcout << output << end[m[K;
  [01;31m[K~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:108:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
[01m[K/usr/include/c++/8/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:117:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
[01m[K/usr/include/c++/8/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:127:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:166:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:170:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong unsigned int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(bool __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:174:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kbool[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kshort int[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned short __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:181:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kshort unsigned int[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned int __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:192:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kunsigned int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(long long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:201:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong long int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned long long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:205:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong long unsigned int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(double __f)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:220:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(float __f)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:224:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(long double __f)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:232:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong double[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(const void* __p)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:245:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kconst void*[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
In file included from [01m[K/usr/include/c++/8/string:52[m[K,
                 from [01m[Kbalanced.cc:6[m[K:
[01m[K/usr/include/c++/8/bits/basic_string.h:6323:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/basic_string.h:6323:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  couldn't deduce template parameter â€˜[01m[K_Alloc[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/8/ios:42[m[K,
                 from [01m[K/usr/include/c++/8/ostream:38[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:497:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:497:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:502:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:502:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kchar[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:508:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:508:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kchar[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:514:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:514:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Ksigned char[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:519:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:519:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kunsigned char[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:539:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:539:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:556:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:556:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:569:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:569:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst signed char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:574:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:574:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:682:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:682:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  couldn't deduce template parameter â€˜[01m[K_Tp[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:37:37:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
  string output = concatenate(&string[01;31m[K)[m[K;
                                     [01;31m[K^[m[K
[01m[Kbalanced.cc:38:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™)
  [01;31m[Kcout << output << end[m[K;
  [01;31m[K~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:108:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
[01m[K/usr/include/c++/8/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:117:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
[01m[K/usr/include/c++/8/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:127:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:166:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:170:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong unsigned int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(bool __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:174:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kbool[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kshort int[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned short __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:181:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kshort unsigned int[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned int __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:192:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kunsigned int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(long long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:201:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong long int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(unsigned long long __n)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:205:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong long unsigned int[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(double __f)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:220:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(float __f)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:224:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(long double __f)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:232:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Klong double[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
       [01;36m[Koperator[m[K<<(const void* __p)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:245:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kconst void*[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
In file included from [01m[K/usr/include/c++/8/string:52[m[K,
                 from [01m[Kbalanced.cc:6[m[K:
[01m[K/usr/include/c++/8/bits/basic_string.h:6323:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/basic_string.h:6323:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  couldn't deduce template parameter â€˜[01m[K_Alloc[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/8/ios:42[m[K,
                 from [01m[K/usr/include/c++/8/ostream:38[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:497:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:497:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™
[01m[K/usr/include/c++/8/ostream:502:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:502:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kchar[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:508:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:508:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kchar[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:514:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:514:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Ksigned char[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:519:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:519:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kunsigned char[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:539:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:539:5:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
In file included from [01m[K/usr/include/c++/8/ostream:693[m[K,
                 from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:556:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:556:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:569:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:569:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst signed char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:574:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:574:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kstd::end[m[Kâ€™ (type â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
In file included from [01m[K/usr/include/c++/8/iostream:39[m[K,
                 from [01m[Kbalanced.cc:8[m[K:
[01m[K/usr/include/c++/8/ostream:682:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/8/ostream:682:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kbalanced.cc:38:20:[m[K [01;36m[Knote: [m[K  couldn't deduce template parameter â€˜[01m[K_Tp[m[Kâ€™
  cout << output << [01;36m[Kend[m[K;
                    [01;36m[K^~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ vim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 40L, 705C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[13;9H[32mchar[m bad[] = [31m"'"[m;[14;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[15;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[16;17H}[17;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[31;1H        int main(int argc, char *argv[]){
        }
*/[m[35;98H8,19[10CTop[8;19H[?25h[?25l[35;88H~@k[8;19H[35;88H   [8;19H[35;1H[1m-- INSERT --[m[35;13H[K[35;98H8,19[10CTop[8;19H[?25h[35;1H[K[8;18H[?25l[35;88H^[[8;18H[35;88H  [8;19H[35;98H8,18[10CTop[8;18H[?25h[?25l[35;88H:[8;18H[35;88H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[8;18H[27m[23m[29m[m[30m[47m[H[2J[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdio.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stack>[m[30m[47m
[35m#include [m[30m[47m[31m<algorithm>[m[30m[47m
[35m#include [m[30m[47m[31m<string>[m[30m[47m
[35m#include [m[30m[47m[31m<cstring>[m[30m[47m
[35m#include [m[30m[47m[31m<iostream>[m[30m[47m

[33musing[m[30m[47m [32mnamespace[m[30m[47m std;

string concatenate(string &input){[13;9H[32mchar[m[30m[47m bad[] = [31m"'"[m[30m[47m;[14;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[15;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[16;17H}[17;9H[33mreturn[m[30m[47m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[30m[47m[31m0[m[30m[47m[34m; i < str.length(); i++){[31;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m[35;98H8,18[10CTop[8;18H[?25h[?25l[35;88H~@k[8;18H[35;88H   [8;18H[35;1H[1m-- INSERT --[m[30m[47m[35;98H[K[35;98H8,18[10CTop[8;18H[?25h[?25l[35;98H9,1 [9;1H[?25h[?25l[35;98H10,18[10;18H[?25h[?25l[35;99H1,1 [11;1H[?25h[?25l[13;17H[46m[][m[30m[47m[35;99H3,11-18[13;18H[?25h[?25l[][35;99H4[14;18H[?25h[?25l[35;99H5,4-18 [15;18H[?25h[?25l[14;54H[46m{[16;17H}[m[30m[47m[35;99H6[16;18H[?25h[?25l[14;54H{[16;17H}[35;99H7,11-18[17;18H[?25h[?25l[12;34H[46m{[18;1H}[m[30m[47m[35;99H8,2    [18;2H[?25h[?25l[12;34H{[18;1H}[35;99H9,1[19;1H[?25h[?25l[35;98H20[20;1H[?25h[?25l[35;99H1,3[21;3H[?25h[?25l[22;17H[34m[46m([10C)[m[30m[47m[35;99H2,18[22;18H[?25h[?25l[34m([10C)[m[30m[47m[35;99H3,11-18[23;18H[?25h[?25l[35;99H4,10-17[24;17H[?25h[?25l[35;99H5,2-9  [25;9H[?25h[?25l[35;99H6,11-18[26;18H[?25h[?25l[35;99H7[27;18H[?25h[?25l[35;99H8,1    [28;1H[?25h[?25l[35;99H9[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){[35;98H[K[35;98H30,1[10C16%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;9Hstring str = [31m"'(' '(' ')' '('"[m[30m[47m;[35;98H[K[35;98H31,11-18      33%[29;17H[34m[46m([22C)[29;18H[?25h[?25l[1;34r[m[30m[47m[1;1H[2M[1;35r[33;9Hstring output = concatenate(&string);[34;9Hcout << output << end;[35;98H[K[35;98H33,3[10C66%[27;17H[34m([22C)

*/[?25h[?25l[1;34r[m[30m[47m[34;1H
[1;35r[34;9H[33mreturn[m[30m[47m [31m0[m[30m[47m;[35;98H[K[35;98H34,1[10C83%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H}[35;98H[K[35;98H36,11-18      Bot[30;18H[?25h[?25l[35;99H7[31;18H[?25h[?25l[35;99H8[32;18H[?25h[?25l[35;99H9[33;18H[?25h[?25l[29;33H[46m{[34;1H}[m[30m[47m[35;98H40,2    [34;2H[?25h[?25l[29;33H{[34;1H}[35;98H38,24-31[32;31H[?25h[?25l[32;30H[K[35;102H3-30[32;30H[?25h[?25ll[35;102H4-31[32;31H[?25h[?25l;[35;102H5-32[32;32H[?25h[35;1H[K[32;31H[?25l[35;88H^[[32;31H[35;88H  [32;32H[35;98H38,24-31      Bot[32;31H[?25h[?25l[35;88H~@k[32;31H[35;88H   [31;31H[35;99H7[31;31H[?25h[?25l[35;88H~@k[31;31H[35;88H   [31;32H[35;102H5-32[31;32H[?25h[?25l[35;88H~@k[31;32H[35;88H   [31;33H[35;102H6-33[31;33H[?25h[?25l[35;88H~@k[31;33H[35;88H   [31;34H[35;102H7-34[31;34H[?25h[?25l[35;88H~@k[31;34H[35;88H   [31;35H[35;102H8-35[31;35H[?25h[?25l[35;88H~@k[31;35H[35;88H   [31;36H[46m([7C)[m[30m[47m[35;102H9-36[31;36H[?25h[?25l[35;88H~@k[31;36H[35;88H   [31;37H([7C)[35;101H30-37[31;37H[?25h[?25l[35;88H~@k[31;37H[35;88H   [31;38H[35;102H1-38[31;38H[?25h[?25l[35;88H~@k[31;38H[35;88H   [31;39H[35;102H2-39[31;39H[?25h[?25l[35;88H~@k[31;39H[35;88H   [31;40H[35;102H3-40[31;40H[?25h[?25l[35;88H~@k[31;40H[35;88H   [31;41H[35;102H4-41[31;41H[?25h[?25l[35;88H~@k[31;41H[35;88H   [31;42H[35;102H5-42[31;42H[?25h[?25l[35;88H~@k[31;42H[35;88H   [31;43H[35;102H6-43[31;43H[?25h[?25l[35;88H~@k[31;43H[35;88H   [31;44H[31;36H[46m([7C)[m[30m[47m[35;102H7-44[31;44H[?25h[?25l[35;88H~@k[31;44H[35;88H   [31;45H[31;36H([7C)[35;102H8-45[31;45H[?25h[?25l[35;88H~@k[31;45H[35;88H   [31;45H[?25h[?25l[35;88H~@k[31;45H[35;88H   [31;44H[31;36H[46m([7C)[m[30m[47m[35;102H7-44[31;44H[?25h[?25l[35;88H~@k[31;44H[35;88H   [31;43H[31;36H([7C)[35;102H6-43[31;43H[?25h[?25l[35;88H~@k[31;43H[35;88H   [31;42H[35;102H5-42[31;42H[?25h[?25l[35;88H~@k[31;42H[35;88H   [31;41H[35;102H4-41[31;41H[?25h[?25l[35;88H~@k[31;41H[35;88H   [31;41H[35;1H[1m-- INSERT --[m[30m[47m[35;98H[K[35;98H37,34-41      Bot[31;41H[?25h[?25lng);[31;45H[K[31;41H[?25h[?25lg);[31;44H[K[31;41H[?25h[?25l);[31;43H[K[31;36H[46m([m[30m[47m&str[46m)[?25h[m[30m[47m[35;1H[K[31;40H[?25l[35;88H^[[31;40H[35;88H  [31;41H(&str)[35;98H37,33-40      Bot[31;40H[?25h[?25l[35;88H:[31;40H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 40L, 703C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:37:30:[m[K [01;31m[Kerror: [m[Kinvalid initialization of non-const reference of type â€˜[01m[Kstd::__cxx11::string&[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>&[m[Kâ€™} from an rvalue of type â€˜[01m[Kstd::__cxx11::string*[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>*[m[Kâ€™}
  string output = concatenate([01;31m[K&str[m[K);
                              [01;31m[K^~~~[m[K
[01m[Kbalanced.cc:12:8:[m[K [01;36m[Knote: [m[Kin passing argument 1 of â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string&)[m[Kâ€™
 string [01;36m[Kconcatenate[m[K(string &input){
        [01;36m[K^~~~~~~~~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 40L, 703C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[7;9H[32mchar[m bad[] = [31m"'"[m;[8;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[9;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[10;17H}[11;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[30;9Hstring str = [31m"'(' '(' ')' '('"[m;[31;9Hstring output = concatenate(&str);[32;9Hcout << output << endl;[33;9H[33mreturn[m [31m0[m;
}[35;98H37,33-40      Bot[31;40H[?25h[?25l[35;88H~@k[31;40H[35;88H   [31;39H[35;102H2-39[31;39H[?25h[?25l[35;88H~@k[31;39H[35;88H   [31;38H[35;102H1-38[31;38H[?25h[?25l[35;88H~@k[31;38H[35;88H   [31;38H[35;1H[1m-- INSERT --[m[35;13H[K[35;98H37,31-38      Bot[31;38H[?25h[?25lstr);[31;42H[K[31;36H[46m([mstr[46m)[m[35;102H0-37[31;37H[?25h[35;1H[K[31;36H[?25l[35;88H^[[31;36H[35;88H  [31;37H[35;98H37,29-36      Bot[31;36H[?25h[?25l[35;88H:[31;36H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 40L, 702C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
g++ balanced.o  -o balanced
amchugh2@remote06:~/i240b/submit/lab11$ ./balanced
( ( ) (
amchugh2@remote06:~/i240b/submit/lab11$ vim balance.[Kd.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 40L, 702C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[7;9H[32mchar[m bad[] = [31m"'"[m;[8;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[9;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[10;17H}[11;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[30;9Hstring str = [31m"'(' '(' ')' '('"[m;[31;9Hstring output = concatenate[46m([mstr[46m)[m;[32;9Hcout << output << endl;[33;9H[33mreturn[m [31m0[m;
}[35;98H37,29-36      Bot[31;36H[?25h[?25l[35;88H:[31;36H[35;1H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hning[?25l[?25h[?25l[30m[47m[31;36H[27m[23m[29m[m[30m[47m[H[2J[1;1H[35m#include [m[30m[47m[31m<cstring>[m[30m[47m
[35m#include [m[30m[47m[31m<iostream>[m[30m[47m

[33musing[m[30m[47m [32mnamespace[m[30m[47m std;

string concatenate(string &input){[7;9H[32mchar[m[30m[47m bad[] = [31m"'"[m[30m[47m;[8;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[9;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[10;17H}[11;9H[33mreturn[m[30m[47m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[30m[47m[31m0[m[30m[47m[34m; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){[30;9Hstring str = [31m"'(' '(' ')' '('"[m[30m[47m;[31;9Hstring output = concatenate[46m([m[30m[47mstr[46m)[m[30m[47m;[32;9Hcout << output << endl;[33;9H[33mreturn[m[30m[47m [31m0[m[30m[47m;
}[35;98H37,29-36      Bot[31;36H[?25h[?25l[35;88H~@k[31;36H[35;88H   [30;36H[31;36H(str)[35;99H6[30;36H[?25h[?25l[35;88H~@k[30;36H[35;88H   [30;35H[35;102H8-35[30;35H[?25h[?25l[35;88H~@k[30;35H[35;88H   [30;34H[35;102H7-34[30;34H[?25h[?25l[35;88H~@k[30;34H[35;88H   [30;33H[35;102H6-33[30;33H[?25h[?25l[35;88H~@k[30;33H[35;88H   [30;32H[31m[46m([3C)[m[30m[47m[35;102H5-32[30;32H[?25h[?25l[35;88H~@k[30;32H[35;88H   [30;31H[31m(' ')[m[30m[47m[35;102H4-31[30;31H[?25h[?25l[35;88H~@k[30;31H[35;88H   [29;31H[46m[][m[30m[47m[35;99H5,31   [29;31H[?25h[?25l[35;88H~@k[29;31H[35;88H   [28;1H[29;30H[][35;99H4,0-1[28;1H[?25h[?25l[35;88H~@k[28;1H[35;88H   [27;2H[35;99H3,2  [27;2H[?25h[?25l[35;88H~@k[27;2H[35;88H   [26;9H[25;41H[34m[46m{[26;9H}[m[30m[47m[35;99H2,2-9[26;9H[?25h[?25l[35;88H~@k[26;9H[35;88H   [25;31H[10C[34m{[26;9H}[m[30m[47m[35;99H1,24-31[25;31H[?25h[?25l[35;88H~@k[25;31H[35;88H   [24;1H[35;99H0,0-1  [24;1H[?25h[?25l[35;88H~@k[24;1H[35;88H   [23;1H[35;98H29[23;1H[?25h[?25l[35;88H~@k[23;1H[35;88H   [22;1H[35;99H8[22;1H[?25h[?25l[35;88H~@k[22;1H[35;88H   [21;31H[35;99H7,24-31[21;31H[?25h[?25l[35;88H~@k[21;31H[35;88H   [20;31H[35;99H6[20;31H[?25h[?25l[35;88H~@k[20;31H[35;88H   [19;8H[35;99H5,1-8  [19;8H[?25h[?25l[35;88H~@k[19;8H[35;88H   [18;16H[35;99H4,9-16[18;16H[?25h[?25l[35;88H~@k[18;16H[35;88H   [17;22H[35;99H3,15-22[17;22H[?25h[?25l[35;88H~@k[17;22H[35;88H   [16;29H[35;99H2,29   [16;29H[?25h[?25l[35;88H~@k[16;29H[35;88H   [15;2H[35;99H1,2 [15;2H[?25h[?25l[35;88H~@k[15;2H[35;88H   [14;1H[35;99H0,0-1[14;1H[?25h[?25l[35;88H~@k[14;1H[35;88H   [13;1H[35;98H19[13;1H[?25h[?25l[35;88H~@k[13;1H[35;88H   [12;1H[6;34H[46m{[12;1H}[m[30m[47m[35;99H8,1  [12;1H[?25h[?25l[35;88H~@k[12;1H[35;88H   [11;21H[6;34H{[12;1H}[35;99H7,14-21[11;21H[?25h[?25l[35;88H~@k[11;21H[35;88H   [10;17H[8;54H[46m{[10;17H}[m[30m[47m[35;99H6,3-17 [10;17H[?25h[?25l[35;88H~@k[10;17H[35;88H   [9;31H[8;54H{[10;17H}[35;99H5,17-31[9;31H[?25h[?25l[35;99H4,24[8;31H[?25h[?25l[35;99H3,18-25[7;25H[?25h[?25l[35;88H~@k[7;25H[35;88H   [6;31H[35;99H2,31   [6;31H[?25h[?25l[35;88H~@k[6;31H[35;88H   [6;1H[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[30m[47m[31m<string>[m[30m[47m[35;98H[K[35;98H11,0-1[8C83%[6;1H[?25h[?25l[35;88H~@k[6;1H[35;88H   [6;20H[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[30m[47m[31m<algorithm>[m[30m[47m[35;98H[K[35;98H10,20[9C66%[6;20H[?25h[?25l[35;88H~@k[6;20H[35;88H   [6;1H[1;34r[1;1H[L[1;35r[1;1H[35m#include [m[30m[47m[31m<stack>[m[30m[47m[35;98H[K[35;98H9,0-1[9C50%[6;1H[?25h[?25l[35;88H~@k[6;1H[35;88H   [7;20H[35;98H10,20[7;20H[?25h[?25l[35;88H~@k[7;20H[35;88H   [8;1H[35;99H1,0-1[8;1H[?25h[?25l[35;88H~@k[8;1H[35;88H   [9;31H[35;99H2,31 [9;31H[?25h[?25l[35;88H~@k[9;31H[35;88H   [10;25H[35;99H3,18-25[10;25H[?25h[?25l[35;88H~@k[10;25H[35;88H   [10;25H[35;1H[1m-- INSERT --[m[30m[47m[35;98H[K[35;98H13,18-25      50%[10;25H[?25h[?25l[35;102H9-26[10;26H[?25h[?25l[10;25H[K[35;102H8-25[10;25H[?25h[?25l[10;24H[K[35;102H7-24[10;24H[?25h[?25l[10;23H[K[35;102H6-23[10;23H[?25h[?25l[10;22H[K[35;102H5-22[10;22H[?25h[?25l[35;102H4-21[10;21H[?25h[?25l[10;20H[K[35;102H3-20[10;20H[?25h[?25l[46m[][m[30m[47m[35;102H2-19[10;19H[?25h[?25l[10;18H[K[11;54H[1m[37m[41m{[12;86H;[13;17H}[14;21H;
}[32;33H{[33;39H;[34;41H;[m[30m[47m[10;17H[[35;102H1-18[10;18H[?25h[?25l[31m2[m[30m[47m[35;102H2-19[10;19H[?25h[?25l][11;54H{[12;86H;[13;17H}[14;21H;
}[32;33H{[33;39H;[34;41H;[10;17H[46m[[1C][m[30m[47m[35;102H3-20[10;20H[?25h[?25l;[[1C][35;102H4-21[10;21H[?25h[?25l[11;34r[11;1H[L[1;35r[35;98H[K[35;98H14,2-9[8C42%[11;9H[?25h[?25lf[35;101H3-10[11;10H[?25h[?25lo[35;101H4-11[11;11H[?25h[?25l[33mfor[m[30m[47m[35;101H5-12[11;12H[?25h[?25l([35;101H6-13[11;13H[?25h[?25lu[35;101H7-14[11;14H[?25h[?25ln[35;101H8-15[11;15H[?25h[?25ls[35;101H9-16[11;16H[?25h[?25li[35;101H10-17[11;17H[?25h[?25lg[35;102H1-18[11;18H[?25h[?25ln[35;102H2-19[11;19H[?25h[?25le[35;102H3-20[11;20H[?25h[?25l[11;13H[32munsigned[m[30m[47m in[35;102H7-24[11;24H[?25h[?25l[32mint[m[30m[47m[35;102H8-25[11;25H[?25h[?25l[35;102H9-26[11;26H[?25h[?25lj[35;101H20-27[11;27H[?25h[?25l[35;102H1-28[11;28H[?25h[?25l=[35;102H2-29[11;29H[?25h[?25l [31m0[m[30m[47m[35;102H4-31[11;31H[?25h[?25l;[35;102H5-32[11;32H[?25h[?25l[35;102H6-33[11;33H[?25h[?25li[35;102H7-34[11;34H[?25h[?25l[35;102H8-35[11;35H[?25h[?25l<[35;102H9-36[11;36H[?25h[?25l[35;101H30-37[11;37H[?25h[?25l[31m2[m[30m[47m[35;102H1-38[11;38H[?25h[?25l[11;37H[K[35;102H0-37[11;37H[?25h[?25l[31m3[m[30m[47m[35;102H1-38[11;38H[?25h[?25l;[35;102H2-39[11;39H[?25h[?25l[35;102H3-40[11;40H[?25h[?25li[35;102H4-41[11;41H[?25h[?25l+[35;102H5-42[11;42H[?25h[?25l+[35;102H6-43[11;43H[?25h[?25l)[11;12H[46m([30C)[m[30m[47m[35;102H7-44[11;44H[?25h[?25l{[11;12H([30C)[46m{[16;1H}[m[30m[47m[35;102H8-45[11;45H[?25h[?25l[12;34r[12;1H[L[1;35r[16;1H[46m        [m[30m[47m
}[35;98H[K[35;98H15,3-17[7C37%[11;44H{[16;1H        [12;17H[?25h[?25lc[35;101H4-18[12;18H[?25h[?25lh[35;101H5-19[12;19H[?25h[?25la[35;101H6-20[12;20H[?25h[?25l[32mchar[m[30m[47m[35;101H7-21[12;21H[?25h[?25l[[13;54H[1m[37m[41m{[14;86H;[15;17H}[16;21H;
}[34;33H{[m[30m[47m[35;101H8-22[12;22H[?25h[?25li[35;101H9-23[12;23H[?25h[?25l][13;54H{[14;86H;[15;17H}[16;21H;
}[34;33H{[12;21H[46m[[m[30m[47mi[46m][m[30m[47m[35;101H10-24[12;24H[?25h[?25l[i][35;102H1-25[12;25H[?25h[?25l=[35;102H3-27[12;27H[?25h[?25l[35;102H2-26[12;26H[?25h[?25l[12;25H[K[35;102H1-25[12;25H[?25h[?25l[46m[[m[30m[47mi[46m][m[30m[47m[35;102H0-24[12;24H[?25h[?25l[12;23H[K[13;54H[1m[37m[41m{[14;86H;[15;17H}[16;21H;
}[34;33H{[m[30m[47m[12;21H[[35;101H9-23 [12;23H[?25h[?25l[12;22H[K[35;101H8-22[12;22H[?25h[?25l[12;21H[K[13;54H{[14;86H;[15;17H}[16;21H;
}[34;33H{[35;101H7-21[12;21H[?25h[?25lch[12;19H[K[35;101H5-19[12;19H[?25h[?25l[12;18H[K[35;101H4-18[12;18H[?25h[?25l[12;17H[K[35;101H3-17[12;17H[?25h[?25l[35;101H1   [12;1H[?25h[?25l[11;34r[34;1H
[1;35r[11;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m j = [31m0[m[30m[47m; i < [31m3[m[30m[47m; i++){[34;9Hstring str = [31m"'(' '(' ')' '('"[m[30m[47m;[35;98H[K[35;98H14,38-45      42%[11;44H[46m{[16;1H}[11;45H[?25h[?25l[m[30m[47m[11;44H[K[11;12H[46m([30C)[m[30m[47m[16;1H}[35;102H7-44[11;44H[?25h[?25l[11;43H[K[11;12H([35;102H6-43[11;43H[?25h[?25l[11;41H[K[35;102H4-41[11;41H[?25h[?25l[11;40H[K[35;102H3-40[11;40H[?25h[?25l[35;102H2-39[11;39H[?25h[?25l[11;38H[K[35;102H1-38[11;38H[?25h[?25l[11;37H[K[35;101H29-36[11;36H[?25h[?25l[11;35H[K[35;102H8-35[11;35H[?25h[?25l[35;102H7-34[11;34H[?25h[?25l[11;33H[K[35;102H5-32[11;32H[?25h[?25l[11;31H[K[35;102H4-31[11;31H[?25h[?25l[11;30H[K[35;102H3-30[11;30H[?25h[?25l[11;28H[K[35;102H1-28[11;28H[?25h[?25l[35;102H0-27[11;27H[?25h[?25l[11;26H[K[35;101H18-25[11;25H[?25h[?25lin[11;24H[K[35;102H7-24[11;24H[?25h[?25l[11;23H[K[35;102H6-23[11;23H[?25h[?25l[11;22H[K[35;102H4-21[11;21H[?25h[?25l[11;13Hunsigne[11;20H[K[35;102H3-20[11;20H[?25h[?25l[11;19H[K[35;102H2-19[11;19H[?25h[?25l[11;17H[K[35;102H0-17[11;17H[?25h[?25l[11;16H[K[35;101H9-16 [11;16H[?25h[?25l[11;15H[K[35;101H8-15[11;15H[?25h[?25l[11;13H[K[35;101H6-13[11;13H[?25h[?25l[11;12H[K[35;101H5-12[11;12H[?25h[?25lfo[11;11H[K[35;101H4-11[11;11H[?25h[?25l[11;9H[K[35;101H2-9 [11;9H[?25h[?25l[35;101H1  [11;1H[?25h[?25l[35;101H2-9[11;9H[?25h[?25lb[35;101H3-10[11;10H[?25h[?25la[35;101H4-11[11;11H[?25h[?25ld[35;101H5-12[11;12H[?25h[?25l[[31m0[m[30m[47m[12;54H[1m[37m[41m{[13;86H;[14;17H}[15;21H;
}[33;33H{[34;39H;[m[30m[47m[35;101H7-14[11;14H[?25h[?25l][12;54H{[13;86H;[14;17H}[15;21H;
}[33;33H{[34;39H;[11;12H[46m[[1C][m[30m[47m[35;101H8-15[11;15H[?25h[?25l[[1C][35;101H9-16[11;16H[?25h[?25l=[35;101H10-17[11;17H[?25h[?25l[35;102H1-18[11;18H[?25h[?25l[31m"[m[30m[47m[35;102H2-19[11;19H[?25h[?25l[31m [m[30m[47m[35;102H3-20[11;20H[?25h[?25l[31m"[m[30m[47m[35;102H4-21[11;21H[?25h[?25l;[35;102H5-22[11;22H[?25h[?25l[12;34r[12;1H[L[1;35r[35;98H[K[35;98H15,2-9[8C37%[12;9H[?25h[?25lb[35;101H3-10[12;10H[?25h[?25la[35;101H4-11[12;11H[?25h[?25ld[35;101H5-12[12;12H[?25h[?25l[[13;54H[1m[37m[41m{[14;86H;[15;17H}[16;21H;
}[34;33H{[m[30m[47m[35;101H6-13[12;13H[?25h[?25l[31m1[m[30m[47m[35;101H7-14[12;14H[?25h[?25l][13;54H{[14;86H;[15;17H}[16;21H;
}[34;33H{[12;12H[46m[[1C][m[30m[47m[35;101H8-15[12;15H[?25h[?25l'[[1C][35;101H9-16[12;16H[?25h[?25l[12;15H[K[12;12H[46m[[1C][m[30m[47m[35;101H8-15[12;15H[?25h[?25l[12;14H[K[13;54H[1m[37m[41m{[14;86H;[15;17H}[16;21H;
}[34;33H{[m[30m[47m[12;12H[[35;101H7-14[12;14H[?25h[?25l][13;54H{[14;86H;[15;17H}[16;21H;
}[34;33H{[12;12H[46m[[1C][m[30m[47m[35;101H8-15[12;15H[?25h[?25l[[1C][35;101H9-16[12;16H[?25h[?25l=[35;101H10-17[12;17H[?25h[?25l[35;102H1-18[12;18H[?25h[?25l[31m"[m[30m[47m[35;102H2-19[12;19H[?25h[?25l[31m'[m[30m[47m[35;102H3-20[12;20H[?25h[?25l[31m"[m[30m[47m[35;102H4-21[12;21H[?25h[?25l;[35;102H5-22[12;22H[?25h[?25l[35;99H4[11;22H[?25h[?25l[35;99H3,14-21[10;21H[?25h[?25l[46m[[1C][m[30m[47m[35;102H3-20[10;20H[?25h[?25l[35;102H2-19[10;19H[?25h[?25l][46m;[m[30m[47m[10;20H[K[10;18H[46m][m[30m[47m;[35;102H1-18[10;18H[?25h[?25l[31m[46m1[m[30m[47m];[31m1[m[30m[47m[46m][m[30m[47m[35;102H2-19[10;19H[?25h[35;1H[K[10;18H[?25l[35;88H^[[10;18H[35;88H  [10;19H[[1C][35;98H13,11-18      37%[10;18H[?25h[?25l[35;88H;[10;18H[35;88H [10;18H[?25h[?25l[35;88H:[10;18H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 42L, 727C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string concatenate(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:14:11:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kconst char*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
  bad[0] = [01;31m[K" "[m[K;
           [01;31m[K^~~[m[K
[01m[Kbalanced.cc:15:11:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kconst char*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
  bad[1] = [01;31m[K"'"[m[K;
           [01;31m[K^~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 42L, 727C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[13;9H[32mchar[m bad[[31m1[m];[14;9Hbad[[31m0[m] = [31m" "[m;[15;9Hbad[[31m1[m] = [31m"'"[m;[16;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[17;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[18;17H}[19;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[33;1H        int main(int argc, char *argv[]){
        }[m[35;98H13,11-18      Top[13;18H[?25h[?25l[35;88H~@k[13;18H[35;88H   [14;18H[35;99H4[14;18H[?25h[?25l[35;88H~@k[14;18H[35;88H   [15;18H[35;99H5[15;18H[?25h[?25l[35;88H~@k[15;18H[35;88H   [15;19H[35;102H2-19[15;19H[?25h[?25l[35;88H~@k[15;19H[35;88H   [15;20H[35;102H3-20[15;20H[?25h[?25l[35;88H~@k[15;20H[35;88H   [15;21H[35;102H4-21[15;21H[?25h[?25l[35;88H~@k[15;21H[35;88H   [15;21H[?25h[?25l[35;88H~@k[15;21H[35;88H   [15;21H[?25h[?25l[35;88H~@k[15;21H[35;88H   [15;21H[35;1H[1m-- INSERT --[m[35;13H[K[35;98H15,14-21      Top[15;21H[?25h[?25l[35;102H5-22[15;22H[?25h[?25l[15;21H[K[35;102H4-21[15;21H[?25h[?25l[15;20H[K[35;102H3-20[15;20H[?25h[?25l[15;19H[K[35;102H2-19[15;19H[?25h[?25l[15;18H[K[35;102H0-17[15;17H[?25h[?25l[15;16H[K[35;101H9-16 [15;16H[?25h[?25l[46m[[1C][m[35;101H8-15[15;15H[?25h[?25l[15;13H[K[16;54H[1m[37m[41m{[17;86H;[18;17H}[19;21H;
}[m[15;12H[[35;101H6-13[15;13H[?25h[?25l[15;12H[K[16;54H{[17;86H;[18;17H}[19;21H;
}[35;101H5-12[15;12H[?25h[?25l[15;11H[K[35;101H4-11[15;11H[?25h[?25l[15;10H[K[35;101H3-10[15;10H[?25h[?25l[15;9H[K[35;101H2-9 [15;9H[?25h[?25l[35;101H1  [15;1H[?25h[?25l[14;34r[34;1H
[1;35r[14;9Hbad[[31m0[m] = [31m" "[m;[34;1H[34m*/[m[35;98H[K[35;98H14,15-22      Top[14;22H[?25h[?25l[14;21H[K[35;102H4-21[14;21H[?25h[?25l[14;20H[K[35;102H3-20[14;20H[?25h[?25l[14;19H[K[35;102H2-19[14;19H[?25h[?25l[14;18H[K[35;102H0-17[14;17H[?25h[?25l[14;16H[K[35;101H9-16 [14;16H[?25h[?25l[46m[[1C][m[35;101H8-15[14;15H[?25h[?25l[14;14H[K[15;54H[1m[37m[41m{[16;86H;[17;17H}[18;21H;
}[m[14;12H[[35;101H7-14[14;14H[?25h[?25l[14;13H[K[35;101H6-13[14;13H[?25h[?25l[14;12H[K[15;54H{[16;86H;[17;17H}[18;21H;
}[35;101H5-12[14;12H[?25h[?25l[14;11H[K[35;101H4-11[14;11H[?25h[?25l[14;10H[K[35;101H3-10[14;10H[?25h[?25l[14;9H[K[35;101H2-9 [14;9H[?25h[?25l[35;101H1  [14;1H[?25h[?25l[13;34r[34;1H
[1;35r[13;9H[32mchar[m bad[[31m1[m];[35;98H[K[35;98H13,14-21      Top[13;21H[?25h[?25l[13;20H[K[13;17H[46m[[1C][m[35;102H3-20[13;20H[?25h[?25l[13;19H[K[14;54H[1m[37m[41m{[15;86H;[16;17H}[17;21H;
}[m[13;17H[[35;102H2-19[13;19H[?25h[?25l[13;18H[K[35;102H1-18[13;18H[?25h[?25l][14;54H{[15;86H;[16;17H}[17;21H;
}[13;17H[46m[][m[35;102H2-19[13;19H[?25h[?25l[][35;102H3-20[13;20H[?25h[?25l=[35;102H4-21[13;21H[?25h[?25l[35;102H5-22[13;22H[?25h[?25l[31m"[m[35;102H6-23[13;23H[?25h[?25l[31m [m[35;102H7-24[13;24H[?25h[?25l[31m"[m[35;102H8-25[13;25H[?25h[?25l[13;24H[K[35;102H7-24[13;24H[?25h[?25l[31m,[m[35;102H8-25[13;25H[?25h[?25l[31m [m[35;102H9-26[13;26H[?25h[?25l[31m"[m[35;101H20-27[13;27H[?25h[?25l[13;26H[K[35;101H19-26[13;26H[?25h[?25l[31m'[m[35;101H20-27[13;27H[?25h[?25l[31m"[m[35;102H1-28[13;28H[?25h[?25l;[35;102H2-29[13;29H[?25h[35;1H[K[13;28H[?25l[35;88H^[[13;28H[35;88H  [13;29H[35;98H13,21-28      Top[13;28H[?25h[?25l[35;88H:[13;28H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 40L, 705C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
g++ balanced.o  -o balanced
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.ccmake[Kvim balanced.cc[5P./balanced[6Pmakevim balanced.ccmake[K./balanced
(()(
amchugh2@remote06:~/i240b/submit/lab11$ vim ba[K[K[K balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 40L, 705C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[13;9H[32mchar[m bad[] = [31m" , '"[m;[14;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[15;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[16;17H}[17;9H[33mreturn[m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[31;1H        int main(int argc, char *argv[]){
        }
*/[m[35;98H13,21-28      Top[13;28H[?25h[?25l[35;88H~@k[13;28H[35;88H   [13;28H[35;1H[1m-- INSERT --[m[35;13H[K[35;98H13,21-28      Top[13;28H[?25h[35;1H[K[13;27H[?25l[35;88H^[[13;27H[35;88H  [13;28H[35;98H13,20-27      Top[13;27H[?25h[?25l[35;88H:[13;27H[35;88H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[13;27H[27m[23m[29m[m[30m[47m[H[2J[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdio.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stack>[m[30m[47m
[35m#include [m[30m[47m[31m<algorithm>[m[30m[47m
[35m#include [m[30m[47m[31m<string>[m[30m[47m
[35m#include [m[30m[47m[31m<cstring>[m[30m[47m
[35m#include [m[30m[47m[31m<iostream>[m[30m[47m

[33musing[m[30m[47m [32mnamespace[m[30m[47m std;

string concatenate(string &input){[13;9H[32mchar[m[30m[47m bad[] = [31m" , '"[m[30m[47m;[14;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[15;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[16;17H}[17;9H[33mreturn[m[30m[47m input;
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[30m[47m[31m0[m[30m[47m[34m; i < str.length(); i++){[31;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m[35;98H13,20-27      Top[13;27H[?25h[?25l[12;34H[46m{[18;1H}[m[30m[47m[35;99H8,1    [18;1H[?25h[?25l[35;88H~@k[18;1H[35;88H   [18;1H[35;1H[1m-- INSERT --[m[30m[47m[35;98H[K[35;98H18,1[10CTop[18;1H[?25h[?25l[12;34H{[18;1H}[35;99H9[19;1H[?25h[?25l[12;34H[46m{[18;1H}[m[30m[47m[35;99H8[18;1H[?25h[?25l[35;101H2[18;2H[?25h[?25l[19;34r[19;1H[L[1;35r[35;98H[K[35;98H19,1[10CTop[12;34H{[18;1H}
[?25h[?25l[20;34r[20;1H[L[1;35r[35;98H[K[35;98H20,1[10CTop[20;1H[?25h[?25lb[35;101H2[20;2H[?25h[?25lo[35;101H3[20;3H[?25h[?25lo[35;101H4[20;4H[?25h[?25l[32mbool[m[30m[47m[35;101H5[20;5H[?25h[?25l[35;101H6[20;6H[?25h[?25li[35;101H7[20;7H[?25h[?25ls[35;101H8[20;8H[?25h[?25l_[35;101H9[20;9H[?25h[?25ld[35;101H10[20;10H[?25h[?25le[35;102H1[20;11H[?25h[?25ll[35;102H2[20;12H[?25h[?25li[35;102H3[20;13H[?25h[?25lm[35;102H4[20;14H[?25h[?25li[35;102H5[20;15H[?25h[?25lt[35;102H6[20;16H[?25h[?25le[35;102H7[20;17H[?25h[?25lr[35;102H8[20;18H[?25h[?25l([35;102H9[20;19H[?25h[?25ls[35;101H20[20;20H[?25h[?25lt[35;102H1[20;21H[?25h[?25li[35;102H2[20;22H[?25h[?25lr[35;102H3[20;23H[?25h[?25ln[35;102H4[20;24H[?25h[?25lg[35;102H5[20;25H[?25h[?25l[35;102H6[20;26H[?25h[?25l[35;102H5[20;25H[?25h[?25l[20;24H[K[35;102H4[20;24H[?25h[?25l[20;23H[K[35;102H3[20;23H[?25h[?25l[20;22H[K[35;102H2[20;22H[?25h[?25l[20;21H[K[35;102H1[20;21H[?25h[?25lr[35;102H2[20;22H[?25h[?25li[35;102H3[20;23H[?25h[?25ln[35;102H4[20;24H[?25h[?25lg[35;102H5[20;25H[?25h[?25l[35;102H6[20;26H[?25h[?25l&[35;102H7[20;27H[?25h[?25l[35;102H8[20;28H[?25h[?25li[35;102H9[20;29H[?25h[?25l[20;28H[K[35;102H8[20;28H[?25h[?25l[35;102H7[20;27H[?25h[?25li[35;102H8[20;28H[?25h[?25ln[35;102H9[20;29H[?25h[?25lp[35;101H30[20;30H[?25h[?25lu[35;102H1[20;31H[?25h[?25lt[35;102H2[20;32H[?25h[?25l)[20;18H[46m([13C)[m[30m[47m[35;102H3[20;33H[?25h[?25l{[20;18H([13C)[35;102H4[20;34H[?25h[?25l[21;34r[21;1H[L[1;35r[35;98H[K[35;98H21,2-9[8CTop[21;9H[?25h[?25l[35;98H10,21 [10;21H[?25h[?25l[35;98H21,1 [21;1H[?25h[?25l[20;34r[34;1H
[1;35r[20;1H[32mbool[m[30m[47m is_delimiter(string &input){[34;1H[34m        }[m[30m[47m[35;98H[K[35;98H20,34[9CTop[20;34H[?25h[?25l[21;34r[21;1H[L[1;35r[35;98H[K[35;98H21,2-9[8CTop[21;9H[?25h[?25li[35;101H3-10[21;10H[?25h[?25l[33mif[m[30m[47m[35;101H4-11[21;11H[?25h[?25lifi[35;101H5-12[21;12H[?25h[?25lf[35;101H6-13[21;13H[?25h[?25l[35;101H7-14[21;14H[?25h[?25l[35;101H6-13[21;13H[?25h[?25l[21;12H[K[35;101H5-12[21;12H[?25h[?25l[33mif[m[30m[47m[21;11H[K[35;101H4-11[21;11H[?25h[?25l[35;101H5-12[21;12H[?25h[?25li[35;101H6-13[21;13H[?25h[?25ln[35;101H7-14[21;14H[?25h[?25lp[35;101H8-15[21;15H[?25h[?25lu[35;101H9-16[21;16H[?25h[?25lt[35;101H10-17[21;17H[?25h[?25l.[35;102H1-18[21;18H[?25h[?25la[35;102H2-19[21;19H[?25h[?25lt[35;102H3-20[21;20H[?25h[?25l([35;102H4-21[21;21H[?25h[?25l[31m0[m[30m[47m[35;102H5-22[21;22H[?25h[?25l)[46m([1C)[m[30m[47m[35;102H6-23[21;23H[?25h[?25l([1C)[35;102H7-24[21;24H[?25h[?25l=[35;102H8-25[21;25H[?25h[?25l=[35;102H9-26[21;26H[?25h[?25l[35;101H20-27[21;27H[?25h[?25l[35;101H19-26[21;26H[?25h[?25l[21;25H[K[35;102H8-25[21;25H[?25h[?25l[21;24H[K[35;102H7-24[21;24H[?25h[?25l![35;102H8-25[21;25H[?25h[?25l=[35;102H9-26[21;26H[?25h[?25l[35;101H20-27[21;27H[?25h[?25l[35;101H5-12 [21;12H[?25h[?25lifinput.at([31m0[m[30m[47m) != [35;101H4-11[21;11H[?25h[?25l[33mif[m[30m[47m(input.at([31m0[m[30m[47m) !=[35;101H5-12[21;12H[?25h[?25l[35;101H20-27[21;27H[?25h[?25l[31m"


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[35;102H1-28[21;28H[?25h[?25l[31mc[m[30m[47m[35;102H2-29[21;29H[?25h[?25l[21;28H[K[35;102H1-28[21;28H[?25h[?25l[31m([m[30m[47m[35;102H2-29[21;29H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[35;102H3-30[21;30H[?25h[?25l[35;102H4-31[21;31H[?25h[?25l|[35;102H5-32[21;32H[?25h[?25l|[35;102H6-33[21;33H[?25h[?25l[35;102H7-34[21;34H[?25h[?25li[35;102H8-35[21;35H[?25h[?25l[33mif[m[30m[47m[35;102H9-36[21;36H[?25h[?25li[21;35H[K[35;102H8-35[21;35H[?25h[?25l[21;34H[K[35;102H7-34[21;34H[?25h[?25li[35;102H8-35[21;35H[?25h[?25ln[35;102H9-36[21;36H[?25h[?25lp[35;101H30-37[21;37H[?25h[?25lu[35;102H1-38[21;38H[?25h[?25lt[35;102H2-39[21;39H[?25h[?25l.[35;102H3-40[21;40H[?25h[?25la[35;102H4-41[21;41H[?25h[?25lt[35;102H5-42[21;42H[?25h[?25l([35;102H6-43[21;43H[?25h[?25l)[46m()[m[30m[47m[35;102H7-44[21;44H[?25h[?25l)[21;11H[46m([m[30m[47m[30C()[46m)[m[30m[47m[35;102H8-45[21;45H[?25h[?25l[21;44H[K[21;11H([30C[46m()[m[30m[47m[35;102H7-44[21;44H[?25h[?25l[21;43H[K[21;42H([35;102H6-43[21;43H[?25h[?25l[31m0[m[30m[47m[35;102H7-44[21;44H[?25h[?25l)[46m([1C)[m[30m[47m[35;102H8-45[21;45H[?25h[?25l([1C)[35;101H18-2[21;25H[?25h[?25l= [31m"("[m[30m[47m || input.at([31m0[m[30m[47m)[21;44H[K[35;102H7-24[21;24H[?25h[?25l== [31m"("[m[30m[47m || input.at([31m0[m[30m[47m)[35;102H8-25[21;25H[?25h[?25l[17C[46m([1C)[m[30m[47m[35;101H38-4[21;45H[?25h[?25l([1C)[35;102H9-46[21;46H[?25h[?25l![35;101H40-47[21;47H[?25h[?25l[21;46H[K[35;101H39-46[21;46H[?25h[?25l=[35;101H40-47[21;47H[?25h[?25l=[35;102H1-48[21;48H[?25h[?25l[35;102H2-49[21;49H[?25h[?25l'[35;102H3-50[21;50H[?25h[?25l[21;49H[K[35;102H2-49[21;49H[?25h[?25l[31m"


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[35;102H3-50[21;50H[?25h[?25l[31m}[m[30m[47m[20;33H[46m{[m[30m[47m[21;50H[31m[46m}[m[30m[47m[35;102H4-51[21;51H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[20;33H{[21;50H[31m}[m[30m[47m[35;102H5-52[21;52H[?25h[?25l[21;51H[K[24;1H[31m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[20;33H[46m{[m[30m[47m[21;50H[31m[46m}[m[30m[47m[35;102H4-51[21;51H[?25h[?25l[21;50H[K[20;33H{[35;102H3-50[21;50H[?25h[?25l[31m)[m[30m[47m[21;28H[31m[46m([21C)[m[30m[47m[35;102H4-51[21;51H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[21;28H[31m([21C)[m[30m[47m[35;102H5-52[21;52H[?25h[?25l[35;102H6-53[21;53H[?25h[?25l[35;102H5-52[21;52H[?25h[?25l[35;102H6-53[21;53H[?25h[?25l[35;102H7-54[21;54H[?25h[?25l|[35;102H8-55[21;55H[?25h[?25l|[35;102H9-56[21;56H[?25h[?25l[35;101H50-57[21;57H[?25h[?25li[35;102H1-58[21;58H[?25h[?25ln[35;102H2-59[21;59H[?25h[?25lp[35;102H3-60[21;60H[?25h[?25lu[35;102H4-61[21;61H[?25h[?25lt[35;102H5-62[21;62H[?25h[?25l.[35;102H6-63[21;63H[?25h[?25la[35;102H7-64[21;64H[?25h[?25lt[35;102H8-65[21;65H[?25h[?25l([35;102H9-66[21;66H[?25h[?25l[31m0[m[30m[47m[35;101H60-67[21;67H[?25h[?25l)[46m([1C)[m[30m[47m[35;102H1-68[21;68H[?25h[?25l([1C)[35;102H2-69[21;69H[?25h[?25l=[35;102H3-70[21;70H[?25h[?25l=[35;102H4-71[21;71H[?25h[?25l[35;102H5-72[21;72H[?25h[?25l[31m"


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[35;102H6-73[21;73H[?25h[?25l[31m[[m[30m[47m[35;102H7-74[21;74H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[35;102H8-75[21;75H[?25h[?25l[35;102H9-76[21;76H[?25h[?25l[35;102H8-75[21;75H[?25h[?25l[35;102H9-76[21;76H[?25h[?25l|[35;101H70-77[21;77H[?25h[?25l|[35;102H1-78[21;78H[?25h[?25l[35;102H2-79[21;79H[?25h[?25li[35;102H3-80[21;80H[?25h[?25ln[35;102H4-81[21;81H[?25h[?25lp[35;102H5-82[21;82H[?25h[?25lu[35;102H6-83[21;83H[?25h[?25lt[35;102H7-84[21;84H[?25h[?25l[35;102H8-85[21;85H[?25h[?25l[35;102H7-84[21;84H[?25h[?25l.[35;102H8-85[21;85H[?25h[?25la[35;102H9-86[21;86H[?25h[?25lt[35;101H80-87[21;87H[?25h[?25l([35;102H1-88[21;88H[?25h[?25l[31m0[m[30m[47m[35;102H2-89[21;89H[?25h[?25l)[46m([1C)[m[30m[47m[35;102H3-90[21;90H[?25h[?25l([1C)[35;102H4-91[21;91H[?25h[?25l=[35;102H5-92[21;92H[?25h[?25l=[35;102H6-93[21;93H[?25h[?25l[35;102H7-94[21;94H[?25h[?25l{[35;102H8-95[21;95H[?25h[?25l[21;94H[K[35;102H7-94[21;94H[?25h[?25l{[35;102H8-95[21;95H[?25h[?25l[21;94H[K[35;102H7-94[21;94H[?25h[?25l[[35;102H8-95[21;95H[?25h[?25l[21;94H[K[35;102H7-94[21;94H[?25h[?25l[31m"


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[35;102H8-95[21;95H[?25h[?25l[31m][m[30m[47m[21;73H[31m[46m[[21C][m[30m[47m[35;102H9-96[21;96H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[34;1H        int main(int argc, char *argv[]){[m[30m[47m[21;73H[31m[[21C][m[30m[47m[35;101H90-97[21;97H[?25h[?25l[35;102H1-98[21;98H[?25h[?25l|[35;102H2-99[21;99H[?25h[?25l|[35;102H3-100[21;100H[?25h[?25l[35;102H4-101[21;101H[?25h[?25li[35;102H5-102[21;102H[?25h[?25ln[35;102H6-103[21;103H[?25h[?25lp[35;102H7-104[21;104H[?25h[?25lu[35;102H8-105[21;105H[?25h[?25lt[35;102H9-106[21;106H[?25h[?25l[35;101H100-107[21;107H[?25h[?25l[35;101H99-106 [21;106H[?25h[?25l.[35;101H100-107[21;107H[?25h[?25la[35;103H1-108[21;108H[?25h[?25lt[35;103H2-109[21;109H[?25h[?25l([35;103H3-110[21;110H[?25h[?25l[31m0[m[30m[47m[35;103H4-111[21;111H[?25h[?25l)[46m([1C)[m[30m[47m[35;103H5-112[21;112H[?25h[?25l([1C)[35;103H6-113[21;113H[?25h[?25l++[35;103H8-115[21;115H[?25h[?25l[21;114H[K[35;103H7-114[21;114H[?25h[?25l[21;113H[K[35;103H6-113[21;113H[?25h[?25l=[35;103H7-114[21;114H[?25h[?25l=[35;103H8-115[21;115H[?25h[?25l[35;103H9-116[22;1H[?25h[?25l[22;34r[22;1H[L[1;35r[22;1H[31m"


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[m[30m[47m[35;98H[K[35;98H21,110-117    Top[22;2H[?25h[?25l[31m{[m[30m[47m[35;103H1-118[22;3H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[m[30m[47m[35;103H2-119[22;4H[?25h[?25l[35;103H3-120[22;5H[?25h[?25l|[35;103H4-121[22;6H[?25h[?25l|[35;103H5-122[22;7H[?25h[?25l[35;103H6-123[22;8H[?25h[?25li[35;103H7-124[22;9H[?25h[?25ln[35;103H8-125[22;10H[?25h[?25lp[35;103H9-126[22;11H[?25h[?25lu[35;102H20-127[22;12H[?25h[?25lt[35;103H1-128[22;13H[?25h[?25l.[35;103H2-129[22;14H[?25h[?25la[35;103H3-130[22;15H[?25h[?25lt[35;103H4-131[22;16H[?25h[?25l([35;103H5-132[22;17H[?25h[?25l[31m0[m[30m[47m[35;103H6-133[22;18H[?25h[?25l)[46m([1C)[m[30m[47m[35;103H7-134[22;19H[?25h[?25l([1C)[35;103H8-135[22;20H[?25h[?25l=[35;103H9-136[22;21H[?25h[?25l=[35;102H30-137[22;22H[?25h[?25l[35;103H1-138[22;23H[?25h[?25l[31m"


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[m[30m[47m[35;103H2-139[22;24H[?25h[?25l[31m}[m[30m[47m[22;2H[31m[46m{[21C}[m[30m[47m[35;103H3-140[22;25H[?25h[?25l[31m'"{[21C}[m[30m[47m[35;103H4-141[22;26H[?25h[?25l[22;25H[K[22;2H[31m[46m{[21C}[m[30m[47m[35;103H3-140[22;25H[?25h[?25l[31m"[m[30m[47m


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[m[30m[47m[22;2H[31m{[21C}[m[30m[47m[35;103H4-141[22;26H[?25h[?25l)[21;11H[46m([m[30m[47m[103C  [22;1H[31m"[m[30m[47m[24C[46m)[m[30m[47m[35;103H5-142[22;27H[?25h[?25l{[21;11H([103C  [22;1H[31m"[m[30m[47m[24C)[35;103H6-143[22;28H[?25h[?25l[23;34r[23;1H[L[1;35r[35;98H[K[35;98H22,3-17[7CTop[23;17H[?25h[?25lr[35;101H4-18[23;18H[?25h[?25le[35;101H5-19[23;19H[?25h[?25lt[35;101H6-20[23;20H[?25h[?25lu[35;101H7-21[23;21H[?25h[?25ln[35;101H8-22[23;22H[?25h[?25l[35;101H9-23[23;23H[?25h[?25lt[35;101H10-24[23;24H[?25h[?25lr[35;102H1-25[23;25H[?25h[?25lu[35;102H2-26[23;26H[?25h[?25l[31mtrue[m[30m[47m[35;102H3-27[23;27H[?25h[?25ltru[23;26H[K[35;102H2-26[23;26H[?25h[?25l[23;25H[K[35;102H1-25[23;25H[?25h[?25l[23;24H[K[35;102H0-24[23;24H[?25h[?25l[23;23H[K[35;101H9-23 [23;23H[?25h[?25l[35;101H8-22[23;22H[?25h[?25l[23;21H[K[35;101H7-21[23;21H[?25h[?25lr[35;101H8-22[23;22H[?25h[?25l[33mreturn[m[30m[47m[35;101H9-23[23;23H[?25h[?25l[35;101H10-24[23;24H[?25h[?25lt[35;102H1-25[23;25H[?25h[?25lr[35;102H2-26[23;26H[?25h[?25lu[35;102H3-27[23;27H[?25h[?25l[31mtrue[m[30m[47m[35;102H4-28[23;28H[?25h[?25l;[35;102H5-29[23;29H[?25h[?25l[24;34r[24;1H[L[1;35r[35;98H[K[35;98H23,3-17[7CTop[24;17H[?25h[?25l[24;9H}[22;27H[46m{[24;9H}[m[30m[47m[35;104H0[24;10H[?25h[?25l[25;34r[25;1H[L[1;35r[35;98H[K[35;98H24,2-9[8CTop[22;27H{[24;9H}[25;9H[?25h[?25le[35;101H3-10[25;10H[?25h[?25ll[35;101H4-11[25;11H[?25h[?25ls[35;101H5-12[25;12H[?25h[?25l[33melse[m[30m[47m[35;101H6-13[25;13H[?25h[?25l{[35;101H7-14[25;14H[?25h[?25l[26;34r[26;1H[L[1;35r[35;98H[K[35;98H25,3-17[7CTop[26;17H[?25h[?25lr[35;101H4-18[26;18H[?25h[?25le[35;101H5-19[26;19H[?25h[?25lt[35;101H6-20[26;20H[?25h[?25lr[35;101H7-21[26;21H[?25h[?25l[26;20H[K[35;101H6-20[26;20H[?25h[?25lu[35;101H7-21[26;21H[?25h[?25lr[35;101H8-22[26;22H[?25h[?25l[33mreturn[m[30m[47m[35;101H9-23[26;23H[?25h[?25l[35;101H10-24[26;24H[?25h[?25lf[35;102H1-25[26;25H[?25h[?25la[35;102H2-26[26;26H[?25h[?25ll[35;102H3-27[26;27H[?25h[?25ls[35;102H4-28[26;28H[?25h[?25l[31mfalse[m[30m[47m[35;102H5-29[26;29H[?25h[?25l;[35;102H6-30[26;30H[?25h[?25l[27;34r[27;1H[L[1;35r[35;98H[K[35;98H26,3-17[7CTop[27;17H[?25h[?25l[27;9H}[25;13H[46m{[27;9H}[m[30m[47m[35;104H0[27;10H[?25h[?25l[28;34r[28;1H[L[1;35r[35;98H[K[35;98H27,2-9[8CTop[25;13H{[27;9H}[28;9H[?25h[?25l}[20;33H[46m{[28;1H}[m[30m[47m[35;102H  [28;2H[?25h[?25l[20;33H{[28;1H}[35;99H8,1[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[34m        [m[30m[47m[35;98H[K[35;98H29,1[11C6%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[34m        // loop through characters in expressio[m[30m[47m[35;98H[K[35;98H30,2[10C12%[29;2H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[34m        for(int i = [m[30m[47m[31m0[m[30m[47m[34m; i < str.length(); i++){[m[30m[47m[35;98H[K[35;98H31,2[10C18%[29;2H[?25h[?25l[1;34r[34;1H
[1;35r[35;98H[K[35;98H32,1[10C25%[29;1H[?25h[?25l[1;34r[1;1H[2M[1;35r[35;98H[K[35;98H34,1[10C37%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[34m        int main(int argc, char *argv[]){[m[30m[47m[35;98H[K[35;98H35,1[10C43%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[34m        }[m[30m[47m[35;98H[K[35;98H36,1[10C50%[29;1H[?25h[?25l[1;34r[1;1H[2M[1;35r[33;1H[34m*/[m[30m[47m[35;98H[K[35;98H38,1[10C62%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){[35;98H[K[35;98H39,1[10C68%[29;1H[?25h[?25l[1;34r[1;1H[2M[1;35r[33;9Hstring str = [31m"'(' '(' ')' '('"[m[30m[47m;[34;9Hstring output = concatenate(str);[35;98H[K[35;98H41,1[10C81%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;9Hcout << output << endl;[35;98H[K[35;98H42,2[10C87%[29;2H[?25h[?25l[1;34r[34;1H
[1;35r[34;9H[33mreturn[m[30m[47m [31m0[m[30m[47m;[35;98H[K[35;98H43,1[10C93%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H}[35;98H[K[35;98H45,1[10CBot[30;1H[?25h[?25l[35;99H7,25-32[32;32H[?25h[?25l[1;34r[34;1H
[1;35r[32;34r[32;1H[L[1;35r[35;98H[K[35;98H48,2-9[8CBot[32;9H[?25h[?25lc[35;101H3-10[32;10H[?25h[?25lo[35;101H4-11[32;11H[?25h[?25lu[35;101H5-12[32;12H[?25h[?25lt[35;101H6-13[32;13H[?25h[?25l[35;101H7-14[32;14H[?25h[?25l<[35;101H8-15[32;15H[?25h[?25l<[35;101H9-16[32;16H[?25h[?25l[35;101H10-17[32;17H[?25h[?25li[35;102H1-18[32;18H[?25h[?25ls[35;102H2-19[32;19H[?25h[?25l_[35;102H3-20[32;20H[?25h[?25ld[35;102H4-21[32;21H[?25h[?25le[35;102H5-22[32;22H[?25h[?25ll[35;102H6-23[32;23H[?25h[?25li[35;102H7-24[32;24H[?25h[?25lm[35;102H8-25[32;25H[?25h[?25li[35;102H9-26[32;26H[?25h[?25lt[35;101H20-27[32;27H[?25h[?25le[35;102H1-28[32;28H[?25h[?25lr[35;102H2-29[32;29H[?25h[?25l([35;102H3-30[32;30H[?25h[?25lo[35;102H4-31[32;31H[?25h[?25lu[35;102H5-32[32;32H[?25h[?25lt[35;102H6-33[32;33H[?25h[?25lp[35;102H7-34[32;34H[?25h[?25lu[35;102H8-35[32;35H[?25h[?25lt[35;102H9-36[32;36H[?25h[?25l[35;101H30-37[32;37H[?25h[?25l<[35;102H1-38[32;38H[?25h[?25l<[35;102H2-39[32;39H[?25h[?25l[35;102H3-40[32;40H[?25h[?25l[35;102H2-39[32;39H[?25h[?25l[32;38H[K[35;102H1-38[32;38H[?25h[?25l[32;37H[K[35;102H0-37[32;37H[?25h[?25l[35;101H29-36[32;36H[?25h[?25l)[32;29H[46m([m[30m[47moutput[46m)[m[30m[47m[35;101H30-37[32;37H[?25h[?25l[32;29H(output)[35;102H1-38[32;38H[?25h[?25l<[35;102H2-39[32;39H[?25h[?25l<[35;102H3-40[32;40H[?25h[?25l[35;102H4-41[32;41H[?25h[?25le[35;102H5-42[32;42H[?25h[?25ln[35;102H6-43[32;43H[?25h[?25ld[35;102H7-44[32;44H[?25h[?25ll[35;102H8-45[32;45H[?25h[?25l;[35;102H9-46[32;46H[?25h[?25l`[35;101H40-47[32;47H[?25h[?25l:[35;102H1-48[32;48H[?25h[?25lx[35;102H2-49[32;49H[?25h[?25l[1;34r[34;1H
[1;35r[32;34r[32;1H[L[1;35r[35;98H[K[35;98H49,3-17[7CBot[32;17H[?25h[?25l[1;34r[34;1H
[1;35r[32;34r[32;1H[L[1;35r[35;98H[K[35;98H50,3-17[7CBot[32;17H[?25h[?25l[1;34r[34;1H
[1;35r[32;34r[32;1H[L[1;35r[35;98H[K[35;98H51,3-17[7CBot[32;17H[?25h[?25lm[35;101H4-18[32;18H[?25h[?25l[32;17H[K[35;101H3-17[32;17H[?25h[?25l[35;101H2-9 [32;9H[?25h[?25l[35;101H1  [32;1H[?25h[?25l[31;34r[34;1H
[1;35r[34;1H[1m[34m~                                                                                                                  [m[30m[47m[35;98H[K[35;98H50,1[10CBot[31;1H[?25h[?25l[30;34r[34;1H
[1;35r[34;1H[1m[34m~                                                                                                                  [m[30m[47m[35;98H[K[35;98H49,1[10CBot[30;1H[?25h[?25l[29;34r[34;1H
[1;35r[29;9Hcout << is_delimiter(output) << endl;`:x[34;1H[1m[34m~                                                                                                                  [m[30m[47m[35;98H[K[35;98H48,42-49      Bot[29;49H[?25h[?25l[29;48H[K[35;102H1-48[29;48H[?25h[?25l[29;47H[K[35;102H0-47[29;47H[?25h[?25l[29;46H[K[35;101H39-46[29;46H[?25h[35;1H[K[29;45H[?25l[35;88H^[[29;45H[35;88H  [29;46H[35;98H48,38-45      Bot[29;45H[?25h[?25l[35;88H:[29;45H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 50L, 961C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kbool is_delimiter(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:21:20:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
  if(input.at(0) == [01;31m[K"("[m[K || input.at(0) == ")"  || input.at(0) == "[" || input.at(0) == "]" || input.at(0) == "{" || input.at(0) == "}"){
                    [01;31m[K^~~[m[K
[01m[Kbalanced.cc:21:42:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
  if(input.at(0) == "(" || input.at(0) == [01;31m[K")"[m[K  || input.at(0) == "[" || input.at(0) == "]" || input.at(0) == "{" || input.at(0) == "}"){
                                          [01;31m[K^~~[m[K
[01m[Kbalanced.cc:21:65:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
  if(input.at(0) == "(" || input.at(0) == ")"  || input.at(0) == [01;31m[K"["[m[K || input.at(0) == "]" || input.at(0) == "{" || input.at(0) == "}"){
                                                                 [01;31m[K^~~[m[K
[01m[Kbalanced.cc:21:87:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
  if(input.at(0) == "(" || input.at(0) == ")"  || input.at(0) == "[" || input.at(0) == [01;31m[K"]"[m[K || input.at(0) == "{" || input.at(0) == "}"){
                                                                                       [01;31m[K^~~[m[K
[01m[Kbalanced.cc:21:109:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
 nput.at(0) == "(" || input.at(0) == ")"  || input.at(0) == "[" || input.at(0) == "]" || input.at(0) == [01;31m[K"{"[m[K || input.at(0) == "}"){
                                                                                                        [01;31m[K^~~[m[K

[01m[Kbalanced.cc:21:131:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
 " || input.at(0) == ")"  || input.at(0) == "[" || input.at(0) == "]" || input.at(0) == "{" || input.at(0) == [01;31m[K"}"[m[K){
                                                                                                              [01;31m[K^~~[m[K

make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$  ISO C++ forbids comparison between pointer and integervim [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 50L, 961C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H}

[32mbool[m is_delimiter(string &input){[4;9H[33mif[m(input.at([31m0[m) == [31m"("[m || input.at([31m0[m) == [31m")"[m  || input.at([31m0[m) == [31m"["[m || input.at([31m0[m) == [31m"]"[m || input.at([31m0[m) ==  [5;1H[31m"{"[m || input.at([31m0[m) == [31m"}"[m){[6;17H[33mreturn[m [31mtrue[m;[7;9H}[8;9H[33melse[m{[9;17H[33mreturn[m [31mfalse[m;[10;9H}
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[31m0[m[34m; i < str.length(); i++){[24;1H        int main(int argc, char *argv[]){
        }
*/[m

[32mint[m main([32mint[m argc, [32mchar[m *argv[]){[29;9Hstring str = [31m"'(' '(' ')' '('"[m;[30;9Hstring output = concatenate(str);[31;9Hcout << output << endl;[32;9Hcout << is_delimiter(output) << endl;[33;9H[33mreturn[m [31m0[m;
}[35;98H48,38-45      Bot[32;45H[?25h[?25l[35;88H:[32;45H[35;1H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[32;45H[27m[23m[29m[m[30m[47m[H[2J[1;1H}

[32mbool[m[30m[47m is_delimiter(string &input){[4;9H[33mif[m[30m[47m(input.at([31m0[m[30m[47m) == [31m"("[m[30m[47m || input.at([31m0[m[30m[47m) == [31m")"[m[30m[47m  || input.at([31m0[m[30m[47m) == [31m"["[m[30m[47m || input.at([31m0[m[30m[47m) == [31m"]"[m[30m[47m || input.at([31m0[m[30m[47m) ==  [5;1H[31m"{"[m[30m[47m || input.at([31m0[m[30m[47m) == [31m"}"[m[30m[47m){[6;17H[33mreturn[m[30m[47m [31mtrue[m[30m[47m;[7;9H}[8;9H[33melse[m[30m[47m{[9;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[10;9H}
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [m[30m[47m[31m0[m[30m[47m[34m; i < str.length(); i++){[24;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){[29;9Hstring str = [31m"'(' '(' ')' '('"[m[30m[47m;[30;9Hstring output = concatenate(str);[31;9Hcout << output << endl;[32;9Hcout << is_delimiter(output) << endl;[33;9H[33mreturn[m[30m[47m [31m0[m[30m[47m;
}[35;98H48,38-45      Bot[32;45H[?25h[?25l[8;13H[46m{[10;9H}[m[30m[47m[35;98H24,6-13 [8;13H[?25h[?25l[1;34r[1;1H[2L[1;35r[1;17H}[2;9H[33mreturn[m[30m[47m input;[7;27H[46m{[9;9H}[m[30m[47m[10;13H{[12;9H}[35;98H[K[35;98H21,135-142    88%[7;27H[?25h[?25l[35;88H~@k[7;27H[35;88H   [7;27H[35;1H[1m-- INSERT --[m[30m[47m[35;98H[K[35;98H21,135-142    88%[7;27H[?25h[?25l[35;103H6-143[7;28H[?25h[?25l[7;27H[K[6;11H[46m([m[30m[47m[103C  [7;1H[31m"[m[30m[47m[24C[46m)[m[30m[47m[9;9H}[35;103H5-142[7;27H[?25h[?25l[7;26H[K[6;11H([103C  [7;1H[31m"[m[30m[47m[35;103H4-141[7;26H[?25h[?25l[7;25H[K[8;1H[31m                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[26;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;[m[30m[47m[7;2H[31m[46m{[21C}[m[30m[47m[35;103H3-140[7;25H[?25h[?25l[7;23H[K[8;1H                [33mreturn[m[30m[47m [4C;
        }
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[26;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;[7;2H[31m{[m[30m[47m[35;103H1-138[7;23H[?25h[?25l[35;103H0-137[7;22H[?25h[?25l[7;20H[K[35;102H28-135[7;20H[?25h[?25l[46m([1C)[m[30m[47m[35;103H7-134[7;19H[?25h[?25l[7;18H[K[7;16H([35;103H6-133[7;18H[?25h[?25l[7;16H[K[35;103H4-131[7;16H[?25h[?25l[7;15H[K[35;103H3-130[7;15H[?25h[?25l[7;14H[K[35;103H2-129[7;14H[?25h[?25l[7;12H[K[35;103H0-127[7;12H[?25h[?25l[7;11H[K[35;102H19-126[7;11H[?25h[?25l[7;9H[K[35;103H7-124[7;9H[?25h[?25l[7;8H[K[35;103H5-122[7;7H[?25h[?25l[7;6H[K[35;103H4-121[7;6H[?25h[?25l[7;5H[K[35;103H3-120[7;5H[?25h[?25l[7;3H[K[8;1H[31m                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[26;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;[m[30m[47m[7;2H[31m[46m{[9;9H}[m[30m[47m[35;103H1-118[7;3H[?25h[?25l[6;34r[34;1H
[1;35r[6;1H        [33mif[m[30m[47m(input.at([31m0[m[30m[47m) == [31m"("[m[30m[47m || input.at([31m0[m[30m[47m) == [31m")"[m[30m[47m  || input.at([31m0[m[30m[47m) == [31m"["[m[30m[47m || input.at([31m0[m[30m[47m) == [31m"]"[m[30m[47m || input.at([31m0[m[30m[47m) ==
                [33mreturn[m[30m[47m [4C;
        [46m}[m[30m[47m
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;[34;9H[33mreturn[m[30m[47m [31m0[m[30m[47m;[35;98H[K[35;98H21,109-116    93%[8;9H}[7;1H[?25h[?25l[35;103H8-115[6;115H[?25h[?25l[6;113H[K[35;103H6-113[6;113H[?25h[?25l[46m([1C)[m[30m[47m[35;103H5-112[6;112H[?25h[?25l[6;110H[K[6;109H([35;103H3-110[6;110H[?25h[?25l[6;109H[K[35;103H2-109[6;109H[?25h[?25l[6;108H[K[35;103H1-108[6;108H[?25h[?25l[6;107H[K[35;103H0-107[6;107H[?25h[?25l[6;105H[K[35;101H98-105 [6;105H[?25h[?25l[6;104H[K[35;102H7-104[6;104H[?25h[?25l[6;102H[K[35;102H5-102[6;102H[?25h[?25l[6;101H[K[35;102H4-101[6;101H[?25h[?25l[35;102H3-100[6;100H[?25h[?25l[6;99H[K[35;102H2-99 [6;99H[?25h[?25l[6;98H[K[35;102H0-97[6;97H[?25h[?25l[6;96H[K[7;1H[31m                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        return 0;[m[30m[47m[6;73H[31m[46m[[21C][m[30m[47m[35;101H89-96[6;96H[?25h[?25l[6;95H[K[6;73H[31m[[m[30m[47m[35;102H8-95[6;95H[?25h[?25l[6;94H[K[7;1H                [33mreturn[m[30m[47m [4C;
        }
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        [33mreturn[m[30m[47m [1C;[35;102H6-93[6;93H[?25h[?25l[6;92H[K[35;102H5-92[6;92H[?25h[?25l[6;91H[K[6;87H[46m([1C)[m[30m[47m[35;102H3-90[6;90H[?25h[?25l[6;89H[K[6;87H([35;102H2-89[6;89H[?25h[?25l[6;88H[K[35;102H1-88[6;88H[?25h[?25l[6;87H[K[35;102H0-87[6;87H[?25h[?25l[6;85H[K[35;101H78-85[6;85H[?25h[?25l[6;84H[K[35;102H7-84[6;84H[?25h[?25l[6;83H[K[35;102H6-83[6;83H[?25h[?25l[6;81H[K[35;102H4-81[6;81H[?25h[?25l[6;80H[K[35;102H3-80[6;80H[?25h[?25l[6;79H[K[35;102H1-78[6;78H[?25h[?25l[6;77H[K[35;102H0-77[6;77H[?25h[?25l[6;76H[K[35;101H69-76[6;76H[?25h[?25l[6;74H[K[7;1H[31m                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        return 0;[m[30m[47m[35;102H7-74[6;74H[?25h[?25l[6;72H[K[7;1H                [33mreturn[m[30m[47m [4C;
        }
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        [33mreturn[m[30m[47m [1C;[35;102H5-72[6;72H[?25h[?25l[35;102H4-71[6;71H[?25h[?25l[6;69H[K[35;102H2-69[6;69H[?25h[?25l[46m([1C)[m[30m[47m[35;102H1-68[6;68H[?25h[?25l[6;67H[K[6;65H([35;102H0-67[6;67H[?25h[?25l[6;66H[K[35;101H59-66[6;66H[?25h[?25l[6;64H[K[35;102H7-64[6;64H[?25h[?25l[6;63H[K[35;102H6-63[6;63H[?25h[?25l[6;62H[K[35;102H5-62[6;62H[?25h[?25l[6;60H[K[35;102H3-60[6;60H[?25h[?25l[6;59H[K[35;102H2-59[6;59H[?25h[?25l[6;58H[K[35;102H1-58[6;58H[?25h[?25l[6;57H[K[35;101H49-56[6;56H[?25h[?25l[6;55H[K[35;102H8-55[6;55H[?25h[?25l[6;54H[K[35;102H7-54[6;54H[?25h[?25l[35;102H5-52[6;52H[?25h[?25l[6;51H[K[7;1H[31m                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        return 0;[m[30m[47m[6;28H[31m[46m([21C)[m[30m[47m[35;102H4-51[6;51H[?25h[?25l[6;50H[K[6;28H[31m([m[30m[47m[35;102H3-50[6;50H[?25h[?25l[6;49H[K[7;1H                [33mreturn[m[30m[47m [4C;
        }
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        [33mreturn[m[30m[47m [1C;[35;102H2-49[6;49H[?25h[?25l[35;102H1-48[6;48H[?25h[?25l[6;47H[K[35;102H0-47[6;47H[?25h[?25l[6;46H[K[6;42H[46m([1C)[m[30m[47m[35;101H38-45[6;45H[?25h[?25l[6;44H[K[6;42H([35;102H7-44[6;44H[?25h[?25l[6;43H[K[35;102H6-43[6;43H[?25h[?25l[6;42H[K[35;102H5-42[6;42H[?25h[?25l[6;41H[K[35;102H4-41[6;41H[?25h[?25l[6;40H[K[35;102H3-40[6;40H[?25h[?25l[6;39H[K[35;102H2-39[6;39H[?25h[?25l[6;37H[K[35;102H0-37[6;37H[?25h[?25l[6;36H[K[35;101H29-36[6;36H[?25h[?25l[6;35H[K[35;102H8-35[6;35H[?25h[?25l[6;34H[K[35;102H6-33[6;33H[?25h[?25l[6;31H[K[35;102H4-31[6;31H[?25h[?25l[35;102H3-30[6;30H[?25h[?25l[6;28H[K[7;1H[31m                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        return 0;[m[30m[47m[35;102H1-28[6;28H[?25h[?25l[6;27H[K[7;1H                [33mreturn[m[30m[47m [4C;
        }
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[25;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;
        cout << is_delimiter(output) << endl;
        [33mreturn[m[30m[47m [1C;[35;102H0-27[6;27H[?25h[?25l[35;101H19-26[6;26H[?25h[?25l[6;25H[K[35;102H8-25[6;25H[?25h[?25l[6;24H[K[6;20H[46m([1C)[m[30m[47m[35;102H6-23[6;23H[?25h[?25l[6;22H[K[6;20H([35;102H5-22[6;22H[?25h[?25l[6;21H[K[35;102H4-21[6;21H[?25h[?25l[6;19H[K[35;102H2-19[6;19H[?25h[?25l[6;18H[K[35;102H1-18[6;18H[?25h[?25l[6;17H[K[35;102H0-17[6;17H[?25h[?25l[6;15H[K[35;101H8-15 [6;15H[?25h[?25l[6;14H[K[35;101H7-14[6;14H[?25h[?25l[6;13H[K[35;101H6-13[6;13H[?25h[?25l[6;12H[K[35;101H5-12[6;12H[?25h[?25l[1;34r[1;1H[L[1;35r[1;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[35;98H[K[35;98H20,34[9C87%[6;33H[46m{[9;9H}[6;34H[?25h[?25l[7;34r[m[30m[47m[7;1H[L[1;35r[9;9H[46m        [m[30m[47m[10;9H}[35;98H[K[35;98H21,2-9[8C82%[6;33H{[9;9H        [7;9H[?25h[?25lc[35;101H3-10[7;10H[?25h[?25lh[35;101H4-11[7;11H[?25h[?25la[35;101H5-12[7;12H[?25h[?25l[32mchar[m[30m[47m[35;101H6-13[7;13H[?25h[?25l[35;101H7-14[7;14H[?25h[?25lf[35;101H8-15[7;15H[?25h[?25li[35;101H9-16[7;16H[?25h[?25lr[35;101H10-17[7;17H[?25h[?25ls[35;102H1-18[7;18H[?25h[?25lt[35;102H2-19[7;19H[?25h[?25l[35;102H3-20[7;20H[?25h[?25l=[35;102H4-21[7;21H[?25h[?25l[35;102H5-22[7;22H[?25h[?25ls[35;102H6-23[7;23H[?25h[?25lt[35;102H7-24[7;24H[?25h[?25lr[35;102H8-25[7;25H[?25h[?25l[7;24H[K[35;102H7-24[7;24H[?25h[?25l[7;23H[K[35;102H6-23[7;23H[?25h[?25l[7;22H[K[35;102H5-22[7;22H[?25h[?25li[35;102H6-23[7;23H[?25h[?25ln[35;102H7-24[7;24H[?25h[?25lp[35;102H8-25[7;25H[?25h[?25lu[35;102H9-26[7;26H[?25h[?25lt[35;101H20-27[7;27H[?25h[?25l[[35;102H1-28[7;28H[?25h[?25l[31m0[m[30m[47m[35;102H2-29[7;29H[?25h[?25l'[35;102H3-30[7;30H[?25h[?25l[7;29H[K[35;102H2-29[7;29H[?25h[?25l][46m[[1C][m[30m[47m[35;102H3-30[7;30H[?25h[?25l;[[1C][35;102H4-31[7;31H[?25h[?25l[35;99H2,5-12 [8;12H[?25h[?25lf[35;101H6-13[8;13H[?25h[?25li[35;101H7-14[8;14H[?25h[?25lr[35;101H8-15[8;15H[?25h[?25ls[35;101H9-16[8;16H[?25h[?25lt[35;101H10-17[8;17H[?25h[?25l[35;102H1-18[8;18H[?25h[?25l=[35;102H2-19[8;19H[?25h[?25l=[35;102H3-20[8;20H[?25h[?25l[35;102H4-21[8;21H[?25h[?25l[31m"
                return true;
        }
        else{
                return false;
        }
}


/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = 0; i < str.length(); i++){[27;1H        int main(int argc, char *argv[]){
        }
*/

int main(int argc, char *argv[]){
        string str = [m[30m[47m[4C [3C [3C [4C[31m;
        string output = concatenate(str);
        cout << output << endl;[m[30m[47m[35;102H5-22[8;22H[?25h[?25l[31m][m[30m[47m[35;102H6-23[8;23H[?25h[?25l[8;22H[K[35;102H5-22[8;22H[?25h[?25l[31m][m[30m[47m[35;102H6-23[8;23H[?25h[?25l[31m"[m[30m[47m
                [33mreturn[m[30m[47m [4C;
        }
        [33melse[m[30m[47m{
                [33mreturn[m[30m[47m [5C;
        }
}


[34m/*
bool is_balanced(string str){
        stack<char> s;
        char ch;
        
        // loop through characters in expressio
        for(int i = [1C; i < str.length(); i++){[27;1H        int main(int argc, char *argv[]){
        }
*/[m[30m[47m

[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){
        string str = [4C[31m '(' ')' [m[30m[47m[4C;
        string output = concatenate(str);
        cout << output << endl;[35;102H7-24[8;24H[?25h[?25l)[8;11H[46m([12C)[m[30m[47m[35;102H8-25[8;25H[?25h[?25l{[8;11H([12C)[46m{[10;9H}[m[30m[47m[35;102H9-26[8;26H[?25h[35;1H[K[8;25H[?25l[35;88H^[[8;25H[35;88H  [8;26H[35;98H22,18-25      82%[8;25H[?25h[?25l[35;88H:[8;25H[35;88H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 51L, 868C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ 
amchugh2@remote06:~/i240b/submit/lab11$ make
g++    -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kbool is_delimiter(std::__cxx11::string&)[m[Kâ€™:
[01m[Kbalanced.cc:22:14:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
  if(first == [01;31m[K"]"[m[K){
              [01;31m[K^~~[m[K
make: *** [<builtin>: balanced.o] Error 1
amchugh2@remote06:~/i240b/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 51L, 868C[2;1Hâ–½[6n[2;1H  [1;1H[>c]1Script started on 2020-04-23 16:33:13-04:00 [TERM="xterm" TTY="/dev/pts/14" COLUMNS="100" LINES="35"]
amchugh2@remote03:~/i240b/submit/lab11$ ls
balanced  balanced.cc  balanced.o  lab11.LOG  Makefile
amchugh2@remote03:~/i240b/submit/lab11$ vim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 94L, 1925C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[33musing[m [32mnamespace[m std;

string concatenate(string &input){[13;9H[32mchar[m bad[] = [31m" , '"[m;[14;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[15;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[16;17H}[17;9H[33mreturn[m input;
}

[32mbool[m is_delimiter(string &input){[21;9H[34m//char good[] = [m[31m"(,),[,],{,},<,>"[m[34m;[m[22;9H[32msize_t[m found = input.find_first_not_of([31m"()[]{}<>"[m);[23;9H[33mif[m(found != string::npos){[24;17Hcout << [31m"invalid delmiter"[m << endl;[25;17H[33mreturn[m [31mfalse[m;[26;9H}[27;9H[33melse[m{[28;17H[33mreturn[m [31mtrue[m;[29;9H}
}

[32mbool[m is_balanced(string expr) {
    stack<[32mchar[m> s;
    [32mchar[m ch;[35;83H10,20[9CTop[10;20H[?25h[?25l[35;1H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[27m[23m[29m[m[30m[47m[H[2J[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdio.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stack>[m[30m[47m
[35m#include [m[30m[47m[31m<algorithm>[m[30m[47m
[35m#include [m[30m[47m[31m<string>[m[30m[47m
[35m#include [m[30m[47m[31m<cstring>[m[30m[47m
[35m#include [m[30m[47m[31m<iostream>[m[30m[47m

[33musing[m[30m[47m [32mnamespace[m[30m[47m std;

string concatenate(string &input){[13;9H[32mchar[m[30m[47m bad[] = [31m" , '"[m[30m[47m;[14;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[15;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[16;17H}[17;9H[33mreturn[m[30m[47m input;
}

[32mbool[m[30m[47m is_delimiter(string &input){[21;9H[34m//char good[] = [m[30m[47m[31m"(,),[,],{,},<,>"[m[30m[47m[34m;[m[30m[47m[22;9H[32msize_t[m[30m[47m found = input.find_first_not_of([31m"()[]{}<>"[m[30m[47m);[23;9H[33mif[m[30m[47m(found != string::npos){[24;17Hcout << [31m"invalid delmiter"[m[30m[47m << endl;[25;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[26;9H}[27;9H[33melse[m[30m[47m{[28;17H[33mreturn[m[30m[47m [31mtrue[m[30m[47m;[29;9H}
}

[32mbool[m[30m[47m is_balanced(string expr) {
    stack<[32mchar[m[30m[47m> s;
    [32mchar[m[30m[47m ch;[35;83H10,20[9CTop[10;20H[?25h[?25l[35;84H3,21-28[13;28H[?25h[?25l[35;73H~@k[13;28H[35;73H   [13;28H[35;1H[1m-- INSERT --[m[30m[47m[35;83H[K[35;83H13,21-28      Top[13;28H[?25h[?25l[35;87H2-29[13;29H[?25h[?25l[14;34r[14;1H[L[1;35r[35;83H[K[35;83H14,2-9[8CTop[14;9H[?25h[?25l[35;86H1  [14;1H[?25h[?25l[13;34r[34;1H
[1;35r[13;9H[32mchar[m[30m[47m bad[] = [31m" , '"[m[30m[47m;[34;5H[32mchar[m[30m[47m ch;[35;83H[K[35;83H13,22-29      Top[13;29H[?25h[?25l[35;84H2,29   [12;29H[?25h[?25l[35;84H1,1 [11;1H[?25h[?25l[35;84H0,21[10;21H[?25h[?25l[35;83H9,1  [9;1H[?25h[?25l[10;34r[10;1H[L[1;35r[35;83H[K[35;83H10,1[10CTop[10;1H[?25h[?25l/[35;86H2[10;2H[?25h[?25l[34m//[m[30m[47m[35;86H3[10;3H[?25h[?25l[34m [m[30m[47m[35;86H4[10;4H[?25h[?25l[34mN[m[30m[47m[35;86H5[10;5H[?25h[?25l[34mO[m[30m[47m[35;86H6[10;6H[?25h[?25l[34mT[m[30m[47m[35;86H7[10;7H[?25h[?25l[34mE[m[30m[47m[35;86H8[10;8H[?25h[?25l[34m:[m[30m[47m[35;86H9[10;9H[?25h[?25l[34m [m[30m[47m[35;86H10[10;10H[?25h[?25l[34mT[m[30m[47m[35;87H1[10;11H[?25h[?25l[34mH[m[30m[47m[35;87H2[10;12H[?25h[?25l[34mI[m[30m[47m[35;87H3[10;13H[?25h[?25l[34mS[m[30m[47m[35;87H4[10;14H[?25h[?25l[34m [m[30m[47m[35;87H5[10;15H[?25h[?25l[34mP[m[30m[47m[35;87H6[10;16H[?25h[?25l[34mR[m[30m[47m[35;87H7[10;17H[?25h[?25l[34mO[m[30m[47m[35;87H8[10;18H[?25h[?25l[34mG[m[30m[47m[35;87H9[10;19H[?25h[?25l[34mR[m[30m[47m[35;86H20[10;20H[?25h[?25l[34mA[m[30m[47m[35;87H1[10;21H[?25h[?25l[34mM[m[30m[47m[35;87H2[10;22H[?25h[?25l[34m [m[30m[47m[35;87H3[10;23H[?25h[?25l[34mO[m[30m[47m[35;87H4[10;24H[?25h[?25l[34mN[m[30m[47m[35;87H5[10;25H[?25h[?25l[34mL[m[30m[47m[35;87H6[10;26H[?25h[?25l[34mY[m[30m[47m[35;87H7[10;27H[?25h[?25l[34m [m[30m[47m[35;87H8[10;28H[?25h[?25l[34mW[m[30m[47m[35;87H9[10;29H[?25h[?25l[34mO[m[30m[47m[35;86H30[10;30H[?25h[?25l[34mRK[m[30m[47m[35;87H2[10;32H[?25h[?25l[34mS[m[30m[47m[35;87H3[10;33H[?25h[?25l[34m [m[30m[47m[35;87H4[10;34H[?25h[?25l[34mI[m[30m[47m[35;87H5[10;35H[?25h[?25l[34mF[m[30m[47m[35;87H6[10;36H[?25h[?25l[34m [m[30m[47m[35;87H7[10;37H[?25h[?25l[34mA[m[30m[47m[35;87H8[10;38H[?25h[?25l[34mR[m[30m[47m[35;87H9[10;39H[?25h[?25l[34mG[m[30m[47m[35;86H40[10;40H[?25h[?25l[34mU[m[30m[47m[35;87H1[10;41H[?25h[?25l[34mM[m[30m[47m[35;87H2[10;42H[?25h[?25l[34mE[m[30m[47m[35;87H3[10;43H[?25h[?25l[34mN[m[30m[47m[35;87H4[10;44H[?25h[?25l[34mT[m[30m[47m[35;87H5[10;45H[?25h[?25l[34mS[m[30m[47m[35;87H6[10;46H[?25h[?25l[34m [m[30m[47m[35;87H7[10;47H[?25h[?25l[34mA[m[30m[47m[35;87H8[10;48H[?25h[?25l[34mR[m[30m[47m[35;87H9[10;49H[?25h[?25l[34mE[m[30m[47m[35;86H50[10;50H[?25h[?25l[34m [m[30m[47m[35;87H1[10;51H[?25h[?25l[34mW[m[30m[47m[35;87H2[10;52H[?25h[?25l[34mI[m[30m[47m[35;87H3[10;53H[?25h[?25l[34mT[m[30m[47m[35;87H4[10;54H[?25h[?25l[34mH[m[30m[47m[35;87H5[10;55H[?25h[?25l[34m [m[30m[47m[35;87H6[10;56H[?25h[?25l[34mD[m[30m[47m[35;87H7[10;57H[?25h[?25l[34mO[m[30m[47m[35;87H8[10;58H[?25h[?25l[34mU[m[30m[47m[35;87H9[10;59H[?25h[?25l[34mB[m[30m[47m[35;86H60[10;60H[?25h[?25l[34mL[m[30m[47m[35;87H1[10;61H[?25h[?25l[34mE[m[30m[47m[35;87H2[10;62H[?25h[?25l[34m [m[30m[47m[35;87H3[10;63H[?25h[?25l[34mQ[m[30m[47m[35;87H4[10;64H[?25h[?25l[34mU[m[30m[47m[35;87H5[10;65H[?25h[?25l[34mO[m[30m[47m[35;87H6[10;66H[?25h[?25l[34mT[m[30m[47m[35;87H7[10;67H[?25h[?25l[34mE[m[30m[47m[35;87H8[10;68H[?25h[?25l[34mS[m[30m[47m[35;87H9[10;69H[?25h[?25l[34m [m[30m[47m[35;86H70[10;70H[?25h[?25l[34m([m[30m[47m[35;87H1[10;71H[?25h[?25l[31m"[m[30m[47m[35;87H2[10;72H[?25h[?25l[31m [m[30m[47m[35;87H3[10;73H[?25h[?25l[31m"[m[30m[47m[35;87H4[10;74H[?25h[?25l[34m)[m[30m[47m[34m[46m([3C)[m[30m[47m[35;87H5[10;75H[?25h[?25l[34m ([3C)[m[30m[47m[35;87H6[10;76H[?25h[?25l[34mR[m[30m[47m[35;87H7[10;77H[?25h[?25l[34mA[m[30m[47m[35;87H8[10;78H[?25h[?25l[34mT[m[30m[47m[35;87H9[10;79H[?25h[?25l[34mH[m[30m[47m[35;86H80[10;80H[?25h[?25l[34mE[m[30m[47m[35;87H1[10;81H[?25h[?25l[34mR[m[30m[47m[35;87H2[10;82H[?25h[?25l[34m [m[30m[47m[35;87H3[10;83H[?25h[?25l[34mT[m[30m[47m[35;87H4[10;84H[?25h[?25l[34mH[m[30m[47m[35;87H5[10;85H[?25h[?25l[10;84H[K[35;87H4[10;84H[?25h[?25l[10;83H[K[35;87H3[10;83H[?25h[?25l[10;82H[K[35;87H2[10;82H[?25h[?25l[10;81H[K[35;87H1[10;81H[?25h[?25l[10;80H[K[35;87H0[10;80H[?25h[?25l[10;79H[K[35;86H79[10;79H[?25h[?25l[10;78H[K[35;87H8[10;78H[?25h[?25l[10;77H[K[35;87H7[10;77H[?25h[?25l[10;76H[K[35;87H6[10;76H[?25h[?25l[34mN[m[30m[47m[35;87H7[10;77H[?25h[?25l[34mO[m[30m[47m[35;87H8[10;78H[?25h[?25l[34mT[m[30m[47m[35;87H9[10;79H[?25h[?25l[34m [m[30m[47m[35;86H80[10;80H[?25h[?25l[34mS[m[30m[47m[35;87H1[10;81H[?25h[?25l[34mI[m[30m[47m[35;87H2[10;82H[?25h[?25l[34mN[m[30m[47m[35;87H3[10;83H[?25h[?25l[34mG[m[30m[47m[35;87H4[10;84H[?25h[?25l[34mL[m[30m[47m[35;87H5[10;85H[?25h[?25l[34mE[m[30m[47m[35;87H6[10;86H[?25h[?25l[34m [m[30m[47m[35;87H7[10;87H[?25h[?25l[34m([m[30m[47m[35;87H8[10;88H[?25h[?25l[31m"[m[30m[47m[35;87H9[10;89H[?25h[?25l[10;88H[K[35;87H8[10;88H[?25h[?25l[34m][m[30m[47m[35;87H9[10;89H[?25h[?25l[10;88H[K[35;87H8[10;88H[?25h[?25l[34m'[m[30m[47m[35;87H9[10;89H[?25h[?25l[34m [m[30m[47m[35;86H90[10;90H[?25h[?25l[31m' '[m[30m[47m[35;87H1[10;91H[?25h[?25l[34m)[m[30m[47m[34m[46m([3C)[m[30m[47m[35;87H2[10;92H[?25h[35;1H[K[10;91H[?25l[35;73H^[[10;91H[35;73H  [10;92H[35;83H10,91[9CTop[10;91H[?25h[?25l[35;73H:[10;91H[35;73H[K[35;1H:[?2004h[?25hX[?25l[?25h[?25l[35;1H[K[35;1HEnter encryption key:[?2004h [?25h
[?25lEnter same key again:[?2004h [?25h
[?25l[10;91H[1;1H[2L[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m[35;1H[K[35;83H10,91[9CTop[10;91H[?25h[?25l[35;73H^[[10;91H[35;73H  [10;91H[35;73H^[[10;91H[35;73H  [10;91H[?25h[?25l[35;73H:[10;91H[35;73H[K[35;1H:[?2004h[?25hX[?25l[?25h[?25l[35;2H[K[35;2H[?25hx[?25l[?25h[?25l[?1000l[?2004l"balanced.cc" 95L, 2017C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote03:~/i240b/submit/lab11$ 
amchugh2@remote03:~/i240b/submit/lab11$ 
amchugh2@remote03:~/i240b/submit/lab11$ 
amchugh2@remote03:~/i240b/submit/lab11$ m[K.[Kgit commit -a -m "working lab11"[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvim README[K[K[K[K[K[K[K[K[K[Ktouch README
amchugh2@remote03:~/i240b/submit/lab11$ ls README
README
amchugh2@remote03:~/i240b/submit/lab11$ vim README
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"README" 0L, 0C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                                   [3;1H~                                                                                                   [4;1H~                                                                                                   [5;1H~                                                                                                   [6;1H~                                                                                                   [7;1H~                                                                                                   [8;1H~                                                                                                   [9;1H~                                                                                                   [10;1H~                                                                                                   [11;1H~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [m[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;1H[K[35;1H:[?2004h[?25h [?25l[1;1H[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;73H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[1;1H[27m[23m[29m[m[30m[47m[H[2J[2;1H[1m[34m~                                                                                                   [3;1H~                                                                                                   [4;1H~                                                                                                   [5;1H~                                                                                                   [6;1H~                                                                                                   [7;1H~                                                                                                   [8;1H~                                                                                                   [9;1H~                                                                                                   [10;1H~                                                                                                   [11;1H~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [m[30m[47m[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[35;1H[K[35;1H[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote03:~/i240b/submit/lab11$ rm r[KREADME
amchugh2@remote03:~/i240b/submit/lab11$ rm[K[Ktouch please_read_befpre_[K[K[K[Kore_running.txt
amchugh2@remote03:~/i240b/submit/lab11$ vim [K[K[K[Ktouch please_read_before_running.txt[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Krm[K[Kvim[K[K[Krm README[1@vi[C[C[C[C[C[C[C[C[1Pr[C[C[C[C[C[C[C[C[Kvim please_read_before_running.txt
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"please_read_before_running.txt" 0L, 0C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                                   [3;1H~                                                                                                   [4;1H~                                                                                                   [5;1H~                                                                                                   [6;1H~                                                                                                   [7;1H~                                                                                                   [8;1H~                                                                                                   [9;1H~                                                                                                   [10;1H~                                                                                                   [11;1H~                                                                                                   [12;1H~                                                                                                   [13;1H~                                                                                                   [14;1H~                                                                                                   [15;1H~                                                                                                   [16;1H~                                                                                                   [17;1H~                                                                                                   [18;1H~                                                                                                   [19;1H~                                                                                                   [20;1H~                                                                                                   [21;1H~                                                                                                   [22;1H~                                                                                                   [23;1H~                                                                                                   [24;1H~                                                                                                   [25;1H~                                                                                                   [26;1H~                                                                                                   [27;1H~                                                                                                   [28;1H~                                                                                                   [29;1H~                                                                                                   [30;1H~                                                                                                   [31;1H~                                                                                                   [32;1H~                                                                                                   [33;1H~                                                                                                   [34;1H~                                                                                                   [m[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;1H[K[35;1H:[?2004h[?25h [?25l[1;1H[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H:[1;1H[35;73H[K[35;1H:[?2004h[?25h [?25l[1;1H[35;83H0,0-1[9CAll[1;1H[?25h[?25l[35;73H~@k[1;1H[35;73H   [1;1H[35;1H[1m-- INSERT --[m[35;83H[K[35;83H0,1[11CAll[1;1H[?25h[?25lT[35;83H1,2[1;2H[?25h[?25li[35;85H3[1;3H[?25h[?25l[1;2H[K[35;85H2[1;2H[?25h[?25lh[35;85H3[1;3H[?25h[?25li[35;85H4[1;4H[?25h[?25ls[35;85H5[1;5H[?25h[?25l[35;85H6[1;6H[?25h[?25lp[35;85H7[1;7H[?25h[?25lr[35;85H8[1;8H[?25h[?25lo[35;85H9[1;9H[?25h[?25lg[35;85H10[1;10H[?25h[?25lr[35;86H1[1;11H[?25h[?25la[35;86H2[1;12H[?25h[?25lm[35;86H3[1;13H[?25h[?25l[35;86H4[1;14H[?25h[?25lo[35;86H5[1;15H[?25h[?25ln[35;86H6[1;16H[?25h[?25ly[35;86H7[1;17H[?25h[?25l[35;86H8[1;18H[?25h[?25lw[35;86H9[1;19H[?25h[?25lo[35;85H20[1;20H[?25h[?25l[1;19H[K[35;85H19[1;19H[?25h[?25l[1;18H[K[35;86H8[1;18H[?25h[?25l[35;86H7[1;17H[?25h[?25l[1;16H[K[35;86H6[1;16H[?25h[?25ll[35;86H7[1;17H[?25h[?25ly[35;86H8[1;18H[?25h[?25l[35;86H9[1;19H[?25h[?25lw[35;85H20[1;20H[?25h[?25lo[35;86H1[1;21H[?25h[?25lr[35;86H2[1;22H[?25h[?25lk[35;86H3[1;23H[?25h[?25ls[35;86H4[1;24H[?25h[?25l[35;86H5[1;25H[?25h[?25lw[35;86H6[1;26H[?25h[?25lh[35;86H7[1;27H[?25h[?25le[35;86H8[1;28H[?25h[?25ln[35;86H9[1;29H[?25h[?25l[35;85H30[1;30H[?25h[?25lar[35;86H2[1;32H[?25h[?25lg[35;86H3[1;33H[?25h[?25lu[35;86H4[1;34H[?25h[?25lm[35;86H5[1;35H[?25h[?25le[35;86H6[1;36H[?25h[?25ln[35;86H7[1;37H[?25h[?25lt[35;86H8[1;38H[?25h[?25ls[35;86H9[1;39H[?25h[?25l[35;85H40[1;40H[?25h[?25luse[35;86H4[1;44H[?25h[?25lq[35;86H5[1;45H[?25h[?25l[1;44H[K[35;86H4[1;44H[?25h[?25ld[35;86H5[1;45H[?25h[?25lo[35;86H6[1;46H[?25h[?25lu[35;86H7[1;47H[?25h[?25lb[35;86H8[1;48H[?25h[?25ll[35;86H9[1;49H[?25h[?25le[35;85H50[1;50H[?25h[?25l[35;86H1[1;51H[?25h[?25lq[35;86H2[1;52H[?25h[?25lu[35;86H3[1;53H[?25h[?25lo[35;86H4[1;54H[?25h[?25lt[35;86H5[1;55H[?25h[?25les[35;86H7[1;57H[?25h[?25l.[35;86H8[1;58H[?25h[?25l[35;86H9[1;59H[?25h[?25l[35;86H8[1;58H[?25h[?25l[1;57H[K[35;86H7[1;57H[?25h[?25l:[35;86H8[1;58H[?25h[?25l[35;86H9[1;59H[?25h[?25li[35;85H60[1;60H[?25h[?25l,[35;86H1[1;61H[?25h[?25l[35;86H2[1;62H[?25h[?25le[35;86H3[1;63H[?25h[?25l[1;62H[K[35;86H2[1;62H[?25h[?25l[35;86H1[1;61H[?25h[?25l[1;60H[K[35;86H0[1;60H[?25h[?25l.[35;86H1[1;61H[?25h[?25le[35;86H2[1;62H[?25h[?25l.[35;86H3[1;63H[?25h[?25l[35;86H4[1;64H[?25h[?25l[2;1H[K[35;83H2,1 [2;1H[?25h[?25l"[35;85H2[2;2H[?25h[?25l[35;85H3[2;3H[?25h[?25l[[35;85H4[2;4H[?25h[?25l[2;3H[K[35;85H3[2;3H[?25h[?25l[35;85H2[2;2H[?25h[?25l'[35;85H3[2;3H[?25h[?25l[[35;85H4[2;4H[?25h[?25l'[35;85H5[2;5H[?25h[?25l[46m[[m'[46m][m[35;85H6[2;6H[?25h[?25l[[2;5H[K[35;85H5[2;5H[?25h[?25l'[35;85H6[2;6H[?25h[?25l[46m[[m''[46m][m[35;85H7[2;7H[?25h[?25l"'['']'[35;85H8[2;8H[?25h[?25l"[35;85H9[2;9H[?25h[?25l[3;1H[K[35;83H3,1[3;1H[?25h[?25l[4;1H[K[35;83H4[4;1H[?25h[?25ln[35;85H2[4;2H[?25h[?25lo[35;85H3[4;3H[?25h[?25lt[35;85H4[4;4H[?25h[?25l[4;3H[K[35;85H3[4;3H[?25h[?25lN[?25h[?25lO[35;85H4[4;4H[?25h[?25lT[35;85H5[4;5H[?25h[?25l[4;4H[K[35;85H4[4;4H[?25h[?25l[4;3H[K[35;85H3[4;3H[?25h[?25l[4;2H[K[35;85H2[4;2H[?25h[?25l[4;1H[K[35;85H1[4;1H[?25h[?25lN[35;85H2[4;2H[?25h[?25lO[35;85H3[4;3H[?25h[?25lT[35;85H4[4;4H[?25h[?25l[5;1H[K[35;83H5,1[5;1H[?25h[?25l[6;1H[K[35;83H6[6;1H[?25h[?25l'[35;85H2[6;2H[?25h[?25l[[35;85H3[6;3H[?25h[?25l'[35;85H4[6;4H[?25h[?25l[46m[[m'[46m][m[35;85H5[6;5H[?25h[?25l'[']'[35;85H6[6;6H[?25h[?25l[7;1H[K[35;83H7,1[7;1H[?25h[?25l[8;1H[K[35;83H8[8;1H[?25h[?25lI[35;85H2[8;2H[?25h[?25l[35;85H3[8;3H[?25h[?25ls[35;85H4[8;4H[?25h[?25lp[35;85H5[8;5H[?25h[?25le[35;85H6[8;6H[?25h[?25ln[35;85H7[8;7H[?25h[?25lt[35;85H8[8;8H[?25h[?25l[35;85H9[8;9H[?25h[?25la[35;85H10[8;10H[?25h[?25l[35;86H1[8;11H[?25h[?25lf[35;86H2[8;12H[?25h[?25le[35;86H3[8;13H[?25h[?25lw[35;86H4[8;14H[?25h[?25l[35;86H5[8;15H[?25h[?25lh[35;86H6[8;16H[?25h[?25lo[35;86H7[8;17H[?25h[?25lu[35;86H8[8;18H[?25h[?25lr[35;86H9[8;19H[?25h[?25ls[35;85H20[8;20H[?25h[?25l[35;86H1[8;21H[?25h[?25lo[35;86H2[8;22H[?25h[?25ln[35;86H3[8;23H[?25h[?25l[35;86H4[8;24H[?25h[?25lt[35;86H5[8;25H[?25h[?25lh[35;86H6[8;26H[?25h[?25li[35;86H7[8;27H[?25h[?25ls[35;86H8[8;28H[?25h[?25l[35;86H9[8;29H[?25h[?25ls[35;85H30[8;30H[?25h[?25lo[35;86H1[8;31H[?25h[?25l[35;86H2[8;32H[?25h[?25l[35;86H1[8;31H[?25h[?25l[8;30H[K[35;86H0[8;30H[?25h[?25l[8;29H[K[35;85H29[8;29H[?25h[?25la[35;85H30[8;30H[?25h[?25ln[35;86H1[8;31H[?25h[?25ld[35;86H2[8;32H[?25h[?25l[35;86H3[8;33H[?25h[?25lw[35;86H4[8;34H[?25h[?25lo[35;86H5[8;35H[?25h[?25lu[35;86H6[8;36H[?25h[?25ll[35;86H7[8;37H[?25h[?25ld[35;86H8[8;38H[?25h[?25l[35;86H9[8;39H[?25h[?25l[35;86H8[8;38H[?25h[?25l[8;37H[K[35;86H7[8;37H[?25h[?25l[8;36H[K[35;86H6[8;36H[?25h[?25l[8;35H[K[35;86H5[8;35H[?25h[?25l[8;34H[K[35;86H4[8;34H[?25h[?25l[8;33H[K[35;86H3[8;33H[?25h[?25lc[35;86H4[8;34H[?25h[?25la[35;86H5[8;35H[?25h[?25ln[35;86H6[8;36H[?25h[?25l'[35;86H7[8;37H[?25h[?25lt[35;86H8[8;38H[?25h[?25l[35;86H9[8;39H[?25h[?25ld[35;85H40[8;40H[?25h[?25lr[35;86H1[8;41H[?25h[?25lo[35;86H2[8;42H[?25h[?25lp[35;86H3[8;43H[?25h[?25l[35;86H4[8;44H[?25h[?25la[35;86H5[8;45H[?25h[?25ln[35;86H6[8;46H[?25h[?25lo[35;86H7[8;47H[?25h[?25lt[35;86H8[8;48H[?25h[?25lh[35;86H9[8;49H[?25h[?25le[35;85H50[8;50H[?25h[?25lr[35;86H1[8;51H[?25h[?25l[35;86H2[8;52H[?25h[?25ll[35;86H3[8;53H[?25h[?25la[35;86H4[8;54H[?25h[?25ln[35;86H5[8;55H[?25h[?25l[35;86H6[8;56H[?25h[?25ls[35;86H7[8;57H[?25h[?25l[8;56H[K[35;86H6[8;56H[?25h[?25l[35;86H5[8;55H[?25h[?25l[8;54H[K[35;86H4[8;54H[?25h[?25lb[35;86H5[8;55H[?25h[?25l[35;86H6[8;56H[?25h[?25ls[35;86H7[8;57H[?25h[?25lo[35;86H8[8;58H[?25h[?25l[35;86H9[8;59H[?25h[?25lI[35;85H60[8;60H[?25h[?25l[35;86H1[8;61H[?25h[?25lh[35;86H2[8;62H[?25h[?25lo[35;86H3[8;63H[?25h[?25lp[35;86H4[8;64H[?25h[?25le[35;86H5[8;65H[?25h[?25l[35;86H6[8;66H[?25h[?25lt[35;86H7[8;67H[?25h[?25lh[35;86H8[8;68H[?25h[?25li[35;86H9[8;69H[?25h[?25ls[35;85H70[8;70H[?25h[?25l[35;86H1[8;71H[?25h[?25lh[35;86H2[8;72H[?25h[?25le[35;86H3[8;73H[?25h[?25ll[35;86H4[8;74H[?25h[?25lp[35;86H5[8;75H[?25h[?25ls[35;86H6[8;76H[?25h[?25l[35;86H7[8;77H[?25h[?25ly[35;86H8[8;78H[?25h[?25lou run t[35;85H86[8;86H[?25h[?25lh[35;86H7[8;87H[?25h[?25le[35;86H8[8;88H[?25h[?25l[35;86H9[8;89H[?25h[?25lt[35;85H90[8;90H[?25h[?25le[35;86H1[8;91H[?25h[?25lt[35;86H2[8;92H[?25h[?25ls[35;86H3[8;93H[?25h[?25l[8;92H[K[35;86H2[8;92H[?25h[?25l[8;91H[K[35;86H1[8;91H[?25h[?25ls[35;86H2[8;92H[?25h[?25lt[35;86H3[8;93H[?25h[?25ls[9;1H[K[35;83H9,1 [9;1H[?25h[?25lo[35;85H2[9;2H[?25h[?25ln[35;85H3[9;3H[?25h[?25l[35;85H4[9;4H[?25h[?25lt[35;85H5[9;5H[?25h[?25li[35;85H6[9;6H[?25h[?25lm[35;85H7[9;7H[?25h[?25le[35;85H8[9;8H[?25h[?25l![35;85H9[9;9H[?25h[?25l[9;8H[K[35;85H8[9;8H[?25h[?25l[9;7H[K[35;85H7[9;7H[?25h[?25l[9;6H[K[35;85H6[9;6H[?25h[?25l[9;5H[K[35;85H5[9;5H[?25h[?25l[9;4H[K[35;85H4[9;4H[?25h[?25lm[35;85H5[9;5H[?25h[?25li[35;85H6[9;6H[?25h[?25ln[35;85H7[9;7H[?25h[?25le[35;85H8[9;8H[?25h[?25l.[35;85H9[9;9H[?25h[?25l[35;85H10[9;10H[?25h[?25lT[35;86H1[9;11H[?25h[?25lh[35;86H2[9;12H[?25h[?25la[35;86H3[9;13H[?25h[?25ln[35;86H4[9;14H[?25h[?25lk[35;86H5[9;15H[?25h[?25ls[35;86H6[9;16H[?25h[?25l![35;86H7[9;17H[?25h[?25l[10;1H[K[35;83H10,1[10;1H[?25h[?25l[11;1H[K[35;84H1[11;1H[?25h[?25lA[35;86H2[11;2H[?25h[?25lb[35;86H3[11;3H[?25h[?25lb[35;86H4[11;4H[?25h[?25ly[35;86H5[11;5H[?25h[35;1H[K[11;4H[?25l[35;73H^[[11;4H[35;73H  [11;5H[35;83H11,4[10CAll[11;4H[?25h[?25l[35;73H:[11;4H[35;73H[K[35;1H:[?2004h[?25hx[?25l[?25h[?25l[?1000l[?2004l"please_read_before_running.txt" 11L, 203C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tamchugh2@remote03:~/i240b/submit/lab11$ 
amchugh2@remote03:~/i240b/submit/lab11$ 
amchugh2@remote03:~/i240b/submit/lab11$ 
amchugh2@remote03:~/i240b/submit/lab11$ vim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;35r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[35;1H"balanced.cc" 95L, 2017C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stddef.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stack>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<cstring>[m
[35m#include [m[31m<iostream>[m

[34m// NOTE: THIS PROGRAM ONLY WORKS IF ARGUMENTS ARE WITH DOUBLE QUOTES ([m[31m" "[m[34m) NOT SINGLE [m[34m[46m([m[31m' '[m[34m[46m)[m
[33musing[m [32mnamespace[m std;

string concatenate(string &input){[14;9H[32mchar[m bad[] = [31m" , '"[m;[15;9H[33mfor[m([32munsigned[m [32mint[m i = [31m0[m; i < strlen(bad); ++i){[16;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[17;17H}[18;9H[33mreturn[m input;
}

[32mbool[m is_delimiter(string &input){[22;9H[34m//char good[] = [m[31m"(,),[,],{,},<,>"[m[34m;[m[23;9H[32msize_t[m found = input.find_first_not_of([31m"()[]{}<>"[m);[24;9H[33mif[m(found != string::npos){[25;17Hcout << [31m"invalid delmiter"[m << endl;[26;17H[33mreturn[m [31mfalse[m;[27;9H}[28;9H[33melse[m{[29;17H[33mreturn[m [31mtrue[m;[30;9H}
}

[32mbool[m is_balanced(string expr) {
    stack<[32mchar[m> s;[35;83H10,91[9CTop[10;91H[?25h[?25l[35;1H[K[35;1H:[?2004h[?25hc[?25l[?25ho[?25l[?25hl[?25l[?25ho[?25l[?25h[?25l [?25hm[?25l[?25ho[?25l[?25hr[?25l[?25hn[?25l[?25hi[?25l[?25hn[?25l[?25hg[?25l[?25h[?25l[30m[47m[27m[23m[29m[m[30m[47m[H[2J[1;1H[35m#include [m[30m[47m[31m<stddef.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdlib.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stdio.h>[m[30m[47m
[35m#include [m[30m[47m[31m<stack>[m[30m[47m
[35m#include [m[30m[47m[31m<algorithm>[m[30m[47m
[35m#include [m[30m[47m[31m<string>[m[30m[47m
[35m#include [m[30m[47m[31m<cstring>[m[30m[47m
[35m#include [m[30m[47m[31m<iostream>[m[30m[47m

[34m// NOTE: THIS PROGRAM ONLY WORKS IF ARGUMENTS ARE WITH DOUBLE QUOTES ([m[30m[47m[31m" "[m[30m[47m[34m) NOT SINGLE [m[30m[47m[34m[46m([m[30m[47m[31m' '[m[30m[47m[34m[46m)[m[30m[47m
[33musing[m[30m[47m [32mnamespace[m[30m[47m std;

string concatenate(string &input){[14;9H[32mchar[m[30m[47m bad[] = [31m" , '"[m[30m[47m;[15;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[16;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[17;17H}[18;9H[33mreturn[m[30m[47m input;
}

[32mbool[m[30m[47m is_delimiter(string &input){[22;9H[34m//char good[] = [m[30m[47m[31m"(,),[,],{,},<,>"[m[30m[47m[34m;[m[30m[47m[23;9H[32msize_t[m[30m[47m found = input.find_first_not_of([31m"()[]{}<>"[m[30m[47m);[24;9H[33mif[m[30m[47m(found != string::npos){[25;17Hcout << [31m"invalid delmiter"[m[30m[47m << endl;[26;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[27;9H}[28;9H[33melse[m[30m[47m{[29;17H[33mreturn[m[30m[47m [31mtrue[m[30m[47m;[30;9H}
}

[32mbool[m[30m[47m is_balanced(string expr) {
    stack<[32mchar[m[30m[47m> s;[35;83H10,91[9CTop[10;91H[?25h[?25l[35;73H~@k[10;91H[35;73H   [11;20H[10;87H[34m([3C)[m[30m[47m[35;84H1,20[11;20H[?25h[?25l[35;73H~@k[11;20H[35;73H   [12;1H[35;84H2,0-1[12;1H[?25h[?25l[35;73H~@k[12;1H[35;73H   [13;34H[46m{[19;1H}[m[30m[47m[35;84H3,34 [13;34H[?25h[?25l[35;73H~@k[13;34H[35;73H   [14;28H[13;34H{[19;1H}[35;84H4,21-28[14;28H[?25h[?25l[35;73H~@k[14;28H[35;73H   [15;54H[46m{[17;17H}[m[30m[47m[35;84H5,47-54[15;54H[?25h[?25l[35;73H~@k[15;54H[35;73H   [16;86H[15;54H{[17;17H}[35;84H6,72-86[16;86H[?25h[?25l[35;73H~@k[16;86H[35;73H   [17;17H[15;54H[46m{[17;17H}[m[30m[47m[35;84H7,3-17 [17;17H[?25h[?25l[35;73H~@k[17;17H[35;73H   [18;21H[15;54H{[17;17H}[35;84H8,14-21[18;21H[?25h[?25l[35;73H~@k[18;21H[35;73H   [19;1H[13;34H[46m{[19;1H}[m[30m[47m[35;84H9,1    [19;1H[?25h[?25l[35;73H~@k[19;1H[35;73H   [20;1H[13;34H{[19;1H}[35;83H20,0-1[20;1H[?25h[?25l[35;73H~@k[20;1H[35;73H   [21;33H[46m{[31;1H}[m[30m[47m[35;84H1,33 [21;33H[?25h[?25l[35;73H~@k[21;33H[35;73H   [22;42H[21;33H{[31;1H}[35;84H2,35-42[22;42H[?25h[?25l[35;73H~@k[22;42H[35;73H   [23;59H[35;84H3,52-59[23;59H[?25h[?25l[35;73H~@k[23;59H[35;73H   [24;34H[46m{[27;9H}[m[30m[47m[35;84H4,27-34[24;34H[?25h[?25l[35;73H~@k[24;34H[35;73H   [25;51H[24;34H{[27;9H}[35;84H5,37-51[25;51H[?25h[?25l[35;73H~@k[25;51H[35;73H   [26;29H[35;84H6,15-29[26;29H[?25h[?25l[35;73H~@k[26;29H[35;73H   [27;9H[24;34H[46m{[27;9H}[m[30m[47m[35;84H7,2-9  [27;9H[?25h[?25l[35;73H~@k[27;9H[35;73H   [28;13H[24;34H{[27;9H}[28;13H[46m{[30;9H}[m[30m[47m[35;84H8,6-13[28;13H[?25h[?25l[35;73H~@k[28;13H[35;73H   [29;28H[28;13H{[30;9H}[35;84H9,14-28[29;28H[?25h[?25l[35;73H~@k[29;28H[35;73H   [29;9H[1;34r[34;1H
[1;35r[27;13H[46m{[29;9H}[m[30m[47m[34;5H[32mchar[m[30m[47m ch;[35;83H[K[35;83H30,2-9[9C1%[29;9H[?25h[?25l[35;73H~@k[29;9H[35;73H   [29;1H[1;34r[34;1H
[1;35r[19;33H[46m{[m[30m[47m[26;13H{[28;9H}
[46m}[m[30m[47m[35;83H[K[35;83H31,1[11C3%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[18;33H{[28;1H}[34;5H[33mfor[m[30m[47m ([32mint[m[30m[47m i=[31m0[m[30m[47m; i<expr.length(); i++){[35;83H[K[35;83H32,0-1[9C4%[29;1H[?25h[?25l[35;73H~@k[29;1H[35;73H   [29;32H[1;34r[34;1H
[1;35r[34;9H[33mif[m[30m[47m (expr[i]==[31m'('[m[30m[47m||expr[i]==[31m'['[m[30m[47m||expr[i]==[31m'{'[m[30m[47m || expr[i] == [31m'<'[m[30m[47m){[35;83H[K[35;83H33,32[10C6%[29;32H[?25h[?25l[35;73H~@k[29;32H[35;73H   [29;19H[1;34r[34;1H
[1;35r[34;13Hs.push(expr[i]);[35;83H[K[35;83H34,19[10C8%[29;19H[?25h[?25l[35;73H~@k[29;19H[35;73H   [29;13H[1;34r[34;1H
[1;35r[34;13H[33mcontinue[m[30m[47m;[35;83H[K[35;83H35,13[10C9%[29;13H[?25h[?25l[35;73H~@k[29;13H[35;73H   [29;2H[1;34r[34;1H
[1;35r[34;9H}[35;83H[K[35;83H36,2[10C11%[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [29;40H[1;34r[34;1H
[1;35r[35;83H[K[35;83H37,40[9C13%[29;40H[?25h[?25l[35;73H~@k[29;40H[35;73H   [29;72H[1;34r[34;1H
[1;35r[29;72H[46m{[32;9H}[m[30m[47m[34;9H[33mif[m[30m[47m (s.empty())[35;83H[K[35;83H38,72[9C14%[29;72H[?25h[?25l[35;73H~@k[29;72H[35;73H   [29;29H[1;34r[34;1H
[1;35r[28;72H{[31;9H}[34;12H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H39,29[9C16%[29;29H[?25h[?25l[35;73H~@k[29;29H[35;73H   [29;22H[1;34r[34;1H
[1;35r[35;83H[K[35;83H40,22[9C18%[29;22H[?25h[?25l[35;73H~@k[29;22H[35;73H   [29;10H[1;34r[34;1H
[1;35r[34;9H[33mswitch[m[30m[47m (expr[i]){[35;83H[K[35;83H41,10[9C19%[29;10H[?25h[?25l[35;73H~@k[29;10H[35;73H   [29;1H[1;34r[34;1H
[1;35r[34;9H[33mcase[m[30m[47m [31m')'[m[30m[47m:[35;83H[K[35;83H42,0-1[8C21%[29;1H[?25h[?25l[1;34r[34;1H
[1;35r[29;12H[46m([9C)[m[30m[47m[34;13Hch = s.top();[35;83H[K[35;83H43,22[9C22%[29;22H[?25h[?25l[35;73H~@k[29;22H[35;73H   [29;25H[1;34r[34;1H
[1;35r[28;12H([9C)[34;13Hs.pop();[35;83H[K[35;83H44,25[9C24%[29;25H[?25h[?25l[35;73H~@k[29;25H[35;73H   [29;2H[1;34r[34;1H
[1;35r[34;13H[33mif[m[30m[47m (ch==[31m'{'[m[30m[47m || ch==[31m'['[m[30m[47m || ch == [31m'<'[m[30m[47m)[35;83H[K[35;83H45,2[10C26%[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [29;26H[1;34r[34;1H
[1;35r[34;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H46,26[9C27%[29;26H[?25h[?25l[1;34r[34;1H
[1;35r[34;13H[33mbreak[m[30m[47m;[35;83H[K[35;83H47,10-17      29%[29;17H[?25h[?25l[35;73H~@k[29;17H[35;73H   [29;26H[1;34r[34;1H
[1;35r[35;83H[K[35;83H48,26[9C31%[29;26H[?25h[?25l[35;73H~@k[29;26H[35;73H   [29;21H[1;34r[34;1H
[1;35r[34;9H[33mcase[m[30m[47m [31m'}'[m[30m[47m:[35;83H[K[35;83H49,21[9C32%[29;21H[?25h[?25l[35;73H~@k[29;21H[35;73H   [29;49H[1;34r[34;1H
[1;35r[34;13Hch = s.top();[35;83H[K[35;83H50,49[9C34%[29;49H[?25h[?25l[35;73H~@k[29;49H[35;73H   [29;30H[1;34r[34;1H
[1;35r[34;13Hs.pop();[35;83H[K[35;83H51,30[9C36%[29;30H[?25h[?25l[35;73H~@k[29;30H[35;73H   [29;19H[1;34r[34;1H
[1;35r[34;13H[33mif[m[30m[47m (ch==[31m'('[m[30m[47m || ch==[31m'['[m[30m[47m || ch == [31m'<'[m[30m[47m)[35;83H[K[35;83H52,19[9C37%[29;19H[?25h[?25l[35;73H~@k[29;19H[35;73H   [29;2H[1;34r[34;1H
[1;35r[34;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H53,2[10C39%[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [29;18H[1;34r[34;1H
[1;35r[34;13H[33mbreak[m[30m[47m;[35;83H[K[35;83H54,18[9C40%[29;18H[?25h[?25l[35;73H~@k[29;18H[35;73H   [29;26H[1;34r[34;1H
[1;35r[35;83H[K[35;83H55,26[9C42%[29;26H[?25h[?25l[35;73H~@k[29;26H[35;73H   [29;21H[1;34r[34;1H
[1;35r[34;9H[33mcase[m[30m[47m [31m'>'[m[30m[47m:[35;83H[K[35;83H56,21[9C44%[29;21H[?25h[?25l[35;73H~@k[29;21H[35;73H   [29;49H[1;34r[34;1H
[1;35r[34;13Hch = s.top();[35;83H[K[35;83H57,49[9C45%[29;49H[?25h[?25l[35;73H~@k[29;49H[35;73H   [29;30H[1;34r[34;1H
[1;35r[34;13Hs.pop();[35;83H[K[35;83H58,30[9C47%[29;30H[?25h[?25l[35;73H~@k[29;30H[35;73H   [29;19H[1;34r[34;1H
[1;35r[34;13H[33mif[m[30m[47m(ch == [31m'('[m[30m[47m || ch == [31m'['[m[30m[47m || ch == [31m'{'[m[30m[47m)[35;83H[K[35;83H59,19[9C49%[29;19H[?25h[?25l[35;73H~@k[29;19H[35;73H   [29;8H[1;34r[34;1H
[1;35r[34;21H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H60,1-8[8C50%[29;8H[?25h[?25l[35;73H~@k[29;8H[35;73H   [29;17H[1;34r[34;1H
[1;35r[34;13H[33mbreak[m[30m[47m;[35;83H[K[35;83H61,10-17      52%[29;17H[?25h[?25l[35;73H~@k[29;17H[35;73H   [29;25H[1;34r[34;1H
[1;35r[35;83H[K[35;83H62,18-25      54%[29;25H[?25h[?25l[35;73H~@k[29;25H[35;73H   [29;20H[1;34r[34;1H
[1;35r[34;9H[33mcase[m[30m[47m [31m']'[m[30m[47m:[35;83H[K[35;83H63,13-20      55%[29;20H[?25h[?25l[35;73H~@k[29;20H[35;73H   [29;51H[1;34r[34;1H
[1;35r[29;15H[46m([35C)[m[30m[47m[34;13Hch = s.top();[35;83H[K[35;83H64,44-51      57%[29;51H[?25h[?25l[1;34r[34;1H
[1;35r[28;15H([35C)[34;13Hs.pop();[35;83H[K[35;83H65,19-33      59%[29;33H[?25h[?25l[35;73H~@k[29;33H[35;73H   [29;18H[1;34r[34;1H
[1;35r[34;13H[33mif[m[30m[47m (ch ==[31m'('[m[30m[47m || ch == [31m'{'[m[30m[47m || ch == [31m'<'[m[30m[47m)[35;83H[K[35;83H66,11-18      60%[29;18H[?25h[?25l[35;73H~@k[29;18H[35;73H   [29;2H[1;34r[34;1H
[1;35r[34;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H67,2[10C62%[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [29;18H[1;34r[34;1H
[1;35r[34;13H[33mbreak[m[30m[47m;[35;83H[K[35;83H68,18[9C63%[29;18H[?25h[?25l[35;73H~@k[29;18H[35;73H   [29;26H[1;34r[34;1H
[1;35r[34;9H}[35;83H[K[35;83H69,26[9C65%[29;26H[?25h[?25l[35;73H~@k[29;26H[35;73H   [29;21H[1;34r[34;1H
[1;35r[34;5H}[35;83H[K[35;83H70,21[9C67%[29;21H[?25h[?25l[35;73H~@k[29;21H[35;73H   [29;52H[1;34r[34;1H
[1;35r[34;5H[33mreturn[m[30m[47m (s.empty());[35;83H[K[35;83H71,52[9C68%[29;52H[?25h[?25l[35;73H~@k[29;52H[35;73H   [29;30H[1;34r[34;1H
[1;35r[34;1H}[35;83H[K[35;83H72,30[9C70%[29;30H[?25h[?25l[35;73H~@k[29;30H[35;73H   [29;18H[1;34r[34;1H
[1;35r[35;83H[K[35;83H73,18[9C72%[29;18H[?25h[?25l[35;73H~@k[29;18H[35;73H   [29;9H[1;34r[34;1H
[1;35r[1;25H[46m{[29;9H}[m[30m[47m[35;83H[K[35;83H74,2-9[8C73%[29;9H[?25h[?25l[1;34r[34;1H
[1;35r[28;9H}[34;1H[34m//string expr = [m[30m[47m[31m"([[]])"[m[30m[47m[34m;[m[30m[47m[35;83H[K[35;83H75,6[10C75%[29;6H[?25h[?25l[35;73H~@k[29;6H[35;73H   [29;24H[1;34r[34;1H
[1;35r[35;83H[K[35;83H76,24[9C77%[29;24H[?25h[?25l[1;34r[34;1H
[1;35r[34;1H[32mint[m[30m[47m main([32mint[m[30m[47m argc, [32mchar[m[30m[47m *argv[]){[35;83H[K[35;83H77,2[10C78%[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [29;2H[1;34r[34;1H
[1;35r[34;9Hstring input = string (argv[[31m1[m[30m[47m]);[35;83H[K[35;83H78,2[10C80%[29;2H[?25h[?25l[35;73H~@k[29;2H[35;73H   [29;1H[1;34r[34;1H
[1;35r[34;9Hstring str = concatenate(input);[35;83H[K[35;83H79,1[10C81%[29;1H[?25h[?25l[35;73H~@k[29;1H[35;73H   [29;25H[1;34r[34;1H
[1;35r[34;9Hcout << str << endl;[35;83H[K[35;83H80,25[9C83%[29;25H[?25h[?25l[1;34r[34;1H
[1;35r[34;9H[33mif[m[30m[47m(is_delimiter(str)){[35;83H[K[35;83H81,0-1[8C85%[29;1H[?25h[?25l[35;73H~@k[29;1H[35;73H   [29;33H[1;34r[34;1H
[1;35r[34;17Hstring expr = str;[35;83H[K[35;83H82,33[9C86%[29;33H[?25h[?25l[35;73H~@k[29;33H[35;73H   [29;40H[1;34r[34;1H
[1;35r[34;17H[33mif[m[30m[47m(is_balanced(expr)){[35;83H[K[35;83H83,33-40      88%[29;40H[?25h[?25l[35;73H~@k[29;40H[35;73H   [29;40H[1;34r[34;1H
[1;35r[34;25H[33mreturn[m[30m[47m [31m0[m[30m[47m;[35;83H[K[35;83H84,33-40      90%[29;40H[?25h[?25l[35;73H~@k[29;40H[35;73H   [29;28H[1;34r[34;1H
[1;35r[34;17H}[35;83H[K[35;83H85,21-28      91%[29;28H[?25h[?25l[35;73H~@k[29;28H[35;73H   [29;30H[1;34r[34;1H
[1;35r[34;17H[33melse[m[30m[47m [33mif[m[30m[47m(!is_balanced(expr)){[35;83H[K[35;83H86,23-30      93%[29;30H[?25h[?25l[35;73H~@k[29;30H[35;73H   [29;34H[1;34r[34;1H
[1;35r[34;25Hcout << [31m"unbalanced"[m[30m[47m << endl;[35;83H[K[35;83H87,20-34      95%[29;34H[?25h[?25l[35;73H~@k[29;34H[35;73H   [29;38H[1;34r[34;1H
[1;35r[29;38H[46m{[31;17H}[m[30m[47m[34;17H}[35;83H[K[35;83H88,24-38      96%[29;38H[?25h[?25l[35;73H~@k[29;38H[35;73H   [29;33H[1;34r[34;1H
[1;35r[28;38H{[30;17H}[34;9H}[35;83H[K[35;83H89,12-33      98%[29;33H[?25h[?25l[35;73H~@k[29;33H[35;73H   [29;17H[1;34r[34;1H
[1;35r[27;38H[46m{[29;17H}[m[30m[47m[34;1H}[35;83H[K[35;83H90,3-17[7CBot[29;17H[?25h[?25l[35;73H~@k[29;17H[35;73H   [30;44H[27;38H{[29;17H}[30;44H[46m{[32;17H}[m[30m[47m[35;84H1,30-44[30;44H[?25h[?25l[35;73H~@k[30;44H[35;73H   [31;53H[30;44H{[32;17H}[35;84H2,32-53[31;53H[?25h[?25l[35;73H~@k[31;53H[35;73H   [32;17H[30;44H[46m{[32;17H}[m[30m[47m[35;84H3,3-17 [32;17H[?25h[?25l[35;73H~@k[32;17H[35;73H   [33;9H[25;30H[46m{[m[30m[47m[30;44H{[32;17H}[33;9H[46m}[m[30m[47m[35;84H4,2-9 [33;9H[?25h[?25l[35;73H~@k[33;9H[35;73H   [34;1H[21;33H[46m{[m[30m[47m[25;30H{[33;9H}
[46m}[m[30m[47m[35;84H5,1  [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [34;1H[?25h[?25l[35;73H~@k[34;1H[35;73H   [33;9H[21;33H{[25;30H[46m{[33;9H}[m[30m[47m
}[35;84H4,2-9[33;9H[?25h[?25l[35;73H~@k[33;9H[35;73H   [32;17H[25;30H{[30;44H[46m{[32;17H}[m[30m[47m[33;9H}[35;84H3,3-17[32;17H[?25h[?25l[35;73H~@k[32;17H[35;73H   [31;53H[30;44H{[32;17H}[35;84H2,32-53[31;53H[?25h[?25l[35;73H~@k[31;53H[35;73H   [30;44H[46m{[32;17H}[m[30m[47m[35;84H1,30-44[30;44H[?25h[?25l[35;73H~@k[30;44H[35;73H   [29;17H[27;38H[46m{[29;17H}[m[30m[47m[30;44H{[32;17H}[35;84H0,3-17 [29;17H[?25h[?25l[35;73H~@k[29;17H[35;73H   [28;33H[27;38H{[29;17H}[35;83H89,12-33[28;33H[?25h[?25l[35;73H~@k[28;33H[35;73H   [27;38H[46m{[29;17H}[m[30m[47m[35;84H8,24-38[27;38H[?25h[?25l[35;73H~@k[27;38H[35;73H   [26;34H[27;38H{[29;17H}[35;84H7,20-34[26;34H[?25h[?25l[35;73H~@k[26;34H[35;73H   [25;30H[46m{[33;9H}[m[30m[47m[35;84H6,23-30[25;30H[?25h[?25l[35;73H~@k[25;30H[35;73H   [24;28H[25;30H{[33;9H}[35;84H5,21-28[24;28H[?25h[?25l[35;73H~@k[24;28H[35;73H   [23;40H[35;84H4,33-40[23;40H[?25h[?25l[35;73H~@k[23;40H[35;73H   [22;40H[35;84H3[22;40H[?25h[?25l[35;73H~@k[22;40H[35;73H   [21;33H[46m{[34;1H}[m[30m[47m[35;84H2,33   [21;33H[?25h[?25l[35;73H~@k[21;33H[35;73H   [20;1H[21;33H{[34;1H}[35;84H1,0-1[20;1H[?25h[?25l[35;73H~@k[20;1H[35;73H   [19;25H[35;84H0,25 [19;25H[?25h[?25l[35;73H~@k[19;25H[35;73H   [18;1H[35;83H79,1 [18;1H[?25h[?25l[35;73H~@k[18;1H[35;73H   [17;2H[35;84H8,2[17;2H[?25h[?25l[35;73H~@k[17;2H[35;73H   [16;2H[35;84H7[16;2H[?25h[?25l[35;73H~@k[16;2H[35;73H   [15;24H[35;84H6,24[15;24H[?25h[?25l[35;73H~@k[15;24H[35;73H   [14;6H[35;84H5,6 [14;6H[?25h[?25l[35;73H~@k[14;6H[35;73H   [13;9H[35;84H4,2-9[13;9H[?25h[?25l[35;73H~@k[13;9H[35;73H   [12;18H[35;84H3,18 [12;18H[?25h[?25l[35;73H~@k[12;18H[35;73H   [11;30H[35;84H2,30[11;30H[?25h[?25l[35;73H~@k[11;30H[35;73H   [10;52H[35;84H1,52[10;52H[?25h[?25l[35;73H~@k[10;52H[35;73H   [9;21H[35;84H0,21[9;21H[?25h[?25l[35;73H~@k[9;21H[35;73H   [8;26H[35;83H69,26[8;26H[?25h[?25l[35;73H~@k[8;26H[35;73H   [7;18H[35;84H8,18[7;18H[?25h[?25l[35;73H~@k[7;18H[35;73H   [6;2H[35;84H7,2 [6;2H[?25h[?25l[35;73H~@k[6;2H[35;73H   [6;18H[1;34r[1;1H[L[1;35r[1;9H[33mcase[m[30m[47m [31m'>'[m[30m[47m:[35;83H[K[35;83H66,11-18      98%[6;18H[?25h[?25l[35;73H~@k[6;18H[35;73H   [6;33H[1;34r[1;1H[L[1;35r[35;83H[K[35;83H65,19-33      96%[6;33H[?25h[?25l[35;73H~@k[6;33H[35;73H   [6;51H[1;34r[1;1H[L[1;35r[1;13H[33mbreak[m[30m[47m;[6;15H[46m([35C)[m[30m[47m[35;83H[K[35;83H64,44-51      95%[6;51H[?25h[?25l[35;73H~@k[6;51H[35;73H   [6;20H[1;34r[1;1H[L[1;35r[1;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[7;15H([35C)[35;83H[K[35;83H63,13-20      93%[6;20H[?25h[?25l[35;73H~@k[6;20H[35;73H   [6;25H[1;34r[1;1H[L[1;35r[1;13H[33mif[m[30m[47m (ch==[31m'('[m[30m[47m || ch==[31m'['[m[30m[47m || ch == [31m'<'[m[30m[47m)[35;83H[K[35;83H62,18-25      91%[6;25H[?25h[?25l[1;34r[1;1H[L[1;35r[1;13Hs.pop();[35;83H[K[35;83H61,10-17      90%[6;17H[?25h[?25l[35;73H~@k[6;17H[35;73H   [6;8H[1;34r[1;1H[L[1;35r[1;13Hch = s.top();[35;83H[K[35;83H60,1-8[8C88%[6;8H[?25h[?25l[35;73H~@k[6;8H[35;73H   [6;19H[1;34r[1;1H[L[1;35r[1;9H[33mcase[m[30m[47m [31m'}'[m[30m[47m:[35;83H[K[35;83H59,19[9C86%[6;19H[?25h[?25l[35;73H~@k[6;19H[35;73H   [6;30H[1;34r[1;1H[L[1;35r[35;83H[K[35;83H58,30[9C85%[6;30H[?25h[?25l[35;73H~@k[6;30H[35;73H   [6;49H[1;34r[1;1H[L[1;35r[1;13H[33mbreak[m[30m[47m;[35;83H[K[35;83H57,49[9C83%[6;49H[?25h[?25l[35;73H~@k[6;49H[35;73H   [6;21H[1;34r[1;1H[L[1;35r[1;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H56,21[9C81%[6;21H[?25h[?25l[1;34r[1;1H[L[1;35r[1;13H[33mif[m[30m[47m (ch==[31m'{'[m[30m[47m || ch==[31m'['[m[30m[47m || ch == [31m'<'[m[30m[47m)[35;83H[K[35;83H55,26[9C80%[6;26H[?25h[?25l[35;73H~@k[6;26H[35;73H   [6;18H[1;34r[1;1H[L[1;35r[1;13Hs.pop();[35;83H[K[35;83H54,18[9C78%[6;18H[?25h[?25l[35;73H~@k[6;18H[35;73H   [6;2H[1;34r[1;1H[L[1;35r[1;13Hch = s.top();[35;83H[K[35;83H53,2[10C77%[6;2H[?25h[?25l[35;73H~@k[6;2H[35;73H   [6;19H[1;34r[1;1H[L[1;35r[1;9H[33mcase[m[30m[47m [31m')'[m[30m[47m:[35;83H[K[35;83H52,19[9C75%[6;19H[?25h[?25l[35;73H~@k[6;19H[35;73H   [6;30H[1;34r[1;1H[L[1;35r[1;9H[33mswitch[m[30m[47m (expr[i]){[35;83H[K[35;83H51,30[9C73%[6;30H[?25h[?25l[35;73H~@k[6;30H[35;73H   [6;49H[1;34r[1;1H[L[1;35r[35;83H[K[35;83H50,49[9C72%[6;49H[?25h[?25l[35;73H~@k[6;49H[35;73H   [6;21H[1;34r[1;1H[L[1;35r[1;12H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H49,21[9C70%[6;21H[?25h[?25l[35;73H~@k[6;21H[35;73H   [6;26H[1;34r[1;1H[L[1;35r[1;9H[33mif[m[30m[47m (s.empty())[35;83H[K[35;83H48,26[9C68%[6;26H[?25h[?25l[35;73H~@k[6;26H[35;73H   [6;17H[1;34r[1;1H[L[1;35r[35;83H[K[35;83H47,10-17      67%[6;17H[?25h[?25l[35;73H~@k[6;17H[35;73H   [6;26H[1;34r[1;1H[L[1;35r[1;9H}[35;83H[K[35;83H46,26[9C65%[6;26H[?25h[?25l[1;34r[1;1H[L[1;35r[1;13H[33mcontinue[m[30m[47m;[35;83H[K[35;83H45,2[10C63%[6;2H[?25h[?25l[35;73H~@k[6;2H[35;73H   [6;25H[1;34r[1;1H[L[1;35r[1;13Hs.push(expr[i]);[35;83H[K[35;83H44,25[9C62%[6;25H[?25h[?25l[35;73H~@k[6;25H[35;73H   [6;22H[1;34r[1;1H[L[1;35r[1;9H[33mif[m[30m[47m (expr[i]==[31m'('[m[30m[47m||expr[i]==[31m'['[m[30m[47m||expr[i]==[31m'{'[m[30m[47m || expr[i] == [31m'<'[m[30m[47m){[6;12H[46m([9C)[m[30m[47m[35;83H[K[35;83H43,22[9C60%[6;22H[?25h[?25l[35;73H~@k[6;22H[35;73H   [6;1H[1;34r[1;1H[L[1;35r[1;5H[33mfor[m[30m[47m ([32mint[m[30m[47m i=[31m0[m[30m[47m; i<expr.length(); i++){[7;12H([9C)[35;83H[K[35;83H42,0-1[8C59%[6;1H[?25h[?25l[35;73H~@k[6;1H[35;73H   [6;10H[1;34r[1;1H[L[1;35r[35;83H[K[35;83H41,10[9C57%[6;10H[?25h[?25l[35;73H~@k[6;10H[35;73H   [6;22H[1;34r[1;1H[L[1;35r[1;5H[32mchar[m[30m[47m ch;[35;83H[K[35;83H40,22[9C55%[6;22H[?25h[?25l[35;73H~@k[6;22H[35;73H   [6;29H[1;34r[1;1H[L[1;35r[1;5Hstack<[32mchar[m[30m[47m> s;[35;83H[K[35;83H39,29[9C54%[6;29H[?25h[?25l[35;73H~@k[6;29H[35;73H   [6;72H[1;34r[1;1H[L[1;35r[1;1H[32mbool[m[30m[47m is_balanced(string expr) {[6;72H[46m{[9;9H}[m[30m[47m[35;83H[K[35;83H38,72[9C52%[6;72H[?25h[?25l[35;73H~@k[6;72H[35;73H   [6;40H[1;34r[1;1H[L[1;35r[7;72H{[10;9H}[35;83H[K[35;83H37,40[9C50%[6;40H[?25h[?25l[1;34r[1;1H[L[1;35r[1;1H}[35;83H[K[35;83H36,2[10C49%[6;2H[?25h[?25l[35;73H~@k[6;2H[35;73H   [6;13H[1;34r[1;1H[L[1;35r[1;9H}[35;83H[K[35;83H35,13[9C47%[6;13H[?25h[?25l[35;73H~@k[6;13H[35;73H   [6;19H[1;34r[1;1H[L[1;35r[1;17H[33mreturn[m[30m[47m [31mtrue[m[30m[47m;[35;83H[K[35;83H34,19[9C45%[6;19H[?25h[?25l[35;73H~@k[6;19H[35;73H   [6;32H[1;34r[1;1H[L[1;35r[1;9H[33melse[m[30m[47m{[35;83H[K[35;83H33,32[9C44%[6;32H[?25h[?25l[35;73H~@k[6;32H[35;73H   [6;1H[1;34r[1;1H[L[1;35r[1;9H}[35;83H[K[35;83H32,0-1[8C42%[6;1H[?25h[?25l[35;73H~@k[6;1H[35;73H   [6;1H[1;34r[1;1H[L[1;35r[1;17H[33mreturn[m[30m[47m [31mfalse[m[30m[47m;[35;83H[K[35;83H31,1[10C40%[6;1H[?25h[?25l[1;34r[1;1H[L[1;35r[1;17Hcout << [31m"invalid delmiter"[m[30m[47m << endl;[4;13H[46m{[6;9H}[m[30m[47m[35;83H[K[35;83H30,2-9[8C39%[6;9H[?25h[?25l[35;73H~@k[6;9H[35;73H   [6;28H[1;34r[1;1H[L[1;35r[1;9H[33mif[m[30m[47m(found != string::npos){[5;13H{[7;9H}[35;83H[K[35;83H29,14-28      37%[6;28H[?25h[?25l[35;73H~@k[6;28H[35;73H   [6;13H[1;34r[1;1H[L[1;35r[1;9H[32msize_t[m[30m[47m found = input.find_first_not_of([31m"()[]{}<>"[m[30m[47m);[6;13H[46m{[8;9H}[m[30m[47m[35;83H[K[35;83H28,6-13[7C36%[6;13H[?25h[?25l[35;73H~@k[6;13H[35;73H   [6;9H[1;34r[1;1H[L[1;35r[1;9H[34m//char good[] = [m[30m[47m[31m"(,),[,],{,},<,>"[m[30m[47m[34m;[m[30m[47m[3;34H[46m{[6;9H}[m[30m[47m[7;13H{[9;9H}[35;83H[K[35;83H27,2-9[8C34%[6;9H[?25h[?25l[35;73H~@k[6;9H[35;73H   [6;29H[1;34r[1;1H[L[1;35r[1;1H[32mbool[m[30m[47m is_delimiter(string &input){[4;34H{[7;9H}[35;83H[K[35;83H26,15-29      32%[6;29H[?25h[?25l[35;73H~@k[6;29H[35;73H   [6;51H[1;34r[1;1H[L[1;35r[35;83H[K[35;83H25,37-51      31%[6;51H[?25h[?25l[35;73H~@k[6;51H[35;73H   [6;34H[1;34r[1;1H[L[1;35r[1;1H}[6;34H[46m{[9;9H}[m[30m[47m[35;83H[K[35;83H24,27-34      29%[6;34H[?25h[?25l[35;73H~@k[6;34H[35;73H   [6;59H[1;34r[1;1H[L[1;35r[1;9H[33mreturn[m[30m[47m input;[7;34H{[10;9H}[35;83H[K[35;83H23,52-59      27%[6;59H[?25h[?25l[35;73H~@k[6;59H[35;73H   [6;42H[1;34r[1;1H[L[1;35r[1;17H}[35;83H[K[35;83H22,35-42      26%[6;42H[?25h[?25l[35;73H~@k[6;42H[35;73H   [6;33H[1;34r[1;1H[L[1;35r[1;17Hinput.erase( remove(input.begin(), input.end(), bad[i]), input.end());[6;33H[46m{[16;1H}[m[30m[47m[35;83H[K[35;83H21,33[9C24%[6;33H[?25h[?25l[35;73H~@k[6;33H[35;73H   [6;1H[1;34r[1;1H[L[1;35r[1;9H[33mfor[m[30m[47m([32munsigned[m[30m[47m [32mint[m[30m[47m i = [31m0[m[30m[47m; i < strlen(bad); ++i){[7;33H{[17;1H}[35;83H[K[35;83H20,0-1[8C22%[6;1H[?25h[?25l[35;73H^[[6;1H[35;73H  [6;1H[35;73H^[[6;1H[35;73H  [6;1H[?25h[?25l[35;73H:[6;1H[35;73H[K[35;1